{"version":3,"file":"layout.mjs","sources":["../../../../../../../src/components-examples/cdk/layout/breakpoint-observer-overview/breakpoint-observer-overview-example.ts","../../../../../../../src/components-examples/cdk/layout/breakpoint-observer-overview/breakpoint-observer-overview-example.html","../../../../../../../src/components-examples/cdk/layout/layout_public_index.ts"],"sourcesContent":["import {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Component, OnDestroy} from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/** @title Respond to viewport changes with BreakpointObserver */\n@Component({\n  selector: 'breakpoint-observer-overview-example',\n  templateUrl: 'breakpoint-observer-overview-example.html',\n  styleUrl: 'breakpoint-observer-overview-example.css',\n  standalone: true,\n})\nexport class BreakpointObserverOverviewExample implements OnDestroy {\n  destroyed = new Subject<void>();\n  currentScreenSize: string;\n\n  // Create a map to display breakpoint names for demonstration purposes.\n  displayNameMap = new Map([\n    [Breakpoints.XSmall, 'XSmall'],\n    [Breakpoints.Small, 'Small'],\n    [Breakpoints.Medium, 'Medium'],\n    [Breakpoints.Large, 'Large'],\n    [Breakpoints.XLarge, 'XLarge'],\n  ]);\n\n  constructor(breakpointObserver: BreakpointObserver) {\n    breakpointObserver\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n      ])\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(result => {\n        for (const query of Object.keys(result.breakpoints)) {\n          if (result.breakpoints[query]) {\n            this.currentScreenSize = this.displayNameMap.get(query) ?? 'Unknown';\n          }\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n}\n","<p>\n  Resize your browser window to see the current screen size change.\n</p>\n<p>\n  The current screen size is <strong>{{currentScreenSize}}</strong>\n</p>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":";;;;;;;AAKA;MAOa,iCAAiC,CAAA;AAa5C,IAAA,WAAA,CAAY,kBAAsC,EAAA;AAZlD,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,OAAO,EAAQ,CAAC;;QAIhC,IAAc,CAAA,cAAA,GAAG,IAAI,GAAG,CAAC;AACvB,YAAA,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC9B,YAAA,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC;AAC5B,YAAA,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC9B,YAAA,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,CAAC;AAC5B,YAAA,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC;AAC/B,SAAA,CAAC,CAAC;QAGD,kBAAkB;AACf,aAAA,OAAO,CAAC;AACP,YAAA,WAAW,CAAC,MAAM;AAClB,YAAA,WAAW,CAAC,KAAK;AACjB,YAAA,WAAW,CAAC,MAAM;AAClB,YAAA,WAAW,CAAC,KAAK;AACjB,YAAA,WAAW,CAAC,MAAM;SACnB,CAAC;AACD,aAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC/B,SAAS,CAAC,MAAM,IAAG;AAClB,YAAA,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAAE;AACnD,gBAAA,IAAI,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;AAC7B,oBAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC;iBACtE;aACF;AACH,SAAC,CAAC,CAAC;KACN;IAED,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AACtB,QAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;KAC3B;qHAnCU,iCAAiC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAjC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,eAAA,EAAA,IAAA,EAAA,iCAAiC,gGCZ9C,kKAMA,EAAA,MAAA,EAAA,CAAA,kCAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;kGDMa,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAN7C,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,sCAAsC,cAGpC,IAAI,EAAA,QAAA,EAAA,kKAAA,EAAA,MAAA,EAAA,CAAA,kCAAA,CAAA,EAAA,CAAA;;;AEVlB;;AAEG;;;;"}