{"version":3,"file":"aria-accordion.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-configurable/accordion-configurable-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-configurable/accordion-configurable-example.html","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-single-expansion/accordion-single-expansion-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-single-expansion/accordion-single-expansion-example.html","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-multi-expansion/accordion-multi-expansion-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-multi-expansion/accordion-multi-expansion-example.html","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-disabled-focusable/accordion-disabled-focusable-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-disabled-focusable/accordion-disabled-focusable-example.html","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-disabled-skipped/accordion-disabled-skipped-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-disabled-skipped/accordion-disabled-skipped-example.html","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-disabled/accordion-disabled-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/aria/accordion/accordion-disabled/accordion-disabled-example.html"],"sourcesContent":["import {Component, computed, model, Signal} from '@angular/core';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {\n  AccordionGroup,\n  AccordionTrigger,\n  AccordionPanel,\n  AccordionContent,\n} from '@angular/aria/accordion';\n\n/** @title Configurable Accordion using UI Patterns. */\n@Component({\n  selector: 'accordion-configurable-example',\n  exportAs: 'AccordionConfigurableExample',\n  templateUrl: 'accordion-configurable-example.html',\n  styleUrl: '../accordion-examples.css', // Point to shared CSS\n  standalone: true,\n  imports: [\n    ReactiveFormsModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    AccordionGroup,\n    AccordionTrigger,\n    AccordionPanel,\n    AccordionContent,\n  ],\n})\nexport class AccordionConfigurableExample {\n  // Accordion Group Properties\n  wrap = new FormControl(true, {nonNullable: true});\n  multi = new FormControl(true, {nonNullable: true});\n  disabled = new FormControl(false, {nonNullable: true});\n  skipDisabled = new FormControl(true, {nonNullable: true});\n  expandedIds = model<string[]>(['item1']);\n\n  // Example items\n  items = ['item1', 'item2', 'item3', 'item4', 'item5'];\n\n  expansionIcon(item: string): Signal<string> {\n    return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));\n  }\n}\n","<div class=\"example-accordion-controls\">\n  <mat-checkbox [formControl]=\"wrap\">Wrap (ArrowKey-only)</mat-checkbox>\n  <mat-checkbox [formControl]=\"multi\">Multi</mat-checkbox>\n  <mat-checkbox [formControl]=\"disabled\">Disabled</mat-checkbox>\n  <mat-checkbox [formControl]=\"skipDisabled\">Skip Disabled</mat-checkbox>\n\n  <mat-form-field subscriptSizing=\"dynamic\" appearance=\"outline\">\n    <mat-label>Expanded Items</mat-label>\n    <mat-select [(value)]=\"expandedIds\" multiple>\n      @for (item of items; track item) {\n        <mat-option [value]=\"item\">{{item}}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"multi.value\"\n  [disabled]=\"disabled.value\"\n  [skipDisabled]=\"skipDisabled.value\"\n  [wrap]=\"wrap.value\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\" /></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import {Component, computed, model, Signal} from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {\n  AccordionGroup,\n  AccordionTrigger,\n  AccordionPanel,\n  AccordionContent,\n} from '@angular/aria/accordion';\n\n/** @title Accordion with single expansion. */\n@Component({\n  selector: 'accordion-single-expansion-example',\n  templateUrl: 'accordion-single-expansion-example.html',\n  styleUrl: '../accordion-examples.css',\n  standalone: true,\n  imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent],\n})\nexport class AccordionSingleExpansionExample {\n  expandedIds = model<string[]>([]);\n\n  expansionIcon(item: string): Signal<string> {\n    return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));\n  }\n}\n","<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"false\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\"></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item3\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item4\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item5\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import {Component, computed, model, Signal} from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {\n  AccordionGroup,\n  AccordionTrigger,\n  AccordionPanel,\n  AccordionContent,\n} from '@angular/aria/accordion';\n\n/** @title Accordion with multi-expansion. */\n@Component({\n  selector: 'accordion-multi-expansion-example',\n  templateUrl: 'accordion-multi-expansion-example.html',\n  styleUrl: '../accordion-examples.css',\n  standalone: true,\n  imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent],\n})\nexport class AccordionMultiExpansionExample {\n  expandedIds = model<string[]>([]);\n\n  expansionIcon(item: string): Signal<string> {\n    return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));\n  }\n}\n","<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1. Multiple items can be expanded.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\"></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item3\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item4\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item5\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import {Component, computed, model, Signal} from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {\n  AccordionGroup,\n  AccordionTrigger,\n  AccordionPanel,\n  AccordionContent,\n} from '@angular/aria/accordion';\n\n/** @title Accordion with focusable disabled items. */\n@Component({\n  selector: 'accordion-disabled-focusable-example',\n  templateUrl: 'accordion-disabled-focusable-example.html',\n  styleUrl: '../accordion-examples.css',\n  standalone: true,\n  imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent],\n})\nexport class AccordionDisabledFocusableExample {\n  expandedIds = model<string[]>([]);\n\n  expansionIcon(item: string): Signal<string> {\n    return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));\n  }\n}\n","<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [skipDisabled]=\"false\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2. This should not be expandable if trigger is disabled.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import {Component, computed, model, Signal} from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {\n  AccordionGroup,\n  AccordionTrigger,\n  AccordionPanel,\n  AccordionContent,\n} from '@angular/aria/accordion';\n\n/** @title Accordion with skipped disabled items. */\n@Component({\n  selector: 'accordion-disabled-skipped-example',\n  templateUrl: 'accordion-disabled-skipped-example.html',\n  styleUrl: '../accordion-examples.css',\n  standalone: true,\n  imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent],\n})\nexport class AccordionDisabledSkippedExample {\n  expandedIds = model<string[]>([]);\n\n  expansionIcon(item: string): Signal<string> {\n    return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));\n  }\n}\n","<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [skipDisabled]=\"true\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2. This should not be reachable or expandable.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n","import {Component, computed, model, Signal} from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {\n  AccordionGroup,\n  AccordionTrigger,\n  AccordionPanel,\n  AccordionContent,\n} from '@angular/aria/accordion';\n\n/** @title Disabled Accordion. */\n@Component({\n  selector: 'accordion-disabled-example',\n  templateUrl: 'accordion-disabled-example.html',\n  styleUrl: '../accordion-examples.css',\n  standalone: true,\n  imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent],\n})\nexport class AccordionDisabledExample {\n  expandedIds = model<string[]>(['item1']);\n\n  expansionIcon(item: string): Signal<string> {\n    return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));\n  }\n}\n","<div ngAccordionGroup class=\"example-accordion-group\" [(value)]=\"expandedIds\" [disabled]=\"true\">\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\" /></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n"],"names":["i2","i3","i5","i1"],"mappings":"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"}