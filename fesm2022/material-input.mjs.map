{"version":3,"file":"material-input.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-clearable/input-clearable-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-error-state-matcher/input-error-state-matcher-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-errors/input-errors-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-form/input-form-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-hint/input-hint-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-overview/input-overview-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-prefix-suffix/input-prefix-suffix-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/input/input-harness/input-harness-example.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n/**\n * @title Input with a clear button\n */\n@Component({\n  selector: 'input-clearable-example',\n  templateUrl: './input-clearable-example.html',\n  styleUrl: './input-clearable-example.css',\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule, MatIconModule],\n})\nexport class InputClearableExample {\n  value = 'Clear me';\n}\n","import {Component} from '@angular/core';\nimport {\n  FormControl,\n  FormGroupDirective,\n  NgForm,\n  Validators,\n  FormsModule,\n  ReactiveFormsModule,\n} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n\n/** @title Input with a custom ErrorStateMatcher */\n@Component({\n  selector: 'input-error-state-matcher-example',\n  templateUrl: './input-error-state-matcher-example.html',\n  styleUrl: './input-error-state-matcher-example.css',\n  imports: [FormsModule, MatFormFieldModule, MatInputModule, ReactiveFormsModule],\n})\nexport class InputErrorStateMatcherExample {\n  emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n\n  matcher = new MyErrorStateMatcher();\n}\n","import {Component} from '@angular/core';\nimport {FormControl, Validators, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n/**\n * @title Input with error messages\n */\n@Component({\n  selector: 'input-errors-example',\n  templateUrl: 'input-errors-example.html',\n  styleUrl: 'input-errors-example.css',\n  imports: [FormsModule, MatFormFieldModule, MatInputModule, ReactiveFormsModule],\n})\nexport class InputErrorsExample {\n  emailFormControl = new FormControl('', [Validators.required, Validators.email]);\n}\n","import {Component} from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule} from '@angular/forms';\n\n/**\n * @title Inputs in a form\n */\n@Component({\n  selector: 'input-form-example',\n  templateUrl: 'input-form-example.html',\n  styleUrl: 'input-form-example.css',\n  imports: [FormsModule, MatFormFieldModule, MatInputModule],\n})\nexport class InputFormExample {}\n","import {Component} from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule} from '@angular/forms';\n\n/**\n * @title Input with hints\n */\n@Component({\n  selector: 'input-hint-example',\n  templateUrl: 'input-hint-example.html',\n  styleUrl: 'input-hint-example.css',\n  imports: [FormsModule, MatFormFieldModule, MatInputModule],\n})\nexport class InputHintExample {}\n","import {Component} from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule} from '@angular/forms';\n\n/**\n * @title Basic Inputs\n */\n@Component({\n  selector: 'input-overview-example',\n  styleUrl: 'input-overview-example.css',\n  templateUrl: 'input-overview-example.html',\n  imports: [FormsModule, MatFormFieldModule, MatInputModule],\n})\nexport class InputOverviewExample {}\n","import {Component} from '@angular/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule} from '@angular/forms';\n\n/**\n * @title Inputs with prefixes and suffixes\n */\n@Component({\n  selector: 'input-prefix-suffix-example',\n  templateUrl: 'input-prefix-suffix-example.html',\n  styleUrl: 'input-prefix-suffix-example.css',\n  imports: [FormsModule, MatFormFieldModule, MatInputModule, MatIconModule],\n})\nexport class InputPrefixSuffixExample {}\n","import {Component, signal} from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n/**\n * @title Testing with MatInputHarness\n */\n@Component({\n  selector: 'input-harness-example',\n  templateUrl: 'input-harness-example.html',\n  imports: [MatFormFieldModule, MatInputModule],\n})\nexport class InputHarnessExample {\n  inputType = signal('number');\n  disabled = signal(false);\n}\n"],"names":["deps","target","i0","ɵɵFactoryTarget","Component","isStandalone","selector","ngImport","template","MatFormFieldModule","kind","type","i1","MatFormField","inputs","exportAs","MatLabel","MatSuffix","MatInputModule","i2","MatInput","FormsModule","i3","DefaultValueAccessor","NgControlStatus","NgModel","outputs","MatButtonModule","i4","MatIconButton","MatIconModule","i5","MatIcon","decorators","styles","MyErrorStateMatcher","isErrorState","control","form","submitted","invalid","dirty","touched","isSubmitted","imports","ɵNgNoValidate","NgControlStatusGroup","NgForm","MatError","ReactiveFormsModule","FormControlDirective","MatPrefix","inputType","signal","ngDevMode","debugName"],"mappings":"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"}