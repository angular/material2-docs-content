{"version":3,"file":"cdk-layout.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/layout/breakpoint-observer-overview/breakpoint-observer-overview-example.ts"],"sourcesContent":["import {Component, OnDestroy, inject} from '@angular/core';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/** @title Respond to viewport changes with BreakpointObserver */\n@Component({\n  selector: 'breakpoint-observer-overview-example',\n  templateUrl: 'breakpoint-observer-overview-example.html',\n  styleUrl: 'breakpoint-observer-overview-example.css',\n})\nexport class BreakpointObserverOverviewExample implements OnDestroy {\n  destroyed = new Subject<void>();\n  currentScreenSize: string;\n\n  // Create a map to display breakpoint names for demonstration purposes.\n  displayNameMap = new Map([\n    [Breakpoints.XSmall, 'XSmall'],\n    [Breakpoints.Small, 'Small'],\n    [Breakpoints.Medium, 'Medium'],\n    [Breakpoints.Large, 'Large'],\n    [Breakpoints.XLarge, 'XLarge'],\n  ]);\n\n  constructor() {\n    inject(BreakpointObserver)\n      .observe([\n        Breakpoints.XSmall,\n        Breakpoints.Small,\n        Breakpoints.Medium,\n        Breakpoints.Large,\n        Breakpoints.XLarge,\n      ])\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(result => {\n        for (const query of Object.keys(result.breakpoints)) {\n          if (result.breakpoints[query]) {\n            this.currentScreenSize = this.displayNameMap.get(query) ?? 'Unknown';\n          }\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n}\n"],"names":["BreakpointObserverOverviewExample","destroyed","Subject","currentScreenSize","displayNameMap","Map","Breakpoints","XSmall","Medium","Large","XLarge","constructor","BreakpointObserver","observe","Small","pipe","takeUntil","subscribe","result","query","Object","keys","breakpoints","get","deps","target","i0","ɵɵFactoryTarget","Component","isStandalone","selector","ngImport","template","decorators","styles"],"mappings":";;;;;;AAiBI,MAAYA,iCAAkB,CAAA;EAC9BC,SAAY,GAAA,IAAAC,OAAM;EAClBC,iBAAY;EAGbC,cAAE,GAAA,IAAAC,GAAA,CAAA,CAEH,CAAAC,WAAA,CAAAC,MAAA,EAAA,QAAA,CAAA,gCAEK,CAAAD,WAAA,CAAAE,MAAQ,EAAA,QAAA,CAAA,EACP,CAAAF,WAAA,CAAAG,KAAA,EAAY,OAAM,CAAA,EAClB,CAAAH,WAAA,CAAAI,MAAW,EAAM,QAAA,CAAA,CACjB,CAAA;EAEAC,WAAA,GAAA;UACA,CAAAC,kBAAA,CAAA,CACDC,OAAA,CAAA,YACS,CAAAN,MAAO,EACfD,WAAW,CAAAQ,KAAA,EACTR,WAAA,CAAIE,MAAM,EACRF,WAAA,CAAAG,KAAK,aACN,CAAAC,MAAA,GAELK,IAAG,CAAAC,SAAA,CAAA,IAAA,CAAAf,SAAA,CAAA,CAAA,CACNgB,SAAA,CAAAC,MAAA,IAAA;MAEU,KAAA,MAAAC,KAAA,IAAAC,MAAA,CAAAC,IAAA,CAAAH,MAAA,CAAAI,WAAA,CAAA,EAAA;AACT,QAAA,IAAKJ,MAAA,CAAAI,WAAiB,CAAAH,KAAA,CAAA,EAAA;AAClB,UAAA,IAAC,CAAAhB,iBAAqB,GAAA,IAAA,CAAAC,cAAA,CAAAmB,GAAA,CAAAJ,KAAA,CAAA,IAAA,SAAA;AAC3B;;AAnCU,KAAA,CAAA;;;;;;;;;;UAMGnB,iCAAkB;IAAAwB,IAAA,EAAA,EAAA;AAAAC,IAAAA,MAAA,EAAAC,EAAA,CAAAC,eAAA,CAAAC;AAAA,GAAA,CAAA;;;;UAAlB5B,iCAAkB;IAAA6B,YAAA,EAAA,IAAA;IAAAC,QAAA,EAAA,sCAAA;AAAAC,IAAAA,QAAA,EAAAL,EAAA;AAAAM,IAAAA,QAAA;;;;;;;;QAAlBhC,iCAAkB;EAAAiC,UAAA,EAAA,CAAA;UANlCL;;gBACE,sCAAgC;MAAAI,QAAA,EAAA,kKAAA;MAAAE,MAAA,EAAA,CAAA,kCAAA;AAAA,KAAA;;;;;;;"}