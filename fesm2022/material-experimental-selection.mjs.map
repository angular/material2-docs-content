{"version":3,"file":"material-experimental-selection.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material-experimental/selection/mat-selection-column/mat-selection-column-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material-experimental/selection/mat-selection-list/mat-selection-list-example.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {SelectionChange, MatSelectionModule} from '@angular/material-experimental/selection';\nimport {MatTableModule} from '@angular/material/table';\n\n/**\n * @title Table that uses `matSelectionColumn` which allows users to select rows.\n */\n@Component({\n  selector: 'mat-selection-column-example',\n  templateUrl: 'mat-selection-column-example.html',\n  styleUrl: 'mat-selection-column-example.css',\n  imports: [MatTableModule, MatSelectionModule],\n})\nexport class MatSelectionColumnExample {\n  displayedColumns: string[] = ['select', 'position', 'name', 'weight', 'symbol'];\n  dataSource = ELEMENT_DATA;\n  selected: string[] = [];\n\n  selectionChanged(event: SelectionChange<PeriodicElement>) {\n    this.selected = event.after.map(select => select.value.name);\n  }\n}\n\ninterface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n","import {SelectionChange} from '@angular/cdk-experimental/selection';\nimport {Component} from '@angular/core';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {AsyncPipe} from '@angular/common';\nimport {MatSelectionModule} from '@angular/material-experimental/selection';\n\n/**\n * @title Mat Selection on a simple list.\n */\n@Component({\n  selector: 'mat-selection-list-example',\n  templateUrl: 'mat-selection-list-example.html',\n  imports: [MatSelectionModule, MatCheckboxModule, AsyncPipe],\n})\nexport class MatSelectionListExample {\n  data = ELEMENT_NAMES;\n  selected1: string[] = [];\n  selected2: string[] = [];\n  selected3: string[] = [];\n  selected4: string[] = [];\n\n  getCurrentSelected(event: SelectionChange<string>) {\n    return event.after.map(select => select.value);\n  }\n\n  trackByFn(index: number, value: string) {\n    return index;\n  }\n\n  changeElementName() {\n    this.data = ELEMENT_SYMBOLS;\n  }\n\n  reset() {\n    this.data = ELEMENT_NAMES;\n  }\n}\n\nconst ELEMENT_NAMES = [\n  'Hydrogen',\n  'Helium',\n  'Lithium',\n  'Beryllium',\n  'Boron',\n  'Carbon',\n  'Nitrogen',\n  'Oxygen',\n  'Fluorine',\n  'Neon',\n  'Sodium',\n  'Magnesium',\n  'Aluminum',\n  'Silicon',\n  'Phosphorus',\n  'Sulfur',\n  'Chlorine',\n  'Argon',\n  'Potassium',\n  'Calcium',\n];\n\nconst ELEMENT_SYMBOLS = [\n  'H',\n  'He',\n  'Li',\n  'Be',\n  'B',\n  'C',\n  'N',\n  'O',\n  'F',\n  'Ne',\n  'Na',\n  'Mg',\n  'Al',\n  'Si',\n  'P',\n  'S',\n  'Cl',\n  'Ar',\n  'K',\n  'Ca',\n];\n"],"names":["MatSelectionColumnExample","displayedColumns","ELEMENT_DATA","deps","target","i0","ɵɵFactoryTarget","Component","isStandalone","selector","ngImport","template","MatTableModule","kind","type","i2","MatSelection","inputs","outputs","exportAs","MatSelectionColumn","MatRowSelection","decorators","imports","styles","position","name","weight","symbol","MatSelectionListExample","ELEMENT_NAMES","selected1","selected2","getCurrentSelected","event","after","map","select","value","trackByFn","index","changeElementName","reset","MatSelectionModule","i1","MatSelectAll","MatSelectionToggle","MatCheckboxModule","MatCheckbox","AsyncPipe","ELEMENT_SYMBOLS"],"mappings":"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"}