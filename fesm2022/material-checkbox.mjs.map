{"version":3,"file":"material-checkbox.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/checkbox/checkbox-configurable/checkbox-configurable-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/checkbox/checkbox-harness/checkbox-harness-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/checkbox/checkbox-overview/checkbox-overview-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/checkbox/checkbox-reactive-forms/checkbox-reactive-forms-example.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, model} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\n\n/**\n * @title Configurable checkbox\n */\n@Component({\n  selector: 'checkbox-configurable-example',\n  templateUrl: 'checkbox-configurable-example.html',\n  styleUrl: 'checkbox-configurable-example.css',\n  imports: [MatCardModule, MatCheckboxModule, FormsModule, MatRadioModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxConfigurableExample {\n  readonly checked = model(false);\n  readonly indeterminate = model(false);\n  readonly labelPosition = model<'before' | 'after'>('after');\n  readonly disabled = model(false);\n}\n","import {ChangeDetectionStrategy, Component, input} from '@angular/core';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\n/**\n * @title Testing with MatCheckboxHarness\n */\n@Component({\n  selector: 'checkbox-harness-example',\n  templateUrl: 'checkbox-harness-example.html',\n  imports: [MatCheckboxModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxHarnessExample {\n  readonly disabled = input(true);\n}\n","import {ChangeDetectionStrategy, Component, computed, signal} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\nexport interface Task {\n  name: string;\n  completed: boolean;\n  subtasks?: Task[];\n}\n\n/**\n * @title Basic checkboxes\n */\n@Component({\n  selector: 'checkbox-overview-example',\n  templateUrl: 'checkbox-overview-example.html',\n  styleUrl: 'checkbox-overview-example.css',\n  imports: [MatCheckboxModule, FormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxOverviewExample {\n  readonly task = signal<Task>({\n    name: 'Parent task',\n    completed: false,\n    subtasks: [\n      {name: 'Child task 1', completed: false},\n      {name: 'Child task 2', completed: false},\n      {name: 'Child task 3', completed: false},\n    ],\n  });\n\n  readonly partiallyComplete = computed(() => {\n    const task = this.task();\n    if (!task.subtasks) {\n      return false;\n    }\n    return task.subtasks.some(t => t.completed) && !task.subtasks.every(t => t.completed);\n  });\n\n  update(completed: boolean, index?: number) {\n    this.task.update(task => {\n      if (index === undefined) {\n        task.completed = completed;\n        task.subtasks?.forEach(t => (t.completed = completed));\n      } else {\n        task.subtasks![index].completed = completed;\n        task.completed = task.subtasks?.every(t => t.completed) ?? true;\n      }\n      return {...task};\n    });\n  }\n}\n","import {JsonPipe} from '@angular/common';\nimport {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {FormBuilder, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\n\n/** @title Checkboxes with reactive forms */\n@Component({\n  selector: 'checkbox-reactive-forms-example',\n  templateUrl: 'checkbox-reactive-forms-example.html',\n  styleUrl: 'checkbox-reactive-forms-example.css',\n  imports: [FormsModule, ReactiveFormsModule, MatCheckboxModule, JsonPipe],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboxReactiveFormsExample {\n  private readonly _formBuilder = inject(FormBuilder);\n\n  readonly toppings = this._formBuilder.group({\n    pepperoni: false,\n    extracheese: false,\n    mushroom: false,\n  });\n}\n"],"names":["CheckboxConfigurableExample","checked","model","kind","type","i1","MatCard","selector","inputs","exportAs","MatCardContent","MatCheckboxModule","i2","MatCheckbox","outputs","FormsModule","i3","NgControlStatus","NgModel","MatRadioModule","i4","MatRadioGroup","MatRadioButton","changeDetection","i0","ChangeDetectionStrategy","OnPush","imports","input","ngDevMode","debugName","Component","CheckboxOverviewExample","task","signal","completed","subtasks","name","computed","some","t","every","update","index","deps","target","ɵɵFactoryTarget","isStandalone","ngImport","template","decorators","styles","CheckboxReactiveFormsExample","_formBuilder","inject","FormBuilder","NgControlStatusGroup","ReactiveFormsModule","FormGroupDirective","FormControlName","JsonPipe"],"mappings":"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"}