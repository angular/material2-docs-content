{"version":3,"file":"cdk-a11y.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/a11y/focus-monitor-directives/focus-monitor-directives-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/a11y/focus-monitor-focus-via/focus-monitor-focus-via-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/a11y/focus-monitor-overview/focus-monitor-overview-example.ts"],"sourcesContent":["import {ChangeDetectorRef, Component, NgZone, inject} from '@angular/core';\nimport {A11yModule, FocusOrigin} from '@angular/cdk/a11y';\n\n/** @title Monitoring focus with FocusMonitor */\n@Component({\n  selector: 'focus-monitor-directives-example',\n  templateUrl: 'focus-monitor-directives-example.html',\n  styleUrl: 'focus-monitor-directives-example.css',\n  imports: [A11yModule],\n})\nexport class FocusMonitorDirectivesExample {\n  private _ngZone = inject(NgZone);\n  private _cdr = inject(ChangeDetectorRef);\n\n  elementOrigin = this.formatOrigin(null);\n  subtreeOrigin = this.formatOrigin(null);\n\n  formatOrigin(origin: FocusOrigin): string {\n    return origin ? origin + ' focused' : 'blurred';\n  }\n\n  // Workaround for the fact that (cdkFocusChange) emits outside NgZone.\n  markForCheck() {\n    this._ngZone.run(() => this._cdr.markForCheck());\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  inject,\n} from '@angular/core';\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n/** @title Focusing with a specific FocusOrigin */\n@Component({\n  selector: 'focus-monitor-focus-via-example',\n  templateUrl: 'focus-monitor-focus-via-example.html',\n  styleUrl: 'focus-monitor-focus-via-example.css',\n  imports: [MatFormFieldModule, MatSelectModule],\n})\nexport class FocusMonitorFocusViaExample implements OnDestroy, AfterViewInit {\n  focusMonitor = inject(FocusMonitor);\n  private _cdr = inject(ChangeDetectorRef);\n  private _ngZone = inject(NgZone);\n\n  @ViewChild('monitored') monitoredEl: ElementRef<HTMLElement>;\n\n  origin = this.formatOrigin(null);\n\n  ngAfterViewInit() {\n    this.focusMonitor.monitor(this.monitoredEl).subscribe(origin =>\n      this._ngZone.run(() => {\n        this.origin = this.formatOrigin(origin);\n        this._cdr.markForCheck();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this.focusMonitor.stopMonitoring(this.monitoredEl);\n  }\n\n  formatOrigin(origin: FocusOrigin): string {\n    return origin ? origin + ' focused' : 'blurred';\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  inject,\n} from '@angular/core';\nimport {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\n\n/** @title Monitoring focus with FocusMonitor */\n@Component({\n  selector: 'focus-monitor-overview-example',\n  templateUrl: 'focus-monitor-overview-example.html',\n  styleUrl: 'focus-monitor-overview-example.css',\n})\nexport class FocusMonitorOverviewExample implements OnDestroy, AfterViewInit {\n  private _focusMonitor = inject(FocusMonitor);\n  private _cdr = inject(ChangeDetectorRef);\n  private _ngZone = inject(NgZone);\n\n  @ViewChild('element') element: ElementRef<HTMLElement>;\n  @ViewChild('subtree') subtree: ElementRef<HTMLElement>;\n\n  elementOrigin = this.formatOrigin(null);\n  subtreeOrigin = this.formatOrigin(null);\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.element).subscribe(origin =>\n      this._ngZone.run(() => {\n        this.elementOrigin = this.formatOrigin(origin);\n        this._cdr.markForCheck();\n      }),\n    );\n    this._focusMonitor.monitor(this.subtree, true).subscribe(origin =>\n      this._ngZone.run(() => {\n        this.subtreeOrigin = this.formatOrigin(origin);\n        this._cdr.markForCheck();\n      }),\n    );\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.element);\n    this._focusMonitor.stopMonitoring(this.subtree);\n  }\n\n  formatOrigin(origin: FocusOrigin): string {\n    return origin ? origin + ' focused' : 'blurred';\n  }\n}\n"],"names":["FocusMonitorDirectivesExample","_ngZone","inject","NgZone","_cdr","ChangeDetectorRef","formatOrigin","subtreeOrigin","deps","target","i0","ɵɵFactoryTarget","Component","isStandalone","selector","ngImport","template","A11yModule","kind","type","i1","CdkMonitorFocus","outputs","exportAs","decorators","imports","styles","FocusMonitorFocusViaExample","FocusMonitor","focusMonitor","monitor","monitoredEl","subscribe","origin","viewQueries","propertyName","first","predicate","descendants","MatFormFieldModule","MatFormField","inputs","MatLabel","MatSelectModule","i2","MatSelect","MatOption","FocusMonitorOverviewExample","_focusMonitor","elementOrigin","element","markForCheck","subtree"],"mappings":"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"}