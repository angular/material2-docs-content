{"version":3,"file":"cdk-dialog.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/dialog/cdk-dialog-data/cdk-dialog-data-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/dialog/cdk-dialog-overview/cdk-dialog-overview-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/dialog/cdk-dialog-styling/cdk-dialog-styling-example.ts"],"sourcesContent":["import {Component, inject} from '@angular/core';\nimport {Dialog, DIALOG_DATA, DialogModule} from '@angular/cdk/dialog';\n\nexport interface DialogData {\n  animal: 'panda' | 'unicorn' | 'lion';\n}\n\n/**\n * @title Injecting data when opening a dialog\n */\n@Component({\n  selector: 'cdk-dialog-data-example',\n  templateUrl: 'cdk-dialog-data-example.html',\n  imports: [DialogModule],\n})\nexport class CdkDialogDataExample {\n  dialog = inject(Dialog);\n\n  openDialog() {\n    this.dialog.open(CdkDialogDataExampleDialog, {\n      minWidth: '300px',\n      data: {\n        animal: 'panda',\n      },\n    });\n  }\n}\n\n@Component({\n  selector: 'cdk-dialog-data-example-dialog',\n  templateUrl: 'cdk-dialog-data-example-dialog.html',\n  styleUrl: './cdk-dialog-data-example-dialog.css',\n})\nexport class CdkDialogDataExampleDialog {\n  data = inject(DIALOG_DATA);\n}\n","import {Component, inject} from '@angular/core';\nimport {Dialog, DialogRef, DIALOG_DATA, DialogModule} from '@angular/cdk/dialog';\nimport {FormsModule} from '@angular/forms';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n/**\n * @title CDK Dialog Overview\n */\n@Component({\n  selector: 'cdk-dialog-overview-example',\n  templateUrl: 'cdk-dialog-overview-example.html',\n  imports: [FormsModule, DialogModule],\n})\nexport class CdkDialogOverviewExample {\n  dialog = inject(Dialog);\n\n  animal: string | undefined;\n  name: string;\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open<string>(CdkDialogOverviewExampleDialog, {\n      width: '250px',\n      data: {name: this.name, animal: this.animal},\n    });\n\n    dialogRef.closed.subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n}\n\n@Component({\n  selector: 'cdk-dialog-overview-example-dialog',\n  templateUrl: 'cdk-dialog-overview-example-dialog.html',\n  styleUrl: 'cdk-dialog-overview-example-dialog.css',\n  imports: [FormsModule],\n})\nexport class CdkDialogOverviewExampleDialog {\n  dialogRef = inject<DialogRef<string>>(DialogRef<string>);\n  data = inject(DIALOG_DATA);\n}\n","import {Component, inject} from '@angular/core';\nimport {Dialog, DialogModule, DialogRef} from '@angular/cdk/dialog';\n\n/**\n * @title CDK Dialog Styling\n */\n@Component({\n  selector: 'cdk-dialog-styling-example',\n  templateUrl: 'cdk-dialog-styling-example.html',\n  imports: [DialogModule],\n})\nexport class CdkDialogStylingExample {\n  dialog = inject(Dialog);\n\n  openDialog(): void {\n    this.dialog.open<string>(CdkDialogStylingExampleDialog);\n  }\n}\n\n@Component({\n  selector: 'cdk-dialog-styling-example-dialog',\n  templateUrl: 'cdk-dialog-styling-example-dialog.html',\n  styleUrl: 'cdk-dialog-styling-example-dialog.css',\n})\nexport class CdkDialogStylingExampleDialog {\n  dialogRef = inject(DialogRef);\n}\n"],"names":["CdkDialogDataExample","deps","target","i0","ɵɵFactoryTarget","Component","isStandalone","selector","ngImport","template","DialogModule","decorators","imports","styles","CdkDialogOverviewExample","dialog","inject","Dialog","animal","openDialog","name","dialogRef","closed","subscribe","result","console","FormsModule","kind","type","i1","DefaultValueAccessor","NgControlStatus","NgModel","inputs","outputs","exportAs","CdkDialogStylingExampleDialog"],"mappings":"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"}