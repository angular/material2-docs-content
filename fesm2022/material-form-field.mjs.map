{"version":3,"file":"material-form-field.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-appearance/form-field-appearance-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-custom-control/form-field-custom-control-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-error/form-field-error-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-harness/form-field-harness-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-hint/form-field-hint-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-label/form-field-label-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-overview/form-field-overview-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/form-field/form-field-prefix-suffix/form-field-prefix-suffix-example.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\n\n/** @title Form field appearance variants */\n@Component({\n  selector: 'form-field-appearance-example',\n  templateUrl: 'form-field-appearance-example.html',\n  imports: [MatFormFieldModule, MatInputModule, MatIconModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldAppearanceExample {}\n","import {FocusMonitor} from '@angular/cdk/a11y';\nimport {AsyncPipe, JsonPipe} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  booleanAttribute,\n  computed,\n  effect,\n  forwardRef,\n  inject,\n  input,\n  model,\n  signal,\n  untracked,\n  viewChild,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  FormsModule,\n  NgControl,\n  ReactiveFormsModule,\n  Validators,\n} from '@angular/forms';\nimport {\n  MAT_FORM_FIELD,\n  MatFormFieldControl,\n  MatFormFieldModule,\n} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {Subject} from 'rxjs';\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'form-field-custom-control-example',\n  templateUrl: 'form-field-custom-control-example.html',\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    forwardRef(() => MyTelInput),\n    MatIconModule,\n    AsyncPipe,\n    JsonPipe,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldCustomControlExample {\n  readonly form = new FormGroup({\n    tel: new FormControl(null),\n  });\n}\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(\n    public area: string,\n    public exchange: string,\n    public subscriber: string,\n  ) {}\n}\n\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'example-tel-input',\n  templateUrl: 'example-tel-input-example.html',\n  styleUrl: 'example-tel-input-example.css',\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\n  host: {\n    '[class.example-floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n  },\n  imports: [FormsModule, ReactiveFormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyTelInput implements ControlValueAccessor, MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n  readonly areaInput = viewChild.required<HTMLInputElement>('area');\n  readonly exchangeInput = viewChild.required<HTMLInputElement>('exchange');\n  readonly subscriberInput = viewChild.required<HTMLInputElement>('subscriber');\n  ngControl = inject(NgControl, {optional: true, self: true});\n  readonly parts: FormGroup<{\n    area: FormControl<string | null>;\n    exchange: FormControl<string | null>;\n    subscriber: FormControl<string | null>;\n  }>;\n  readonly stateChanges = new Subject<void>();\n  readonly touched = signal(false);\n  readonly controlType = 'example-tel-input';\n  readonly id = `example-tel-input-${MyTelInput.nextId++}`;\n  readonly _userAriaDescribedBy = input<string>('', {alias: 'aria-describedby'});\n  readonly _placeholder = input<string>('', {alias: 'placeholder'});\n  readonly _required = input<boolean, unknown>(false, {\n    alias: 'required',\n    transform: booleanAttribute,\n  });\n  readonly _disabledByInput = input<boolean, unknown>(false, {\n    alias: 'disabled',\n    transform: booleanAttribute,\n  });\n  readonly _value = model<MyTel | null>(null, {alias: 'value'});\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  protected readonly _formField = inject(MAT_FORM_FIELD, {\n    optional: true,\n  });\n\n  private readonly _focused = signal(false);\n  private readonly _disabledByCva = signal(false);\n  private readonly _disabled = computed(() => this._disabledByInput() || this._disabledByCva());\n  private readonly _focusMonitor = inject(FocusMonitor);\n  private readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef);\n\n  get focused(): boolean {\n    return this._focused();\n  }\n\n  get empty() {\n    const {\n      value: {area, exchange, subscriber},\n    } = this.parts;\n\n    return !area && !exchange && !subscriber;\n  }\n\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  get userAriaDescribedBy() {\n    return this._userAriaDescribedBy();\n  }\n\n  get placeholder(): string {\n    return this._placeholder();\n  }\n\n  get required(): boolean {\n    return this._required();\n  }\n\n  get disabled(): boolean {\n    return this._disabled();\n  }\n\n  get value(): MyTel | null {\n    return this._value();\n  }\n\n  get errorState(): boolean {\n    return this.parts.invalid && this.touched();\n  }\n  constructor() {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n\n    this.parts = inject(FormBuilder).group({\n      area: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\n      exchange: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(3)]],\n      subscriber: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(4)]],\n    });\n\n    effect(() => {\n      // Read signals to trigger effect.\n      this._placeholder();\n      this._required();\n      this._disabled();\n      this._focused();\n      // Propagate state changes.\n      untracked(() => this.stateChanges.next());\n    });\n\n    effect(() => {\n      if (this._disabled()) {\n        untracked(() => this.parts.disable());\n      } else {\n        untracked(() => this.parts.enable());\n      }\n    });\n\n    effect(() => {\n      const value = this._value() || new MyTel('', '', '');\n      untracked(() => this.parts.setValue(value));\n    });\n\n    this.parts.statusChanges.pipe(takeUntilDestroyed()).subscribe(() => {\n      this.stateChanges.next();\n    });\n\n    this.parts.valueChanges.pipe(takeUntilDestroyed()).subscribe(value => {\n      const tel = this.parts.valid\n        ? new MyTel(\n            this.parts.value.area || '',\n            this.parts.value.exchange || '',\n            this.parts.value.subscriber || '',\n          )\n        : null;\n      this._updateValue(tel);\n    });\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  onFocusIn() {\n    if (!this._focused()) {\n      this._focused.set(true);\n    }\n  }\n\n  onFocusOut(event: FocusEvent) {\n    if (!this._elementRef.nativeElement.contains(event.relatedTarget as Element)) {\n      this.touched.set(true);\n      this._focused.set(false);\n      this.onTouched();\n    }\n  }\n\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\n    if (!control.errors && nextElement) {\n      this._focusMonitor.focusVia(nextElement, 'program');\n    }\n  }\n\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\n    if (control.value.length < 1) {\n      this._focusMonitor.focusVia(prevElement, 'program');\n    }\n  }\n\n  setDescribedByIds(ids: string[]) {\n    const controlElement = this._elementRef.nativeElement.querySelector(\n      '.example-tel-input-container',\n    )!;\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\n  }\n\n  onContainerClick() {\n    if (this.parts.controls.subscriber.valid) {\n      this._focusMonitor.focusVia(this.subscriberInput(), 'program');\n    } else if (this.parts.controls.exchange.valid) {\n      this._focusMonitor.focusVia(this.subscriberInput(), 'program');\n    } else if (this.parts.controls.area.valid) {\n      this._focusMonitor.focusVia(this.exchangeInput(), 'program');\n    } else {\n      this._focusMonitor.focusVia(this.areaInput(), 'program');\n    }\n  }\n\n  writeValue(tel: MyTel | null): void {\n    this._updateValue(tel);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._disabledByCva.set(isDisabled);\n  }\n\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\n    this.autoFocusNext(control, nextElement);\n    this.onChange(this.value);\n  }\n\n  private _updateValue(tel: MyTel | null) {\n    const current = this._value();\n    if (\n      tel === current ||\n      (tel?.area === current?.area &&\n        tel?.exchange === current?.exchange &&\n        tel?.subscriber === current?.subscriber)\n    ) {\n      return;\n    }\n    this._value.set(tel);\n  }\n}\n","import {ChangeDetectionStrategy, Component, signal} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {FormControl, FormsModule, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {merge} from 'rxjs';\n\n/** @title Form field with error messages */\n@Component({\n  selector: 'form-field-error-example',\n  templateUrl: 'form-field-error-example.html',\n  styleUrl: 'form-field-error-example.css',\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldErrorExample {\n  readonly email = new FormControl('', [Validators.required, Validators.email]);\n\n  errorMessage = signal('');\n\n  constructor() {\n    merge(this.email.statusChanges, this.email.valueChanges)\n      .pipe(takeUntilDestroyed())\n      .subscribe(() => this.updateErrorMessage());\n  }\n\n  updateErrorMessage() {\n    if (this.email.hasError('required')) {\n      this.errorMessage.set('You must enter a value');\n    } else if (this.email.hasError('email')) {\n      this.errorMessage.set('Not a valid email');\n    } else {\n      this.errorMessage.set('');\n    }\n  }\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {FormControl, FormsModule, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\n/**\n * @title Testing with MatFormFieldHarness\n */\n@Component({\n  selector: 'form-field-harness-example',\n  templateUrl: 'form-field-harness-example.html',\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, ReactiveFormsModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldHarnessExample {\n  readonly requiredControl = new FormControl('Initial value', [Validators.required]);\n}\n","import {ChangeDetectionStrategy, Component, signal} from '@angular/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n/** @title Form field with hints */\n@Component({\n  selector: 'form-field-hint-example',\n  templateUrl: 'form-field-hint-example.html',\n  styleUrl: 'form-field-hint-example.css',\n  imports: [MatFormFieldModule, MatInputModule, MatSelectModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldHintExample {\n  protected readonly value = signal('');\n\n  protected onInput(event: Event) {\n    this.value.set((event.target as HTMLInputElement).value);\n  }\n}\n","import {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {FormBuilder, FormControl, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {FloatLabelType, MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {map} from 'rxjs/operators';\n\n/** @title Form field with label */\n@Component({\n  selector: 'form-field-label-example',\n  templateUrl: 'form-field-label-example.html',\n  styleUrl: 'form-field-label-example.css',\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldLabelExample {\n  readonly hideRequiredControl = new FormControl(false);\n  readonly floatLabelControl = new FormControl('auto' as FloatLabelType);\n  readonly options = inject(FormBuilder).group({\n    hideRequired: this.hideRequiredControl,\n    floatLabel: this.floatLabelControl,\n  });\n  protected readonly hideRequired = toSignal(this.hideRequiredControl.valueChanges);\n  protected readonly floatLabel = toSignal(\n    this.floatLabelControl.valueChanges.pipe(map(v => v || 'auto')),\n    {initialValue: 'auto'},\n  );\n}\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n/** @title Simple form field */\n@Component({\n  selector: 'form-field-overview-example',\n  templateUrl: 'form-field-overview-example.html',\n  styleUrl: 'form-field-overview-example.css',\n  imports: [MatFormFieldModule, MatInputModule, MatSelectModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldOverviewExample {}\n","import {ChangeDetectionStrategy, Component, signal} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\n\n/** @title Form field with prefix & suffix */\n@Component({\n  selector: 'form-field-prefix-suffix-example',\n  templateUrl: 'form-field-prefix-suffix-example.html',\n  styleUrl: 'form-field-prefix-suffix-example.css',\n  imports: [MatFormFieldModule, MatInputModule, MatButtonModule, MatIconModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormFieldPrefixSuffixExample {\n  hide = signal(true);\n  clickEvent(event: MouseEvent) {\n    this.hide.set(!this.hide());\n    event.stopPropagation();\n  }\n}\n"],"names":["kind","type","i1","MatFormField","selector","inputs","exportAs","MatLabel","MatHint","MatSuffix","MatInputModule","i2","MatInput","MatIconModule","i3","MatIcon","changeDetection","i0","ChangeDetectionStrategy","OnPush","FormFieldCustomControlExample","form","FormGroup","tel","FormControl","deps","target","ɵɵFactoryTarget","Component","isStandalone","ngImport","template","FormsModule","forwardRef","NgControlStatus","NgControlStatusGroup","RequiredValidator","ReactiveFormsModule","FormGroupDirective","outputs","FormControlName","MatFormFieldModule","MyTelInput","AsyncPipe","name","JsonPipe","decorators","imports","MyTel","area","subscriber","constructor","nextId","areaInput","viewChild","required","exchangeInput","subscriberInput","inject","NgControl","optional","self","parts","stateChanges","Subject","touched","signal","ngDevMode","debugName","controlType","id","_userAriaDescribedBy","input","alias","_placeholder","_required","transform","booleanAttribute","_disabledByInput","_value","model","onChange","onTouched","_formField","MAT_FORM_FIELD","_focused","_disabledByCva","_disabled","computed","_focusMonitor","FocusMonitor","_elementRef","ElementRef","focused","empty","exchange","shouldLabelFloat","userAriaDescribedBy","placeholder","value","errorState","invalid","ngControl","valueAccessor","group","Validators","minLength","maxLength","next","untracked","disable","enable","setValue","statusChanges","pipe","takeUntilDestroyed","subscribe","valueChanges","valid","_updateValue","ngOnDestroy","complete","onFocusIn","contains","event","relatedTarget","set","classPropertyName","publicName","isSignal","isRequired","transformFunction","host","properties","providers","provide","MatFormFieldControl","DefaultValueAccessor","styles","FormFieldErrorExample","email","merge","updateErrorMessage","hasError","errorMessage","MatError","FormControlDirective","FormFieldHintExample","hideRequiredControl","floatLabel","floatLabelControl","toSignal","map","v","MatCheckboxModule","MatCheckbox","MatRadioModule","MatRadioGroup","MatRadioButton","i5","i6","MatSelect","MatOption","i7","FormFieldPrefixSuffixExample","clickEvent","MatPrefix","MatButtonModule","MatIconButton","i4"],"mappings":"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"}