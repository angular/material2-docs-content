{"version":3,"file":"popover-edit.mjs","sources":["../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-cell-span-mat-table/popover-edit-cell-span-mat-table-example.ts","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-cell-span-mat-table/popover-edit-cell-span-mat-table-example.html","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-mat-table-flex/popover-edit-mat-table-flex-example.ts","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-mat-table-flex/popover-edit-mat-table-flex-example.html","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-mat-table/popover-edit-mat-table-example.ts","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-mat-table/popover-edit-mat-table-example.html","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-tab-out-mat-table/popover-edit-tab-out-mat-table-example.ts","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit-tab-out-mat-table/popover-edit-tab-out-mat-table-example.html","../../../../../../../src/components-examples/material-experimental/popover-edit/popover-edit_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {NgForm, FormsModule} from '@angular/forms';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatPopoverEditModule} from '@angular/material-experimental/popover-edit';\nimport {CdkPopoverEditModule} from '@angular/cdk-experimental/popover-edit';\nimport {MatTableModule} from '@angular/material/table';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nexport interface Person {\n  id: number;\n  firstName: string;\n  middleName: string;\n  lastName: string;\n}\n\nconst PERSON_DATA: Person[] = [\n  {id: 1, firstName: 'Terra', middleName: 'Maduin', lastName: 'Branford'},\n  {id: 2, firstName: 'Locke', middleName: '', lastName: 'Cole'},\n  {id: 3, firstName: 'Celes', middleName: 'Gestahl', lastName: 'Chere'},\n  {id: 4, firstName: 'Edgar', middleName: 'Roni', lastName: 'Figaro'},\n  {id: 5, firstName: 'Sabin', middleName: 'Rene', lastName: 'Figaro'},\n  {id: 6, firstName: 'Clyde', middleName: '\"Shadow\"', lastName: 'Arrowny'},\n  {id: 7, firstName: 'Setzer', middleName: '', lastName: 'Gabbiani'},\n  {id: 8, firstName: 'Cid', middleName: 'Del Norte', lastName: 'Marquez'},\n  {id: 9, firstName: 'Mog', middleName: '', lastName: 'McMoogle'},\n];\n\n/**\n * @title Material Popover Edit spanning multiple columns on a Material data-table\n */\n@Component({\n  selector: 'popover-edit-cell-span-mat-table-example',\n  styleUrls: ['popover-edit-cell-span-mat-table-example.css'],\n  templateUrl: 'popover-edit-cell-span-mat-table-example.html',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    CdkPopoverEditModule,\n    FormsModule,\n    MatPopoverEditModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n})\nexport class PopoverEditCellSpanMatTableExample {\n  displayedColumns: string[] = ['id', 'firstName', 'middleName', 'lastName'];\n  dataSource = new ExampleDataSource();\n\n  readonly preservedValues = new WeakMap<Person, any>();\n\n  onSubmit(person: Person, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    person.firstName = f.value['firstName'];\n    person.middleName = f.value['middleName'];\n    person.lastName = f.value['lastName'];\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<Person> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<Person[]>(PERSON_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<Person[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","<table class=\"example-table\" mat-table editable [dataSource]=\"dataSource\">\n  <ng-template #nameEdit let-ctx>\n    <div>\n      <form #f=\"ngForm\"\n          matEditLens\n          (ngSubmit)=\"onSubmit(ctx.person, f)\"\n          [matEditLensPreservedFormValue]=\"preservedValues.get(ctx.person)\"\n          (matEditLensPreservedFormValueChange)=\"preservedValues.set(ctx.person, $event)\">\n        <div mat-edit-content class=\"example-input-container\">\n          <mat-form-field>\n            <input matInput [ngModel]=\"ctx.person.firstName\" name=\"firstName\" required\n                [attr.cdkFocusInitial]=\"ctx.focus === 'firstName' || null\">\n          </mat-form-field>\n          <mat-form-field>\n            <input matInput [ngModel]=\"ctx.person.middleName\" name=\"middleName\"\n                [attr.cdkFocusInitial]=\"ctx.focus === 'middleName' || null\">\n          </mat-form-field>\n          <mat-form-field>\n            <input matInput [ngModel]=\"ctx.person.lastName\" name=\"lastName\" required\n                [attr.cdkFocusInitial]=\"ctx.focus === 'lastName' || null\">\n          </mat-form-field>\n        </div>\n\n        <div mat-edit-actions>\n          <button mat-button type=\"submit\">Confirm</button>\n          <button mat-button cdkEditRevert>Revert</button>\n          <button mat-button cdkEditClose>Close</button>\n        </div>\n      </form>\n    </div>\n  </ng-template>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"id\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let person\"> {{person.id}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"firstName\">\n    <th mat-header-cell *matHeaderCellDef> First Name </th>\n    <td mat-cell *matCellDef=\"let person\"\n        [matPopoverEdit]=\"nameEdit\"\n        [matPopoverEditContext]=\"{person: person, focus: 'firstName'}\"\n        [matPopoverEditColspan]=\"{after: 2}\">\n      {{person.firstName}}\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>edit</mat-icon></button>\n      </span>\n    </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"middleName\">\n    <th mat-header-cell *matHeaderCellDef> Middle Name </th>\n    <td mat-cell *matCellDef=\"let person\"\n        [matPopoverEdit]=\"nameEdit\"\n        [matPopoverEditContext]=\"{person: person, focus: 'middleName'}\"\n        [matPopoverEditColspan]=\"{before:1 , after: 1}\">\n      {{person.middleName}}\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>edit</mat-icon></button>\n      </span>\n    </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"lastName\">\n    <th mat-header-cell *matHeaderCellDef> Last Name </th>\n    <td mat-cell *matCellDef=\"let person\"\n        [matPopoverEdit]=\"nameEdit\"\n        [matPopoverEditContext]=\"{person: person, focus: 'lastName'}\"\n        [matPopoverEditColspan]=\"{before: 2}\">\n      {{person.lastName}}\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>edit</mat-icon></button>\n      </span>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","import {Component} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {NgForm, FormsModule} from '@angular/forms';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatPopoverEditModule} from '@angular/material-experimental/popover-edit';\nimport {MatTableModule} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n\n/**\n * @title Material Popover Edit on a flex Material data-table\n */\n@Component({\n  selector: 'popover-edit-mat-table-flex-example',\n  styleUrls: ['popover-edit-mat-table-flex-example.css'],\n  templateUrl: 'popover-edit-mat-table-flex-example.html',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    FormsModule,\n    MatPopoverEditModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n})\nexport class PopoverEditMatTableFlexExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n\n  readonly preservedNameValues = new WeakMap<PeriodicElement, any>();\n  readonly preservedWeightValues = new WeakMap<PeriodicElement, any>();\n\n  onSubmitName(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.name = f.value.name;\n  }\n\n  onSubmitWeight(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.weight = f.value.weight;\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","<mat-table class=\"example-table\" editable [dataSource]=\"dataSource\">\n  <!--\n    This edit lens is specified outside of the cell and must explicitly declare\n    its context. It could be reused in multiple cells.\n  -->\n  <ng-template #weightEdit let-element>\n    <div>\n      <form #f=\"ngForm\"\n          matEditLens\n          (ngSubmit)=\"onSubmitWeight(element, f)\"\n          [matEditLensPreservedFormValue]=\"preservedWeightValues.get(element)\"\n          (matEditLensPreservedFormValueChange)=\"preservedWeightValues.set(element, $event)\">\n        <div mat-edit-content>\n          <mat-form-field>\n            <input matInput type=\"number\" [ngModel]=\"element.weight\" name=\"weight\" required>\n          </mat-form-field>\n        </div>\n      </form>\n    </div>\n  </ng-template>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"nameEdit\">\n      {{element.name}}\n\n      <!-- This edit is defined in the cell and can implicitly access element -->\n      <ng-template #nameEdit>\n        <div>\n          <form #f=\"ngForm\"\n              matEditLens\n              (ngSubmit)=\"onSubmitName(element, f)\"\n              [matEditLensPreservedFormValue]=\"preservedNameValues.get(element)\"\n              (matEditLensPreservedFormValueChange)=\"preservedNameValues.set(element, $event)\">\n            <h2 mat-edit-title>Name</h2>\n            <div mat-edit-content>\n              <mat-form-field>\n                <input matInput [ngModel]=\"element.name\" name=\"name\" required>\n              </mat-form-field>\n            </div>\n            <div mat-edit-actions>\n              <button mat-button type=\"submit\">Confirm</button>\n              <button mat-button matEditRevert>Revert</button>\n              <button mat-button matEditClose>Close</button>\n            </div>\n          </form>\n        </div>\n      </ng-template>\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>edit</mat-icon></button>\n      </span>\n    </mat-cell>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"weightEdit\" [matPopoverEditContext]=\"element\">\n      {{element.weight}}\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>edit</mat-icon></button>\n      </span>\n      </mat-cell>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\n  </ng-container>\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n</mat-table>\n","import {Component} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {FormValueContainer, CdkPopoverEditModule} from '@angular/cdk-experimental/popover-edit';\nimport {NgForm, FormsModule} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {MatListModule} from '@angular/material/list';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatPopoverEditModule} from '@angular/material-experimental/popover-edit';\nimport {MatTableModule} from '@angular/material/table';\n\nexport type ElementType = 'Metal' | 'Semimetal' | 'Nonmetal';\n\nexport type FantasyElement = 'Earth' | 'Water' | 'Wind' | 'Fire' | 'Light' | 'Dark';\n\nexport interface PeriodicElement {\n  name: string;\n  type: ElementType;\n  position: number;\n  weight: number;\n  symbol: string;\n  fantasyCounterparts: FantasyElement[];\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {\n    position: 1,\n    name: 'Hydrogen',\n    type: 'Nonmetal',\n    weight: 1.0079,\n    symbol: 'H',\n    fantasyCounterparts: ['Fire', 'Wind', 'Light'],\n  },\n  {\n    position: 2,\n    name: 'Helium',\n    type: 'Nonmetal',\n    weight: 4.0026,\n    symbol: 'He',\n    fantasyCounterparts: ['Wind', 'Light'],\n  },\n  {\n    position: 3,\n    name: 'Lithium',\n    type: 'Metal',\n    weight: 6.941,\n    symbol: 'Li',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 4,\n    name: 'Beryllium',\n    type: 'Metal',\n    weight: 9.0122,\n    symbol: 'Be',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 5,\n    name: 'Boron',\n    type: 'Semimetal',\n    weight: 10.811,\n    symbol: 'B',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 6,\n    name: 'Carbon',\n    type: 'Nonmetal',\n    weight: 12.0107,\n    symbol: 'C',\n    fantasyCounterparts: ['Earth', 'Dark'],\n  },\n  {\n    position: 7,\n    name: 'Nitrogen',\n    type: 'Nonmetal',\n    weight: 14.0067,\n    symbol: 'N',\n    fantasyCounterparts: ['Wind'],\n  },\n  {\n    position: 8,\n    name: 'Oxygen',\n    type: 'Nonmetal',\n    weight: 15.9994,\n    symbol: 'O',\n    fantasyCounterparts: ['Fire', 'Water', 'Wind'],\n  },\n  {\n    position: 9,\n    name: 'Fluorine',\n    type: 'Nonmetal',\n    weight: 18.9984,\n    symbol: 'F',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 10,\n    name: 'Neon',\n    type: 'Nonmetal',\n    weight: 20.1797,\n    symbol: 'Ne',\n    fantasyCounterparts: ['Light'],\n  },\n  {\n    position: 11,\n    name: 'Sodium',\n    type: 'Metal',\n    weight: 22.9897,\n    symbol: 'Na',\n    fantasyCounterparts: ['Earth', 'Water'],\n  },\n  {\n    position: 12,\n    name: 'Magnesium',\n    type: 'Metal',\n    weight: 24.305,\n    symbol: 'Mg',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 13,\n    name: 'Aluminum',\n    type: 'Metal',\n    weight: 26.9815,\n    symbol: 'Al',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 14,\n    name: 'Silicon',\n    type: 'Semimetal',\n    weight: 28.0855,\n    symbol: 'Si',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 15,\n    name: 'Phosphorus',\n    type: 'Nonmetal',\n    weight: 30.9738,\n    symbol: 'P',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 16,\n    name: 'Sulfur',\n    type: 'Nonmetal',\n    weight: 32.065,\n    symbol: 'S',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 17,\n    name: 'Chlorine',\n    type: 'Nonmetal',\n    weight: 35.453,\n    symbol: 'Cl',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 18,\n    name: 'Argon',\n    type: 'Nonmetal',\n    weight: 39.948,\n    symbol: 'Ar',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 19,\n    name: 'Potassium',\n    type: 'Metal',\n    weight: 39.0983,\n    symbol: 'K',\n    fantasyCounterparts: [],\n  },\n  {\n    position: 20,\n    name: 'Calcium',\n    type: 'Metal',\n    weight: 40.078,\n    symbol: 'Ca',\n    fantasyCounterparts: [],\n  },\n];\n\nconst TYPES: readonly ElementType[] = ['Metal', 'Semimetal', 'Nonmetal'];\nconst FANTASY_ELEMENTS: readonly FantasyElement[] = [\n  'Earth',\n  'Water',\n  'Wind',\n  'Fire',\n  'Light',\n  'Dark',\n];\n\n/**\n * @title Material Popover Edit on a Material data-table\n */\n@Component({\n  selector: 'popover-edit-mat-table-example',\n  styleUrls: ['popover-edit-mat-table-example.css'],\n  templateUrl: 'popover-edit-mat-table-example.html',\n  standalone: true,\n  imports: [\n    MatTableModule,\n    CdkPopoverEditModule,\n    FormsModule,\n    MatPopoverEditModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatListModule,\n  ],\n})\nexport class PopoverEditMatTableExample {\n  displayedColumns: string[] = [\n    'position',\n    'name',\n    'type',\n    'weight',\n    'symbol',\n    'fantasyCounterpart',\n  ];\n  dataSource = new ExampleDataSource();\n\n  nameEditEnabled = true;\n\n  readonly TYPES = TYPES;\n  readonly FANTASY_ELEMENTS = FANTASY_ELEMENTS;\n\n  readonly nameValues = new FormValueContainer<PeriodicElement, any>();\n  readonly weightValues = new FormValueContainer<PeriodicElement, any>();\n  readonly typeValues = new FormValueContainer<PeriodicElement, any>();\n  readonly fantasyValues = new FormValueContainer<PeriodicElement, any>();\n\n  constructor(private readonly _snackBar: MatSnackBar) {}\n\n  onSubmitName(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.name = f.value.name;\n  }\n\n  onSubmitWeight(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.weight = f.value.weight;\n  }\n\n  onSubmitType(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.type = f.value.type[0];\n  }\n\n  onSubmitFantasyCounterparts(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.fantasyCounterparts = f.value.fantasyCounterparts;\n  }\n\n  goodJob(element: PeriodicElement) {\n    this._snackBar.open(`Way to go, ${element.name}!`, undefined, {duration: 2000});\n  }\n\n  badJob(element: PeriodicElement) {\n    this._snackBar.open(`You have failed me for the last time, #${element.position}.`, undefined, {\n      duration: 2000,\n    });\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","<table class=\"example-table\" mat-table editable [dataSource]=\"dataSource\">\n  <!--\n    This edit lens is specified outside of the cell and must explicitly declare\n    its context. It could be reused in multiple cells.\n  -->\n  <ng-template #weightEdit let-element>\n    <div>\n      <form #f=\"ngForm\"\n          matEditLens\n          (ngSubmit)=\"onSubmitWeight(element, f)\"\n          [(matEditLensPreservedFormValue)]=\"weightValues.for(element).value\">\n        <div mat-edit-content>\n          <mat-form-field>\n            <input matInput type=\"number\" [ngModel]=\"element.weight\" name=\"weight\" required>\n          </mat-form-field>\n        </div>\n      </form>\n    </div>\n  </ng-template>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\">\n      {{element.position}}\n\n      <!-- Row hover content in a non-edit cell. -->\n      <span *matRowHoverContent>\n        <button mat-icon-button (click)=\"goodJob(element)\">\n          <mat-icon>thumb_up</mat-icon>\n        </button>\n        <button mat-icon-button (click)=\"badJob(element)\">\n          <mat-icon>thumb_down</mat-icon>\n        </button>\n      </span>\n    </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef>\n      Name\n      <mat-checkbox\n          [(ngModel)]=\"nameEditEnabled\">Edit enabled</mat-checkbox>\n    </th>\n    <td mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"nameEdit\"\n        [matPopoverEditDisabled]=\"!nameEditEnabled\">\n      {{element.name}}\n\n      <!-- This edit is defined in the cell and can implicitly access element -->\n      <ng-template #nameEdit>\n        <div>\n          <form #f=\"ngForm\"\n              matEditLens\n              (ngSubmit)=\"onSubmitName(element, f)\"\n              [(matEditLensPreservedFormValue)]=\"nameValues.for(element).value\">\n            <h2 mat-edit-title>Name</h2>\n            <div mat-edit-content>\n              <mat-form-field>\n                <input matInput [ngModel]=\"element.name\" name=\"name\" required>\n              </mat-form-field>\n            </div>\n            <div mat-edit-actions>\n              <button mat-button type=\"submit\">Confirm</button>\n              <button mat-button matEditRevert>Revert</button>\n              <button mat-button matEditClose>Close</button>\n            </div>\n          </form>\n        </div>\n      </ng-template>\n\n      @if (nameEditEnabled) {\n        <span *matRowHoverContent>\n          <button mat-icon-button matEditOpen><mat-icon>edit</mat-icon></button>\n        </span>\n      }\n    </td>\n  </ng-container>\n\n  <!-- Type Column -->\n  <ng-container matColumnDef=\"type\">\n    <th mat-header-cell *matHeaderCellDef> Type </th>\n    <td mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"typeEdit\">\n      {{element.type}}\n\n      <!-- This edit is defined in the cell and can implicitly access element -->\n      <ng-template #typeEdit>\n        <div>\n          <form #f=\"ngForm\"\n              matEditLens\n              matEditClose\n              (ngSubmit)=\"onSubmitType(element, f)\"\n              [(matEditLensPreservedFormValue)]=\"typeValues.for(element).value\">\n            <div mat-edit-fill>\n              <mat-selection-list [multiple]=\"false\"\n                  name=\"type\"\n                  [ngModel]=\"[element.type]\"\n                  (selectionChange)=\"f.ngSubmit.emit()\"\n                  aria-label=\"Element type\">\n                @for (type of TYPES; track type) {\n                  <mat-list-option [value]=\"type\">{{type}}</mat-list-option>\n                }\n              </mat-selection-list>\n            </div>\n          </form>\n        </div>\n      </ng-template>\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>arrow_drop_down</mat-icon></button>\n      </span>\n    </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"weightEdit\" [matPopoverEditContext]=\"element\">\n      {{element.weight}}\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>edit</mat-icon></button>\n      </span>\n    </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n  <!-- Fantasy Counterparts Column -->\n  <ng-container matColumnDef=\"fantasyCounterpart\">\n    <th mat-header-cell *matHeaderCellDef> Fantasy Counterparts </th>\n    <td mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"fantasyCounterpartEdit\">\n      {{element.fantasyCounterparts.join(', ')}}\n\n      <!-- This edit is defined in the cell and can implicitly access element -->\n      <ng-template #fantasyCounterpartEdit>\n        <div>\n          <form #f=\"ngForm\"\n              matEditLens\n              (ngSubmit)=\"onSubmitFantasyCounterparts(element, f)\"\n              [(matEditLensPreservedFormValue)]=\"fantasyValues.for(element).value\">\n            <div mat-edit-fill>\n              <mat-selection-list [ngModel]=\"element.fantasyCounterparts\"\n                  name=\"fantasyCounterparts\"\n                  aria-label=\"Fantasy Element Counterparts\">\n                @for (fantasyElement of FANTASY_ELEMENTS; track fantasyElement) {\n                  <mat-list-option\n                    [value]=\"fantasyElement\"\n                    checkboxPosition=\"before\">{{fantasyElement}}</mat-list-option>\n                }\n              </mat-selection-list>\n            </div>\n            <div mat-edit-actions>\n              <button mat-button type=\"submit\">Confirm</button>\n              <button mat-button matEditRevert>Revert</button>\n            </div>\n          </form>\n        </div>\n      </ng-template>\n\n      <span *matRowHoverContent>\n        <button mat-icon-button matEditOpen><mat-icon>arrow_drop_down</mat-icon></button>\n      </span>\n    </td>\n  </ng-container>\n</table>\n","import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {DataSource} from '@angular/cdk/collections';\nimport {NgForm, FormsModule} from '@angular/forms';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatPopoverEditModule} from '@angular/material-experimental/popover-edit';\nimport {MatTableModule} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n  {position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na'},\n  {position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg'},\n  {position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al'},\n  {position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si'},\n  {position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P'},\n  {position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S'},\n  {position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl'},\n  {position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar'},\n  {position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K'},\n  {position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca'},\n];\n\n/**\n * @title Material Popover Edit with spreadsheet-like configuration on a Material data-table\n */\n@Component({\n  selector: 'popover-edit-tab-out-mat-table-example',\n  styleUrls: ['popover-edit-tab-out-mat-table-example.css'],\n  templateUrl: 'popover-edit-tab-out-mat-table-example.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    MatTableModule,\n    FormsModule,\n    MatPopoverEditModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n  ],\n})\nexport class PopoverEditTabOutMatTableExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n\n  readonly preservedNameValues = new WeakMap<PeriodicElement, any>();\n  readonly preservedWeightValues = new WeakMap<PeriodicElement, any>();\n\n  onSubmitName(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.name = f.value.name;\n  }\n\n  onSubmitWeight(element: PeriodicElement, f: NgForm) {\n    if (!f.valid) {\n      return;\n    }\n\n    element.weight = f.value.weight;\n  }\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","<table class=\"example-table\" mat-table editable [dataSource]=\"dataSource\">\n  <!--\n    This edit lens is specified outside of the cell and must explicitly declare\n    its context. It could be reused in multiple cells.\n  -->\n  <ng-template #weightEdit let-element>\n    <div>\n      <form #f=\"ngForm\"\n          matEditLens\n          matEditLensClickOutBehavior=\"submit\"\n          (ngSubmit)=\"onSubmitWeight(element, f)\"\n          [matEditLensPreservedFormValue]=\"preservedWeightValues.get(element)\"\n          (matEditLensPreservedFormValueChange)=\"preservedWeightValues.set(element, $event)\">\n        <div mat-edit-content>\n          <mat-form-field>\n            <input matInput type=\"number\" [ngModel]=\"element.weight\" name=\"weight\" required>\n          </mat-form-field>\n        </div>\n      </form>\n    </div>\n  </ng-template>\n\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <th mat-header-cell *matHeaderCellDef> No. </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n  </ng-container>\n\n  <!-- Name Column -->\n  <ng-container matColumnDef=\"name\">\n    <th mat-header-cell *matHeaderCellDef> Name </th>\n    <td mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"nameEdit\" matPopoverEditTabOut\n        matEditOpen>\n      {{element.name}}\n\n      <!-- This edit is defined in the cell and can implicitly access element -->\n      <ng-template #nameEdit>\n        <div>\n          <form #f=\"ngForm\"\n              matEditLens\n              matEditLensClickOutBehavior=\"submit\"\n              (ngSubmit)=\"onSubmitName(element, f)\"\n              [matEditLensPreservedFormValue]=\"preservedNameValues.get(element)\"\n              (matEditLensPreservedFormValueChange)=\"preservedNameValues.set(element, $event)\">\n            <div mat-edit-content>\n              <mat-form-field>\n                <input matInput [ngModel]=\"element.name\" name=\"name\" required>\n              </mat-form-field>\n            </div>\n          </form>\n        </div>\n      </ng-template>\n\n      <span *matRowHoverContent>\n        <mat-icon>edit</mat-icon>\n      </span>\n    </td>\n  </ng-container>\n\n  <!-- Weight Column -->\n  <ng-container matColumnDef=\"weight\">\n    <th mat-header-cell *matHeaderCellDef> Weight </th>\n    <td mat-cell *matCellDef=\"let element\"\n        [matPopoverEdit]=\"weightEdit\" matPopoverEditTabOut\n        [matPopoverEditContext]=\"element\"\n        matEditOpen>\n      {{element.weight}}\n\n      <span *matRowHoverContent>\n        <mat-icon>edit</mat-icon>\n      </span>\n    </td>\n  </ng-container>\n\n  <!-- Symbol Column -->\n  <ng-container matColumnDef=\"symbol\">\n    <th mat-header-cell *matHeaderCellDef> Symbol </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.symbol}} </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n</table>\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["ExampleDataSource","i3","ELEMENT_DATA","i2","i4","i1","i6","i7","i9"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,WAAW,GAAa;AAC5B,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAC;AACvE,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAC;AAC7D,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAC;AACrE,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAC;AACnE,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAC;AACnE,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAC;AACxE,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAC;AAClE,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAC;AACvE,IAAA,EAAC,EAAE,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAC;CAChE,CAAC;AAEF;;AAEG;MAiBU,kCAAkC,CAAA;AAhB/C,IAAA,WAAA,GAAA;QAiBE,IAAgB,CAAA,gBAAA,GAAa,CAAC,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;AAC3E,QAAA,IAAA,CAAA,UAAU,GAAG,IAAIA,mBAAiB,EAAE,CAAC;AAE5B,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,OAAO,EAAe,CAAC;AAWvD,KAAA;IATC,QAAQ,CAAC,MAAc,EAAE,CAAS,EAAA;AAChC,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,MAAM,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACxC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC1C,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KACvC;8GAdU,kCAAkC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAlC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,kCAAkC,oGClD/C,+zGAsFA,EAAA,MAAA,EAAA,CAAA,oTAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,ED9CI,cAAc,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACd,oBAAoB,EACpB,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,2DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,WAAW,EACX,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,oBAAoB,4nBACpB,kBAAkB,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAClB,cAAc,EACd,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,eAAe,wUACf,aAAa,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGJ,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAhB9C,SAAS;+BACE,0CAA0C,EAAA,UAAA,EAGxC,IAAI,EACP,OAAA,EAAA;wBACP,cAAc;wBACd,oBAAoB;wBACpB,WAAW;wBACX,oBAAoB;wBACpB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,aAAa;AACd,qBAAA,EAAA,QAAA,EAAA,+zGAAA,EAAA,MAAA,EAAA,CAAA,oTAAA,CAAA,EAAA,CAAA;;AAmBH;;;;;;AAMG;AACG,MAAOD,mBAAkB,SAAQ,UAAkB,CAAA;AAAzD,IAAA,WAAA,GAAA;;;AAEE,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,eAAe,CAAW,WAAW,CAAC,CAAC;KAQnD;;IALC,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;AAED,IAAA,UAAU,MAAK;AAChB;;AElED,MAAME,cAAY,GAAsB;AACtC,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;AAC5D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC9D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;AACzD,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC7D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC7D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC7D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC/D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC/D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC9D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAChE,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC9D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC/D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;CAC9D,CAAC;AAEF;;AAEG;MAgBU,8BAA8B,CAAA;AAf3C,IAAA,WAAA,GAAA;QAgBE,IAAgB,CAAA,gBAAA,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,UAAU,GAAG,IAAIF,mBAAiB,EAAE,CAAC;AAE5B,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,OAAO,EAAwB,CAAC;AAC1D,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,OAAO,EAAwB,CAAC;AAiBtE,KAAA;IAfC,YAAY,CAAC,OAAwB,EAAE,CAAS,EAAA;AAC9C,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;KAC7B;IAED,cAAc,CAAC,OAAwB,EAAE,CAAS,EAAA;AAChD,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;KACjC;8GArBU,8BAA8B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAA9B,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,8BAA8B,EC3D3C,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,qCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,gtGAqFA,EDnCI,MAAA,EAAA,CAAA,uJAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,cAAc,sgCACd,WAAW,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACX,oBAAoB,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,6BAAA,EAAA,+BAAA,EAAA,oCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,qCAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,2DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACpB,kBAAkB,EAClB,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,cAAc,EACd,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,eAAe,wUACf,aAAa,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGJ,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAf1C,SAAS;+BACE,qCAAqC,EAAA,UAAA,EAGnC,IAAI,EACP,OAAA,EAAA;wBACP,cAAc;wBACd,WAAW;wBACX,oBAAoB;wBACpB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,aAAa;AACd,qBAAA,EAAA,QAAA,EAAA,gtGAAA,EAAA,MAAA,EAAA,CAAA,uJAAA,CAAA,EAAA,CAAA;;AA0BH;;;;;;AAMG;AACG,MAAOJ,mBAAkB,SAAQ,UAA2B,CAAA;AAAlE,IAAA,WAAA,GAAA;;;AAEE,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,eAAe,CAAoBE,cAAY,CAAC,CAAC;KAQ7D;;IALC,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;AAED,IAAA,UAAU,MAAK;AAChB;;AExED,MAAMA,cAAY,GAAsB;AACtC,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,CAAC;AAC/C,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC;AACvC,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,KAAK;AACb,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC;AACvC,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,GAAG;QACX,mBAAmB,EAAE,CAAC,MAAM,CAAC;AAC9B,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;AAC/C,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,CAAC;AACX,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,IAAI;QACZ,mBAAmB,EAAE,CAAC,OAAO,CAAC;AAC/B,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC;AACxC,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,YAAY;AAClB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,QAAQ;AACd,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,IAAI,EAAE,UAAU;AAChB,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,WAAW;AACjB,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,OAAO;AACf,QAAA,MAAM,EAAE,GAAG;AACX,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;AACD,IAAA;AACE,QAAA,QAAQ,EAAE,EAAE;AACZ,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,IAAI,EAAE,OAAO;AACb,QAAA,MAAM,EAAE,MAAM;AACd,QAAA,MAAM,EAAE,IAAI;AACZ,QAAA,mBAAmB,EAAE,EAAE;AACxB,KAAA;CACF,CAAC;AAEF,MAAM,KAAK,GAA2B,CAAC,OAAO,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;AACzE,MAAM,gBAAgB,GAA8B;IAClD,OAAO;IACP,OAAO;IACP,MAAM;IACN,MAAM;IACN,OAAO;IACP,MAAM;CACP,CAAC;AAEF;;AAEG;MAmBU,0BAA0B,CAAA;AAqBrC,IAAA,WAAA,CAA6B,SAAsB,EAAA;QAAtB,IAAS,CAAA,SAAA,GAAT,SAAS,CAAa;AApBnD,QAAA,IAAA,CAAA,gBAAgB,GAAa;YAC3B,UAAU;YACV,MAAM;YACN,MAAM;YACN,QAAQ;YACR,QAAQ;YACR,oBAAoB;SACrB,CAAC;AACF,QAAA,IAAA,CAAA,UAAU,GAAG,IAAIF,mBAAiB,EAAE,CAAC;QAErC,IAAe,CAAA,eAAA,GAAG,IAAI,CAAC;QAEd,IAAK,CAAA,KAAA,GAAG,KAAK,CAAC;QACd,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;AAEpC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,kBAAkB,EAAwB,CAAC;AAC5D,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,kBAAkB,EAAwB,CAAC;AAC9D,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,kBAAkB,EAAwB,CAAC;AAC5D,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,kBAAkB,EAAwB,CAAC;KAEjB;IAEvD,YAAY,CAAC,OAAwB,EAAE,CAAS,EAAA;AAC9C,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;KAC7B;IAED,cAAc,CAAC,OAAwB,EAAE,CAAS,EAAA;AAChD,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;KACjC;IAED,YAAY,CAAC,OAAwB,EAAE,CAAS,EAAA;AAC9C,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KAChC;IAED,2BAA2B,CAAC,OAAwB,EAAE,CAAS,EAAA;AAC7D,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,mBAAmB,GAAG,CAAC,CAAC,KAAK,CAAC,mBAAmB,CAAC;KAC3D;AAED,IAAA,OAAO,CAAC,OAAwB,EAAA;AAC9B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA,WAAA,EAAc,OAAO,CAAC,IAAI,GAAG,EAAE,SAAS,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC;KACjF;AAED,IAAA,MAAM,CAAC,OAAwB,EAAA;AAC7B,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA,uCAAA,EAA0C,OAAO,CAAC,QAAQ,CAAA,CAAA,CAAG,EAAE,SAAS,EAAE;AAC5F,YAAA,QAAQ,EAAE,IAAI;AACf,SAAA,CAAC,CAAC;KACJ;8GA/DU,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAK,IAAA,CAAA,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGAA1B,0BAA0B,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EC9NvC,u4MAiLA,EDiCI,MAAA,EAAA,CAAA,mJAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,cAAc,sgCACd,oBAAoB,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAJ,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,2DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACpB,WAAW,EACX,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,oBAAoB,wxBACpB,kBAAkB,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAE,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAClB,cAAc,EACd,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,MAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,eAAe,wUACf,aAAa,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACb,iBAAiB,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,IAAA,EAAA,UAAA,EAAA,eAAA,EAAA,MAAA,EAAA,OAAA,EAAA,eAAA,EAAA,UAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EACjB,aAAa,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,EAAA,UAAA,EAAA,8BAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,kBAAA,EAAA,OAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;2FAGJ,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAlBtC,SAAS;+BACE,gCAAgC,EAAA,UAAA,EAG9B,IAAI,EACP,OAAA,EAAA;wBACP,cAAc;wBACd,oBAAoB;wBACpB,WAAW;wBACX,oBAAoB;wBACpB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,aAAa;wBACb,iBAAiB;wBACjB,aAAa;AACd,qBAAA,EAAA,QAAA,EAAA,u4MAAA,EAAA,MAAA,EAAA,CAAA,mJAAA,CAAA,EAAA,CAAA;;AAoEH;;;;;;AAMG;AACG,MAAOR,mBAAkB,SAAQ,UAA2B,CAAA;AAAlE,IAAA,WAAA,GAAA;;;AAEE,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,eAAe,CAAoBE,cAAY,CAAC,CAAC;KAQ7D;;IALC,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;AAED,IAAA,UAAU,MAAK;AAChB;;AEhSD,MAAM,YAAY,GAAsB;AACtC,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;AAC5D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC9D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;AACzD,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC7D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC7D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC7D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC/D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC/D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,EAAC;AAC9D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAChE,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC9D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;AAC3D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG,EAAC;AAC/D,IAAA,EAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAC;CAC9D,CAAC;AAEF;;AAEG;MAgBU,gCAAgC,CAAA;AAf7C,IAAA,WAAA,GAAA;QAgBE,IAAgB,CAAA,gBAAA,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,iBAAiB,EAAE,CAAC;AAE5B,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,OAAO,EAAwB,CAAC;AAC1D,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,OAAO,EAAwB,CAAC;AAiBtE,KAAA;IAfC,YAAY,CAAC,OAAwB,EAAE,CAAS,EAAA;AAC9C,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;KAC7B;IAED,cAAc,CAAC,OAAwB,EAAE,CAAS,EAAA;AAChD,QAAA,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;YACZ,OAAO;SACR;QAED,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;KACjC;8GArBU,gCAAgC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;AAAhC,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,IAAA,EAAA,gCAAgC,EC1D7C,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,wCAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,y9FAoFA,EDlCI,MAAA,EAAA,CAAA,mJAAA,CAAA,EAAA,YAAA,EAAA,CAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,cAAc,EACd,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,WAAW,EACX,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,iGAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,oBAAoB,EACpB,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,wCAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,wBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,6BAAA,EAAA,+BAAA,EAAA,oCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,qCAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,WAAA,EAAA,QAAA,EAAA,2DAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,kBAAkB,EAClB,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAA,EAAA,IAAA,EAAA,cAAc,0WACd,aAAa,EAAA,EAAA,EAAA,IAAA,EAAA,WAAA,EAAA,IAAA,EAAAG,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,eAAA,EAAA,EAAA,CAAA,uBAAA,CAAA,MAAA,EAAA,CAAA,CAAA,EAAA;;2FAGJ,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAf5C,SAAS;AACE,YAAA,IAAA,EAAA,CAAA,EAAA,QAAA,EAAA,wCAAwC,mBAGjC,uBAAuB,CAAC,MAAM,EAAA,UAAA,EACnC,IAAI,EACP,OAAA,EAAA;wBACP,cAAc;wBACd,WAAW;wBACX,oBAAoB;wBACpB,kBAAkB;wBAClB,cAAc;wBACd,aAAa;AACd,qBAAA,EAAA,QAAA,EAAA,y9FAAA,EAAA,MAAA,EAAA,CAAA,mJAAA,CAAA,EAAA,CAAA;;AA0BH;;;;;;AAMG;AACG,MAAO,iBAAkB,SAAQ,UAA2B,CAAA;AAAlE,IAAA,WAAA,GAAA;;;AAEE,QAAA,IAAA,CAAA,IAAI,GAAG,IAAI,eAAe,CAAoB,YAAY,CAAC,CAAC;KAQ7D;;IALC,OAAO,GAAA;QACL,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;AAED,IAAA,UAAU,MAAK;AAChB;;AEnGD;;AAEG;;;;"}