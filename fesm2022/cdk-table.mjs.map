{"version":3,"file":"cdk-table.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/table/cdk-table-flex-basic/cdk-table-flex-basic-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/table/cdk-table-basic/cdk-table-basic-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/table/cdk-table-fixed-layout/cdk-table-fixed-layout-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/cdk/table/cdk-table-recycle-rows/cdk-table-recycle-rows-example.ts"],"sourcesContent":["import {DataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  symbol: string;\n  weight: number;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic use of `<cdk-table>` (uses display flex)\n */\n@Component({\n  selector: 'cdk-table-flex-basic-example',\n  styleUrl: 'cdk-table-flex-basic-example.css',\n  templateUrl: 'cdk-table-flex-basic-example.html',\n  imports: [CdkTableModule],\n})\nexport class CdkTableFlexBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","import {DataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Basic CDK data-table\n */\n@Component({\n  selector: 'cdk-table-basic-example',\n  styleUrl: 'cdk-table-basic-example.css',\n  templateUrl: 'cdk-table-basic-example.html',\n  imports: [CdkTableModule],\n})\nexport class CdkTableBasicExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","import {DataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title CDK table with a fixed layout.\n */\n@Component({\n  selector: 'cdk-table-fixed-layout-example',\n  styleUrl: 'cdk-table-fixed-layout-example.css',\n  templateUrl: 'cdk-table-fixed-layout-example.html',\n  imports: [CdkTableModule],\n})\nexport class CdkTableFixedLayoutExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n","import {DataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {BehaviorSubject, Observable} from 'rxjs';\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\nconst ELEMENT_DATA: PeriodicElement[] = [\n  {position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H'},\n  {position: 2, name: 'Helium', weight: 4.0026, symbol: 'He'},\n  {position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li'},\n  {position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be'},\n  {position: 5, name: 'Boron', weight: 10.811, symbol: 'B'},\n  {position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C'},\n  {position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N'},\n  {position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O'},\n  {position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F'},\n  {position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne'},\n];\n\n/**\n * @title Table that uses the recycle view repeater strategy.\n */\n@Component({\n  selector: 'cdk-table-recycle-rows-example',\n  styleUrl: 'cdk-table-recycle-rows-example.css',\n  templateUrl: 'cdk-table-recycle-rows-example.html',\n  imports: [CdkTableModule],\n})\nexport class CdkTableRecycleRowsExample {\n  displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];\n  dataSource = new ExampleDataSource();\n}\n\n/**\n * Data source to provide what data should be rendered in the table. Note that the data source\n * can retrieve its data in any way. In this case, the data source is provided a reference\n * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n * the underlying data. Instead, it only needs to take the data and send the table exactly what\n * should be rendered.\n */\nexport class ExampleDataSource extends DataSource<PeriodicElement> {\n  /** Stream of data that is provided to the table. */\n  data = new BehaviorSubject<PeriodicElement[]>(ELEMENT_DATA);\n\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\n  connect(): Observable<PeriodicElement[]> {\n    return this.data;\n  }\n\n  disconnect() {}\n}\n"],"names":["ELEMENT_DATA","position","name","weight","symbol","imports","ExampleDataSource","DataSource"],"mappings":"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"}