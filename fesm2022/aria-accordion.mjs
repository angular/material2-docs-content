import * as i0 from '@angular/core';
import { model, computed, Component } from '@angular/core';
import * as i3 from '@angular/forms';
import { FormControl, ReactiveFormsModule } from '@angular/forms';
import * as i2 from '@angular/material/checkbox';
import { MatCheckboxModule } from '@angular/material/checkbox';
import * as i1 from '@angular/material/form-field';
import { MatFormFieldModule } from '@angular/material/form-field';
import { MatInputModule } from '@angular/material/input';
import * as i2$1 from '@angular/material/select';
import { MatSelectModule } from '@angular/material/select';
import * as i3$1 from '@angular/material/icon';
import { MatIconModule } from '@angular/material/icon';
import { AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent } from '@angular/aria/accordion';

/** @title Configurable Accordion using UI Patterns. */
class AccordionConfigurableExample {
    // Accordion Group Properties
    wrap = new FormControl(true, { nonNullable: true });
    multi = new FormControl(true, { nonNullable: true });
    disabled = new FormControl(false, { nonNullable: true });
    skipDisabled = new FormControl(true, { nonNullable: true });
    expandedIds = model(['item1'], ...(ngDevMode ? [{ debugName: "expandedIds" }] : []));
    // Example items
    items = ['item1', 'item2', 'item3', 'item4', 'item5'];
    expansionIcon(item) {
        return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionConfigurableExample, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "20.2.0-next.2", type: AccordionConfigurableExample, isStandalone: true, selector: "accordion-configurable-example", inputs: { expandedIds: { classPropertyName: "expandedIds", publicName: "expandedIds", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { expandedIds: "expandedIdsChange" }, exportAs: ["AccordionConfigurableExample"], ngImport: i0, template: "<div class=\"example-accordion-controls\">\n  <mat-checkbox [formControl]=\"wrap\">Wrap (ArrowKey-only)</mat-checkbox>\n  <mat-checkbox [formControl]=\"multi\">Multi</mat-checkbox>\n  <mat-checkbox [formControl]=\"disabled\">Disabled</mat-checkbox>\n  <mat-checkbox [formControl]=\"skipDisabled\">Skip Disabled</mat-checkbox>\n\n  <mat-form-field subscriptSizing=\"dynamic\" appearance=\"outline\">\n    <mat-label>Expanded Items</mat-label>\n    <mat-select [(value)]=\"expandedIds\" multiple>\n      @for (item of items; track item) {\n        <mat-option [value]=\"item\">{{item}}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"multi.value\"\n  [disabled]=\"disabled.value\"\n  [skipDisabled]=\"skipDisabled.value\"\n  [wrap]=\"wrap.value\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\" /></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"], dependencies: [{ kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3$1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "ngmodule", type: MatCheckboxModule }, { kind: "component", type: i2.MatCheckbox, selector: "mat-checkbox", inputs: ["aria-label", "aria-labelledby", "aria-describedby", "aria-expanded", "aria-controls", "aria-owns", "id", "required", "labelPosition", "name", "value", "disableRipple", "tabIndex", "color", "disabledInteractive", "checked", "disabled", "indeterminate"], outputs: ["change", "indeterminateChange"], exportAs: ["matCheckbox"] }, { kind: "ngmodule", type: MatFormFieldModule }, { kind: "component", type: i1.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i1.MatLabel, selector: "mat-label" }, { kind: "ngmodule", type: MatInputModule }, { kind: "ngmodule", type: MatSelectModule }, { kind: "component", type: i2$1.MatSelect, selector: "mat-select", inputs: ["aria-describedby", "panelClass", "disabled", "disableRipple", "tabIndex", "hideSingleSelectionIndicator", "placeholder", "required", "multiple", "disableOptionCentering", "compareWith", "value", "aria-label", "aria-labelledby", "errorStateMatcher", "typeaheadDebounceInterval", "sortComparator", "id", "panelWidth", "canSelectNullableOptions"], outputs: ["openedChange", "opened", "closed", "selectionChange", "valueChange"], exportAs: ["matSelect"] }, { kind: "component", type: i2$1.MatOption, selector: "mat-option", inputs: ["value", "id", "disabled"], outputs: ["onSelectionChange"], exportAs: ["matOption"] }, { kind: "directive", type: AccordionGroup, selector: "[ngAccordionGroup]", inputs: ["disabled", "multiExpandable", "value", "skipDisabled", "wrap"], outputs: ["valueChange"], exportAs: ["ngAccordionGroup"] }, { kind: "directive", type: AccordionTrigger, selector: "[ngAccordionTrigger]", inputs: ["value", "disabled"], exportAs: ["ngAccordionTrigger"] }, { kind: "directive", type: AccordionPanel, selector: "[ngAccordionPanel]", inputs: ["value"], exportAs: ["ngAccordionPanel"] }, { kind: "directive", type: AccordionContent, selector: "ng-template[ngAccordionContent]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionConfigurableExample, decorators: [{
            type: Component,
            args: [{ selector: 'accordion-configurable-example', exportAs: 'AccordionConfigurableExample', standalone: true, imports: [
                        ReactiveFormsModule,
                        MatIconModule,
                        MatCheckboxModule,
                        MatFormFieldModule,
                        MatInputModule,
                        MatSelectModule,
                        AccordionGroup,
                        AccordionTrigger,
                        AccordionPanel,
                        AccordionContent,
                    ], template: "<div class=\"example-accordion-controls\">\n  <mat-checkbox [formControl]=\"wrap\">Wrap (ArrowKey-only)</mat-checkbox>\n  <mat-checkbox [formControl]=\"multi\">Multi</mat-checkbox>\n  <mat-checkbox [formControl]=\"disabled\">Disabled</mat-checkbox>\n  <mat-checkbox [formControl]=\"skipDisabled\">Skip Disabled</mat-checkbox>\n\n  <mat-form-field subscriptSizing=\"dynamic\" appearance=\"outline\">\n    <mat-label>Expanded Items</mat-label>\n    <mat-select [(value)]=\"expandedIds\" multiple>\n      @for (item of items; track item) {\n        <mat-option [value]=\"item\">{{item}}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n</div>\n\n<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"multi.value\"\n  [disabled]=\"disabled.value\"\n  [skipDisabled]=\"skipDisabled.value\"\n  [wrap]=\"wrap.value\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\" /></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"] }]
        }] });

/** @title Accordion with single expansion. */
class AccordionSingleExpansionExample {
    expandedIds = model([], ...(ngDevMode ? [{ debugName: "expandedIds" }] : []));
    expansionIcon(item) {
        return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionSingleExpansionExample, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "20.2.0-next.2", type: AccordionSingleExpansionExample, isStandalone: true, selector: "accordion-single-expansion-example", inputs: { expandedIds: { classPropertyName: "expandedIds", publicName: "expandedIds", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { expandedIds: "expandedIdsChange" }, ngImport: i0, template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"false\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\"></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item3\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item4\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item5\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"], dependencies: [{ kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3$1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: AccordionGroup, selector: "[ngAccordionGroup]", inputs: ["disabled", "multiExpandable", "value", "skipDisabled", "wrap"], outputs: ["valueChange"], exportAs: ["ngAccordionGroup"] }, { kind: "directive", type: AccordionTrigger, selector: "[ngAccordionTrigger]", inputs: ["value", "disabled"], exportAs: ["ngAccordionTrigger"] }, { kind: "directive", type: AccordionPanel, selector: "[ngAccordionPanel]", inputs: ["value"], exportAs: ["ngAccordionPanel"] }, { kind: "directive", type: AccordionContent, selector: "ng-template[ngAccordionContent]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionSingleExpansionExample, decorators: [{
            type: Component,
            args: [{ selector: 'accordion-single-expansion-example', standalone: true, imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent], template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"false\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\"></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item3\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item4\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item5\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"] }]
        }] });

/** @title Accordion with multi-expansion. */
class AccordionMultiExpansionExample {
    expandedIds = model([], ...(ngDevMode ? [{ debugName: "expandedIds" }] : []));
    expansionIcon(item) {
        return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionMultiExpansionExample, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "20.2.0-next.2", type: AccordionMultiExpansionExample, isStandalone: true, selector: "accordion-multi-expansion-example", inputs: { expandedIds: { classPropertyName: "expandedIds", publicName: "expandedIds", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { expandedIds: "expandedIdsChange" }, ngImport: i0, template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1. Multiple items can be expanded.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\"></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item3\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item4\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item5\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"], dependencies: [{ kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3$1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: AccordionGroup, selector: "[ngAccordionGroup]", inputs: ["disabled", "multiExpandable", "value", "skipDisabled", "wrap"], outputs: ["valueChange"], exportAs: ["ngAccordionGroup"] }, { kind: "directive", type: AccordionTrigger, selector: "[ngAccordionTrigger]", inputs: ["value", "disabled"], exportAs: ["ngAccordionTrigger"] }, { kind: "directive", type: AccordionPanel, selector: "[ngAccordionPanel]", inputs: ["value"], exportAs: ["ngAccordionPanel"] }, { kind: "directive", type: AccordionContent, selector: "ng-template[ngAccordionContent]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionMultiExpansionExample, decorators: [{
            type: Component,
            args: [{ selector: 'accordion-multi-expansion-example', standalone: true, imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent], template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1. Multiple items can be expanded.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\"></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item3\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item4\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div\n      ngAccordionPanel\n      value=\"item5\"\n      class=\"example-accordion-panel\"\n    >\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"] }]
        }] });

/** @title Accordion with focusable disabled items. */
class AccordionDisabledFocusableExample {
    expandedIds = model([], ...(ngDevMode ? [{ debugName: "expandedIds" }] : []));
    expansionIcon(item) {
        return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionDisabledFocusableExample, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "20.2.0-next.2", type: AccordionDisabledFocusableExample, isStandalone: true, selector: "accordion-disabled-focusable-example", inputs: { expandedIds: { classPropertyName: "expandedIds", publicName: "expandedIds", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { expandedIds: "expandedIdsChange" }, ngImport: i0, template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [skipDisabled]=\"false\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2. This should not be expandable if trigger is disabled.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"], dependencies: [{ kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3$1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: AccordionGroup, selector: "[ngAccordionGroup]", inputs: ["disabled", "multiExpandable", "value", "skipDisabled", "wrap"], outputs: ["valueChange"], exportAs: ["ngAccordionGroup"] }, { kind: "directive", type: AccordionTrigger, selector: "[ngAccordionTrigger]", inputs: ["value", "disabled"], exportAs: ["ngAccordionTrigger"] }, { kind: "directive", type: AccordionPanel, selector: "[ngAccordionPanel]", inputs: ["value"], exportAs: ["ngAccordionPanel"] }, { kind: "directive", type: AccordionContent, selector: "ng-template[ngAccordionContent]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionDisabledFocusableExample, decorators: [{
            type: Component,
            args: [{ selector: 'accordion-disabled-focusable-example', standalone: true, imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent], template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [skipDisabled]=\"false\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2. This should not be expandable if trigger is disabled.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"] }]
        }] });

/** @title Accordion with skipped disabled items. */
class AccordionDisabledSkippedExample {
    expandedIds = model([], ...(ngDevMode ? [{ debugName: "expandedIds" }] : []));
    expansionIcon(item) {
        return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionDisabledSkippedExample, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "20.2.0-next.2", type: AccordionDisabledSkippedExample, isStandalone: true, selector: "accordion-disabled-skipped-example", inputs: { expandedIds: { classPropertyName: "expandedIds", publicName: "expandedIds", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { expandedIds: "expandedIdsChange" }, ngImport: i0, template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [skipDisabled]=\"true\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2. This should not be reachable or expandable.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"], dependencies: [{ kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3$1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: AccordionGroup, selector: "[ngAccordionGroup]", inputs: ["disabled", "multiExpandable", "value", "skipDisabled", "wrap"], outputs: ["valueChange"], exportAs: ["ngAccordionGroup"] }, { kind: "directive", type: AccordionTrigger, selector: "[ngAccordionTrigger]", inputs: ["value", "disabled"], exportAs: ["ngAccordionTrigger"] }, { kind: "directive", type: AccordionPanel, selector: "[ngAccordionPanel]", inputs: ["value"], exportAs: ["ngAccordionPanel"] }, { kind: "directive", type: AccordionContent, selector: "ng-template[ngAccordionContent]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionDisabledSkippedExample, decorators: [{
            type: Component,
            args: [{ selector: 'accordion-disabled-skipped-example', standalone: true, imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent], template: "<div\n  ngAccordionGroup\n  class=\"example-accordion-group\"\n  [multiExpandable]=\"true\"\n  [skipDisabled]=\"true\"\n  [(value)]=\"expandedIds\"\n>\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\" disabled>\n        Item 2 Trigger (disabled)\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2. This should not be reachable or expandable.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"] }]
        }] });

/** @title Disabled Accordion. */
class AccordionDisabledExample {
    expandedIds = model(['item1'], ...(ngDevMode ? [{ debugName: "expandedIds" }] : []));
    expansionIcon(item) {
        return computed(() => (this.expandedIds().includes(item) ? 'expand_less' : 'expand_more'));
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionDisabledExample, deps: [], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.1.0", version: "20.2.0-next.2", type: AccordionDisabledExample, isStandalone: true, selector: "accordion-disabled-example", inputs: { expandedIds: { classPropertyName: "expandedIds", publicName: "expandedIds", isSignal: true, isRequired: false, transformFunction: null } }, outputs: { expandedIds: "expandedIdsChange" }, ngImport: i0, template: "<div ngAccordionGroup class=\"example-accordion-group\" [(value)]=\"expandedIds\" [disabled]=\"true\">\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\" /></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"], dependencies: [{ kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i3$1.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: AccordionGroup, selector: "[ngAccordionGroup]", inputs: ["disabled", "multiExpandable", "value", "skipDisabled", "wrap"], outputs: ["valueChange"], exportAs: ["ngAccordionGroup"] }, { kind: "directive", type: AccordionTrigger, selector: "[ngAccordionTrigger]", inputs: ["value", "disabled"], exportAs: ["ngAccordionTrigger"] }, { kind: "directive", type: AccordionPanel, selector: "[ngAccordionPanel]", inputs: ["value"], exportAs: ["ngAccordionPanel"] }, { kind: "directive", type: AccordionContent, selector: "ng-template[ngAccordionContent]" }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "20.2.0-next.2", ngImport: i0, type: AccordionDisabledExample, decorators: [{
            type: Component,
            args: [{ selector: 'accordion-disabled-example', standalone: true, imports: [MatIconModule, AccordionGroup, AccordionTrigger, AccordionPanel, AccordionContent], template: "<div ngAccordionGroup class=\"example-accordion-group\" [(value)]=\"expandedIds\" [disabled]=\"true\">\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item1\">\n        Item 1 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item1')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item1\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 1.</p>\n        <button>Focusable Button</button>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item2\">\n        Item 2 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item2')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item2\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 2.</p>\n        <label>Input inside panel: <input type=\"text\" /></label>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item3\">\n        Item 3 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item3')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item3\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 3.</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item4\">\n        Item 4 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item4')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item4\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 4</p>\n      </ng-template>\n    </div>\n  </div>\n\n  <div class=\"example-accordion\">\n    <h3 class=\"example-accordion-header\">\n      <button ngAccordionTrigger class=\"example-accordion-trigger\" value=\"item5\">\n        Item 5 Trigger\n        <mat-icon aria-hidden=\"true\">{{expansionIcon('item5')()}}</mat-icon>\n      </button>\n    </h3>\n    <div ngAccordionPanel value=\"item5\" class=\"example-accordion-panel\">\n      <ng-template ngAccordionContent>\n        <p>This is the content for Item 5</p>\n      </ng-template>\n    </div>\n  </div>\n</div>\n", styles: ["/* Common styles for CDK Accordion examples */\n.example-accordion-controls {\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  gap: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 16px;\n}\n\n.example-accordion-header {\n  margin: 0;\n}\n\n.example-accordion-header .example-accordion-trigger {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  padding: 12px 16px;\n  border: 1px solid transparent;\n  background-color: var(--mat-sys-surface);\n  cursor: pointer;\n  border-radius: 4px;\n  margin-bottom: 4px;\n}\n\n.example-accordion-header .example-accordion-trigger:hover {\n  background-color: var(--mat-sys-surface-container-highest);\n}\n\n.example-accordion-header .example-accordion-trigger[data-active='true'] {\n  background-color: var(--mat-sys-surface-dim);\n}\n\n.example-accordion-header .example-accordion-trigger:focus {\n  outline: 2px solid var(--mat-sys-primary);\n  outline-offset: -2px;\n}\n\n.example-accordion-header .example-accordion-trigger[aria-disabled='true'] {\n  color: inherit;\n  opacity: 0.6;\n}\n\n.example-accordion-panel {\n  padding: 16px;\n  background-color: var(--mat-sys-surface-container);\n  margin-bottom: 4px;\n}\n\n.example-accordion-panel[inert] {\n  display: none;\n}\n"] }]
        }] });

export { AccordionConfigurableExample, AccordionDisabledExample, AccordionDisabledFocusableExample, AccordionDisabledSkippedExample, AccordionMultiExpansionExample, AccordionSingleExpansionExample };
//# sourceMappingURL=aria-accordion.mjs.map
