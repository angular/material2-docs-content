{"version":3,"file":"material-dialog.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/dialog/dialog-content/dialog-content-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/dialog/dialog-data/dialog-data-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/dialog/dialog-elements/dialog-elements-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/dialog/dialog-overview/dialog-overview-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/dialog/dialog-from-menu/dialog-from-menu-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/dialog/dialog-harness/dialog-harness-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/dialog/dialog-animations/dialog-animations-example.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialog, MatDialogModule} from '@angular/material/dialog';\n\n/**\n * @title Dialog with header, scrollable content and actions\n */\n@Component({\n  selector: 'dialog-content-example',\n  templateUrl: 'dialog-content-example.html',\n  imports: [MatButtonModule, MatDialogModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogContentExample {\n  readonly dialog = inject(MatDialog);\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogContentExampleDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n  imports: [MatDialogModule, MatButtonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogContentExampleDialog {}\n","import {Component, inject} from '@angular/core';\nimport {\n  MatDialog,\n  MAT_DIALOG_DATA,\n  MatDialogTitle,\n  MatDialogContent,\n} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\n\nexport interface DialogData {\n  animal: 'panda' | 'unicorn' | 'lion';\n}\n\n/**\n * @title Injecting data when opening a dialog\n */\n@Component({\n  selector: 'dialog-data-example',\n  templateUrl: 'dialog-data-example.html',\n  imports: [MatButtonModule],\n})\nexport class DialogDataExample {\n  dialog = inject(MatDialog);\n\n  openDialog() {\n    this.dialog.open(DialogDataExampleDialog, {\n      data: {\n        animal: 'panda',\n      },\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n  imports: [MatDialogTitle, MatDialogContent],\n})\nexport class DialogDataExampleDialog {\n  data = inject(MAT_DIALOG_DATA);\n}\n","import {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {\n  MatDialog,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from '@angular/material/dialog';\n\n/**\n * @title Dialog elements\n */\n@Component({\n  selector: 'dialog-elements-example',\n  templateUrl: 'dialog-elements-example.html',\n  imports: [MatButtonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogElementsExample {\n  readonly dialog = inject(MatDialog);\n\n  openDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\n}\n\n@Component({\n  selector: 'dialog-elements-example-dialog',\n  templateUrl: 'dialog-elements-example-dialog.html',\n  imports: [MatDialogTitle, MatDialogContent, MatDialogActions, MatDialogClose, MatButtonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogElementsExampleDialog {}\n","import {ChangeDetectionStrategy, Component, inject, model, signal} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {\n  MAT_DIALOG_DATA,\n  MatDialog,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogRef,\n  MatDialogTitle,\n} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n/**\n * @title Dialog Overview\n */\n@Component({\n  selector: 'dialog-overview-example',\n  templateUrl: 'dialog-overview-example.html',\n  imports: [MatFormFieldModule, MatInputModule, FormsModule, MatButtonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogOverviewExample {\n  readonly animal = signal('');\n  readonly name = model('');\n  readonly dialog = inject(MatDialog);\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      data: {name: this.name(), animal: this.animal()},\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      if (result !== undefined) {\n        this.animal.set(result);\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatButtonModule,\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogClose,\n  ],\n})\nexport class DialogOverviewExampleDialog {\n  readonly dialogRef = inject(MatDialogRef<DialogOverviewExampleDialog>);\n  readonly data = inject<DialogData>(MAT_DIALOG_DATA);\n  readonly animal = model(this.data.animal);\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","import {ChangeDetectionStrategy, Component, inject, viewChild} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {\n  MatDialog,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n} from '@angular/material/dialog';\nimport {MatMenuModule, MatMenuTrigger} from '@angular/material/menu';\n/**\n * @title Dialog launched from a menu\n */\n@Component({\n  selector: 'dialog-from-menu-example',\n  templateUrl: 'dialog-from-menu-example.html',\n  imports: [MatButtonModule, MatMenuModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogFromMenuExample {\n  readonly menuTrigger = viewChild.required(MatMenuTrigger);\n\n  readonly dialog = inject(MatDialog);\n\n  openDialog() {\n    // #docregion focus-restoration\n    const dialogRef = this.dialog.open(DialogFromMenuExampleDialog, {restoreFocus: false});\n\n    // Manually restore focus to the menu trigger since the element that\n    // opens the dialog won't be in the DOM any more when the dialog closes.\n    dialogRef.afterClosed().subscribe(() => this.menuTrigger().focus());\n    // #enddocregion focus-restoration\n  }\n}\n\n@Component({\n  selector: 'dialog-from-menu-dialog',\n  templateUrl: 'dialog-from-menu-example-dialog.html',\n  imports: [MatDialogContent, MatDialogActions, MatDialogClose, MatButtonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogFromMenuExampleDialog {}\n","import {ChangeDetectionStrategy, Component, TemplateRef, inject, viewChild} from '@angular/core';\nimport {MatDialog, MatDialogConfig} from '@angular/material/dialog';\n\n/**\n * @title Testing with MatDialogHarness\n */\n@Component({\n  selector: 'dialog-harness-example',\n  templateUrl: 'dialog-harness-example.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogHarnessExample {\n  readonly dialogTemplate = viewChild.required(TemplateRef);\n\n  readonly dialog = inject(MatDialog);\n\n  open(config?: MatDialogConfig) {\n    return this.dialog.open(this.dialogTemplate(), config);\n  }\n}\n","import {ChangeDetectionStrategy, Component, inject} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {\n  MatDialog,\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogRef,\n  MatDialogTitle,\n} from '@angular/material/dialog';\n\n/**\n * @title Dialog Animations\n */\n@Component({\n  selector: 'dialog-animations-example',\n  styleUrl: 'dialog-animations-example.css',\n  templateUrl: 'dialog-animations-example.html',\n  imports: [MatButtonModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogAnimationsExample {\n  readonly dialog = inject(MatDialog);\n\n  openDialog(enterAnimationDuration: string, exitAnimationDuration: string): void {\n    this.dialog.open(DialogAnimationsExampleDialog, {\n      width: '250px',\n      enterAnimationDuration,\n      exitAnimationDuration,\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-animations-example-dialog',\n  templateUrl: 'dialog-animations-example-dialog.html',\n  imports: [MatButtonModule, MatDialogActions, MatDialogClose, MatDialogTitle, MatDialogContent],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DialogAnimationsExampleDialog {\n  readonly dialogRef = inject(MatDialogRef<DialogAnimationsExampleDialog>);\n}\n"],"names":["DialogContentExample","dialog","inject","openDialog","MatButtonModule","kind","type","i1","MatButton","selector","inputs","exportAs","MatDialogModule","changeDetection","i0","ChangeDetectionStrategy","OnPush","imports","template","open","DialogDataExampleDialog","animal","deps","target","ɵɵFactoryTarget","Component","isStandalone","ngImport","decorators","MatDialog","data","name","dialogRef","subscribe","result","console","log","undefined","set","MatFormFieldModule","MatFormField","MatLabel","MatInputModule","i2","MatInput","FormsModule","i3","DefaultValueAccessor","NgControlStatus","NgModel","outputs","i4","MatDialogContent","DialogFromMenuExample","menuTrigger","viewChild","required","MatMenuTrigger","DialogFromMenuExampleDialog","restoreFocus","viewQueries","propertyName","first","predicate","descendants","isSignal","MatMenuModule","MatMenu","MatMenuItem","DialogHarnessExample","dialogTemplate","config","enterAnimationDuration","exitAnimationDuration","DialogAnimationsExampleDialog"],"mappings":"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"}