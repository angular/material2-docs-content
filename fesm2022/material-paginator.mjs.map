{"version":3,"file":"material-paginator.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/paginator/paginator-configurable/paginator-configurable-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/paginator/paginator-overview/paginator-overview-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/paginator/paginator-harness/paginator-harness-example.ts","../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/src/components-examples/material/paginator/paginator-intl/paginator-intl-example.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {PageEvent, MatPaginatorModule} from '@angular/material/paginator';\nimport {JsonPipe} from '@angular/common';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {FormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n/**\n * @title Configurable paginator\n */\n@Component({\n  selector: 'paginator-configurable-example',\n  templateUrl: 'paginator-configurable-example.html',\n  styleUrl: 'paginator-configurable-example.css',\n  imports: [\n    MatFormFieldModule,\n    MatInputModule,\n    FormsModule,\n    MatSlideToggleModule,\n    MatPaginatorModule,\n    JsonPipe,\n  ],\n})\nexport class PaginatorConfigurableExample {\n  length = 50;\n  pageSize = 10;\n  pageIndex = 0;\n  pageSizeOptions = [5, 10, 25];\n\n  hidePageSize = false;\n  showPageSizeOptions = true;\n  showFirstLastButtons = true;\n  disabled = false;\n\n  pageEvent: PageEvent;\n\n  handlePageEvent(e: PageEvent) {\n    this.pageEvent = e;\n    this.length = e.length;\n    this.pageSize = e.pageSize;\n    this.pageIndex = e.pageIndex;\n  }\n\n  setPageSizeOptions(setPageSizeOptionsInput: string) {\n    if (setPageSizeOptionsInput) {\n      this.pageSizeOptions = setPageSizeOptionsInput.split(',').map(str => +str);\n    }\n  }\n}\n","import {Component} from '@angular/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n/**\n * @title Paginator\n */\n@Component({\n  selector: 'paginator-overview-example',\n  templateUrl: 'paginator-overview-example.html',\n  imports: [MatPaginatorModule],\n})\nexport class PaginatorOverviewExample {}\n","import {Component} from '@angular/core';\nimport {PageEvent, MatPaginatorModule} from '@angular/material/paginator';\n\n/**\n * @title Testing with MatPaginatorHarness\n */\n@Component({\n  selector: 'paginator-harness-example',\n  templateUrl: 'paginator-harness-example.html',\n  imports: [MatPaginatorModule],\n})\nexport class PaginatorHarnessExample {\n  length = 500;\n  pageSize = 10;\n  pageIndex = 0;\n  pageSizeOptions = [5, 10, 25];\n  showFirstLastButtons = true;\n\n  handlePageEvent(event: PageEvent) {\n    this.length = event.length;\n    this.pageSize = event.pageSize;\n    this.pageIndex = event.pageIndex;\n  }\n}\n","import {Component, Injectable} from '@angular/core';\nimport {MatPaginatorIntl, MatPaginatorModule} from '@angular/material/paginator';\nimport {Subject} from 'rxjs';\n\nimport '@angular/localize/init';\n\n@Injectable()\nexport class MyCustomPaginatorIntl implements MatPaginatorIntl {\n  changes = new Subject<void>();\n\n  // For internationalization, the `$localize` function from\n  // the `@angular/localize` package can be used.\n  firstPageLabel = $localize`First page`;\n  itemsPerPageLabel = $localize`Items per page:`;\n  lastPageLabel = $localize`Last page`;\n\n  // You can set labels to an arbitrary string too, or dynamically compute\n  // it through other third-party internationalization libraries.\n  nextPageLabel = 'Next page';\n  previousPageLabel = 'Previous page';\n\n  getRangeLabel(page: number, pageSize: number, length: number): string {\n    if (length === 0) {\n      return $localize`Page 1 of 1`;\n    }\n    const amountPages = Math.ceil(length / pageSize);\n    return $localize`Page ${page + 1} of ${amountPages}`;\n  }\n}\n\n/**\n * @title Paginator internationalization\n */\n@Component({\n  selector: 'paginator-intl-example',\n  templateUrl: 'paginator-intl-example.html',\n  imports: [MatPaginatorModule],\n  providers: [{provide: MatPaginatorIntl, useClass: MyCustomPaginatorIntl}],\n})\nexport class PaginatorIntlExample {}\n"],"names":["PaginatorConfigurableExample","length","pageSize","pageIndex","pageSizeOptions","hidePageSize","showFirstLastButtons","pageEvent","e","setPageSizeOptionsInput","split","map","str","deps","target","i0","ɵɵFactoryTarget","Component","isStandalone","selector","ngImport","template","MatFormFieldModule","kind","type","i1","MatFormField","inputs","exportAs","MatLabel","MatInputModule","i2","MatInput","FormsModule","i3","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgModel","outputs","MatSlideToggleModule","i4","MatSlideToggle","MatPaginatorModule","i5","MatPaginator","JsonPipe","name","decorators","imports","PaginatorHarnessExample","MyCustomPaginatorIntl","Subject","firstPageLabel","$localize","nextPageLabel","getRangeLabel","page","Injectable","PaginatorIntlExample","providers"],"mappings":"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"}