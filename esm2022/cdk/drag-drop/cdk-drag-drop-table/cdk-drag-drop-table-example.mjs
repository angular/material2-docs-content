import { Component, ViewChild } from '@angular/core';
import { CdkDropList, CdkDrag, moveItemInArray } from '@angular/cdk/drag-drop';
import { MatTable, MatTableModule } from '@angular/material/table';
import { MatIconModule } from '@angular/material/icon';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/table";
import * as i2 from "@angular/material/icon";
export const ELEMENT_DATA = [
    { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H', quantity: 100 },
    { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He', quantity: 100 },
    { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li', quantity: 100 },
    { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be', quantity: 100 },
    { position: 5, name: 'Boron', weight: 10.811, symbol: 'B', quantity: 100 },
    { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C', quantity: 100 },
    { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N', quantity: 100 },
    { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O', quantity: 100 },
    { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F', quantity: 100 },
    { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne', quantity: 100 },
];
/**
 * @title Drag&Drop table
 */
export class CdkDragDropTableExample {
    constructor() {
        this.displayedColumns = ['position', 'name', 'weight', 'symbol', 'quantity'];
        this.dataSource = ELEMENT_DATA;
    }
    drop(event) {
        const previousIndex = this.dataSource.findIndex(d => d === event.item.data);
        moveItemInArray(this.dataSource, previousIndex, event.currentIndex);
        this.table.renderRows();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: CdkDragDropTableExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "18.0.0", type: CdkDragDropTableExample, isStandalone: true, selector: "cdk-drag-drop-table-example", viewQueries: [{ propertyName: "table", first: true, predicate: ["table"], descendants: true, static: true }], ngImport: i0, template: "<mat-table #table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" cdkDropList (cdkDropListDropped)=\"drop($event)\"\r\n  cdkDropListData=\"dataSource\">\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\" sticky>\r\n    <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">\r\n      <mat-icon class=\"example-drag-cursor\">reorder</mat-icon>\r\n      <span>{{element.position}}</span>\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Weight Column -->\r\n  <ng-container matColumnDef=\"weight\">\r\n    <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Symbol Column -->\r\n  <ng-container matColumnDef=\"symbol\">\r\n    <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Quantity Column -->\r\n  <ng-container matColumnDef=\"quantity\">\r\n    <mat-header-cell *matHeaderCellDef> Quantity of Element </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">{{element.quantity}}</mat-cell>\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" cdkDrag [cdkDragData]=\"row\"></mat-row>\r\n</mat-table>\r\n", styles: ["table {\n  width: 100%;\n}\n\n.example-drag-cursor {\n  margin-right: 16px;\n  cursor: move;\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\n    0 8px 10px 1px rgba(0, 0, 0, 0.14),\n    0 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: white;\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.cdk-drop-list-dragging .mat-row:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n"], dependencies: [{ kind: "directive", type: CdkDropList, selector: "[cdkDropList], cdk-drop-list", inputs: ["cdkDropListConnectedTo", "cdkDropListData", "cdkDropListOrientation", "id", "cdkDropListLockAxis", "cdkDropListDisabled", "cdkDropListSortingDisabled", "cdkDropListEnterPredicate", "cdkDropListSortPredicate", "cdkDropListAutoScrollDisabled", "cdkDropListAutoScrollStep"], outputs: ["cdkDropListDropped", "cdkDropListEntered", "cdkDropListExited", "cdkDropListSorted"], exportAs: ["cdkDropList"] }, { kind: "directive", type: CdkDrag, selector: "[cdkDrag]", inputs: ["cdkDragData", "cdkDragLockAxis", "cdkDragRootElement", "cdkDragBoundary", "cdkDragStartDelay", "cdkDragFreeDragPosition", "cdkDragDisabled", "cdkDragConstrainPosition", "cdkDragPreviewClass", "cdkDragPreviewContainer"], outputs: ["cdkDragStarted", "cdkDragReleased", "cdkDragEnded", "cdkDragEntered", "cdkDragExited", "cdkDragDropped", "cdkDragMoved"], exportAs: ["cdkDrag"] }, { kind: "ngmodule", type: MatTableModule }, { kind: "component", type: i1.MatTable, selector: "mat-table, table[mat-table]", exportAs: ["matTable"] }, { kind: "directive", type: i1.MatHeaderCellDef, selector: "[matHeaderCellDef]" }, { kind: "directive", type: i1.MatHeaderRowDef, selector: "[matHeaderRowDef]", inputs: ["matHeaderRowDef", "matHeaderRowDefSticky"] }, { kind: "directive", type: i1.MatColumnDef, selector: "[matColumnDef]", inputs: ["matColumnDef"] }, { kind: "directive", type: i1.MatCellDef, selector: "[matCellDef]" }, { kind: "directive", type: i1.MatRowDef, selector: "[matRowDef]", inputs: ["matRowDefColumns", "matRowDefWhen"] }, { kind: "directive", type: i1.MatHeaderCell, selector: "mat-header-cell, th[mat-header-cell]" }, { kind: "directive", type: i1.MatCell, selector: "mat-cell, td[mat-cell]" }, { kind: "component", type: i1.MatHeaderRow, selector: "mat-header-row, tr[mat-header-row]", exportAs: ["matHeaderRow"] }, { kind: "component", type: i1.MatRow, selector: "mat-row, tr[mat-row]", exportAs: ["matRow"] }, { kind: "ngmodule", type: MatIconModule }, { kind: "component", type: i2.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: CdkDragDropTableExample, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-drag-drop-table-example', standalone: true, imports: [CdkDropList, CdkDrag, MatTableModule, MatIconModule], template: "<mat-table #table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" cdkDropList (cdkDropListDropped)=\"drop($event)\"\r\n  cdkDropListData=\"dataSource\">\r\n  <!-- Position Column -->\r\n  <ng-container matColumnDef=\"position\" sticky>\r\n    <mat-header-cell *matHeaderCellDef> No. </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">\r\n      <mat-icon class=\"example-drag-cursor\">reorder</mat-icon>\r\n      <span>{{element.position}}</span>\r\n    </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Name Column -->\r\n  <ng-container matColumnDef=\"name\">\r\n    <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.name}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Weight Column -->\r\n  <ng-container matColumnDef=\"weight\">\r\n    <mat-header-cell *matHeaderCellDef> Weight </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.weight}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Symbol Column -->\r\n  <ng-container matColumnDef=\"symbol\">\r\n    <mat-header-cell *matHeaderCellDef> Symbol </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\"> {{element.symbol}} </mat-cell>\r\n  </ng-container>\r\n\r\n  <!-- Quantity Column -->\r\n  <ng-container matColumnDef=\"quantity\">\r\n    <mat-header-cell *matHeaderCellDef> Quantity of Element </mat-header-cell>\r\n    <mat-cell *matCellDef=\"let element\">{{element.quantity}}</mat-cell>\r\n  </ng-container>\r\n\r\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\" cdkDrag [cdkDragData]=\"row\"></mat-row>\r\n</mat-table>\r\n", styles: ["table {\n  width: 100%;\n}\n\n.example-drag-cursor {\n  margin-right: 16px;\n  cursor: move;\n}\n\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\n    0 8px 10px 1px rgba(0, 0, 0, 0.14),\n    0 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: white;\n}\n\n.cdk-drag-placeholder {\n  opacity: 0;\n}\n\n.cdk-drag-animating {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n\n.cdk-drop-list-dragging .mat-row:not(.cdk-drag-placeholder) {\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n}\n"] }]
        }], propDecorators: { table: [{
                type: ViewChild,
                args: ['table', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,