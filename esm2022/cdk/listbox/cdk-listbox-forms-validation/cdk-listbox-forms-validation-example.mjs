import { Component } from '@angular/core';
import { FormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { map } from 'rxjs/operators';
import { AsyncPipe, JsonPipe } from '@angular/common';
import { CdkListbox, CdkOption } from '@angular/cdk/listbox';
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
/** @title Listbox with forms validation. */
export class CdkListboxFormsValidationExample {
    constructor() {
        this.signs = [
            'Rat',
            'Ox',
            'Tiger',
            'Rabbit',
            'Dragon',
            'Snake',
            'Horse',
            'Goat',
            'Monkey',
            'Rooster',
            'Dog',
            'Pig',
        ];
        // #docregion errors
        this.signCtrl = new FormControl([], Validators.required);
        this.invalid = this.signCtrl.valueChanges.pipe(map(() => this.signCtrl.touched && !this.signCtrl.valid));
    }
    getErrors() {
        const errors = [];
        if (this.signCtrl.hasError('required')) {
            errors.push('You must enter your zodiac sign');
        }
        return errors.length ? errors : null;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.0-next.2", ngImport: i0, type: CdkListboxFormsValidationExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.0-next.2", type: CdkListboxFormsValidationExample, isStandalone: true, selector: "cdk-listbox-forms-validation-example", exportAs: ["cdkListboxFormsValidationExample"], ngImport: i0, template: "<div class=\"example-listbox-container\" [class.example-listbox-invalid]=\"invalid | async\">\n  <label class=\"example-listbox-label\" id=\"example-zodiac-sign-label\">\n    Zodiac Sign\n  </label>\n  <ul cdkListbox\n      [formControl]=\"signCtrl\"\n      aria-labelledby=\"example-zodiac-sign-label\"\n      class=\"example-listbox\">\n    @for (sign of signs; track sign) {\n      <li [cdkOption]=\"sign\" class=\"example-option\">{{sign}}</li>\n    }\n  </ul>\n</div>\n@if (invalid | async) {\n  <div class=\"example-listbox-errors\">\n    @for (error of getErrors(); track error) {\n      <p>{{error}}</p>\n    }\n  </div>\n}\n<p>\n  Your zodiac sign is: <strong>{{signCtrl.value | json}}</strong>&nbsp;\n  <button (click)=\"signCtrl.setValue([])\">Clear</button>\n</p>\n", styles: [".example-listbox-container {\n  display: block;\n  width: 250px;\n  border: 1px solid black;\n}\n\n.example-listbox-invalid {\n  border-color: red;\n}\n\n.example-listbox-label {\n  display: block;\n  padding: 5px;\n}\n\n.example-listbox-invalid .example-listbox-label {\n  color: red;\n}\n\n.example-listbox {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  height: 200px;\n  overflow: auto;\n}\n\n.example-option {\n  position: relative;\n  padding: 5px 5px 5px 25px;\n}\n\n.example-option[aria-selected='true']::before {\n  content: '';\n  display: block;\n  width: 20px;\n  height: 20px;\n  background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\"><path d=\"m9.55 18-5.7-5.7 1.425-1.425L9.55 15.15l9.175-9.175L20.15 7.4Z\"/></svg>'); /* stylelint-disable-line */\n  background-size: cover;\n  position: absolute;\n  left: 2px;\n}\n\n.example-option:focus {\n  background: rgba(0, 0, 0, 0.2);\n}\n\n.example-listbox-errors {\n  color: red;\n}\n"], dependencies: [{ kind: "directive", type: CdkListbox, selector: "[cdkListbox]", inputs: ["id", "tabindex", "cdkListboxValue", "cdkListboxMultiple", "cdkListboxDisabled", "cdkListboxUseActiveDescendant", "cdkListboxOrientation", "cdkListboxCompareWith", "cdkListboxNavigationWrapDisabled", "cdkListboxNavigatesDisabledOptions"], outputs: ["cdkListboxValueChange"], exportAs: ["cdkListbox"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i1.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: CdkOption, selector: "[cdkOption]", inputs: ["id", "cdkOption", "cdkOptionTypeaheadLabel", "cdkOptionDisabled", "tabindex"], exportAs: ["cdkOption"] }, { kind: "pipe", type: AsyncPipe, name: "async" }, { kind: "pipe", type: JsonPipe, name: "json" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.0-next.2", ngImport: i0, type: CdkListboxFormsValidationExample, decorators: [{
            type: Component,
            args: [{ selector: 'cdk-listbox-forms-validation-example', exportAs: 'cdkListboxFormsValidationExample', standalone: true, imports: [CdkListbox, FormsModule, ReactiveFormsModule, CdkOption, AsyncPipe, JsonPipe], template: "<div class=\"example-listbox-container\" [class.example-listbox-invalid]=\"invalid | async\">\n  <label class=\"example-listbox-label\" id=\"example-zodiac-sign-label\">\n    Zodiac Sign\n  </label>\n  <ul cdkListbox\n      [formControl]=\"signCtrl\"\n      aria-labelledby=\"example-zodiac-sign-label\"\n      class=\"example-listbox\">\n    @for (sign of signs; track sign) {\n      <li [cdkOption]=\"sign\" class=\"example-option\">{{sign}}</li>\n    }\n  </ul>\n</div>\n@if (invalid | async) {\n  <div class=\"example-listbox-errors\">\n    @for (error of getErrors(); track error) {\n      <p>{{error}}</p>\n    }\n  </div>\n}\n<p>\n  Your zodiac sign is: <strong>{{signCtrl.value | json}}</strong>&nbsp;\n  <button (click)=\"signCtrl.setValue([])\">Clear</button>\n</p>\n", styles: [".example-listbox-container {\n  display: block;\n  width: 250px;\n  border: 1px solid black;\n}\n\n.example-listbox-invalid {\n  border-color: red;\n}\n\n.example-listbox-label {\n  display: block;\n  padding: 5px;\n}\n\n.example-listbox-invalid .example-listbox-label {\n  color: red;\n}\n\n.example-listbox {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  height: 200px;\n  overflow: auto;\n}\n\n.example-option {\n  position: relative;\n  padding: 5px 5px 5px 25px;\n}\n\n.example-option[aria-selected='true']::before {\n  content: '';\n  display: block;\n  width: 20px;\n  height: 20px;\n  background-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" width=\"24\"><path d=\"m9.55 18-5.7-5.7 1.425-1.425L9.55 15.15l9.175-9.175L20.15 7.4Z\"/></svg>'); /* stylelint-disable-line */\n  background-size: cover;\n  position: absolute;\n  left: 2px;\n}\n\n.example-option:focus {\n  background: rgba(0, 0, 0, 0.2);\n}\n\n.example-listbox-errors {\n  color: red;\n}\n"] }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLWxpc3Rib3gtZm9ybXMtdmFsaWRhdGlvbi1leGFtcGxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xpc3Rib3gvY2RrLWxpc3Rib3gtZm9ybXMtdmFsaWRhdGlvbi9jZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uLWV4YW1wbGUudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbGlzdGJveC9jZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uL2Nkay1saXN0Ym94LWZvcm1zLXZhbGlkYXRpb24tZXhhbXBsZS5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDeEMsT0FBTyxFQUFDLFdBQVcsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDekYsT0FBTyxFQUFDLEdBQUcsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRW5DLE9BQU8sRUFBQyxTQUFTLEVBQUUsUUFBUSxFQUFDLE1BQU0saUJBQWlCLENBQUM7QUFDcEQsT0FBTyxFQUFDLFVBQVUsRUFBRSxTQUFTLEVBQUMsTUFBTSxzQkFBc0IsQ0FBQzs7O0FBRTNELDRDQUE0QztBQVM1QyxNQUFNLE9BQU8sZ0NBQWdDO0lBaUIzQztRQWhCQSxVQUFLLEdBQUc7WUFDTixLQUFLO1lBQ0wsSUFBSTtZQUNKLE9BQU87WUFDUCxRQUFRO1lBQ1IsUUFBUTtZQUNSLE9BQU87WUFDUCxPQUFPO1lBQ1AsTUFBTTtZQUNOLFFBQVE7WUFDUixTQUFTO1lBQ1QsS0FBSztZQUNMLEtBQUs7U0FDTixDQUFDO1FBU0Ysb0JBQW9CO1FBQ3BCLGFBQVEsR0FBRyxJQUFJLFdBQVcsQ0FBVyxFQUFFLEVBQUUsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBTjVELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUM1QyxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUN6RCxDQUFDO0lBQ0osQ0FBQztJQUtELFNBQVM7UUFDUCxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUM7UUFDbEIsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsRUFBRSxDQUFDO1lBQ3ZDLE1BQU0sQ0FBQyxJQUFJLENBQUMsaUNBQWlDLENBQUMsQ0FBQztRQUNqRCxDQUFDO1FBRUQsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztJQUN2QyxDQUFDO3FIQWpDVSxnQ0FBZ0M7eUdBQWhDLGdDQUFnQyxnSkNoQjdDLDJ3QkF3QkEsNmlDRFZZLFVBQVUsOFdBQUUsV0FBVyxzSUFBRSxtQkFBbUIsa05BQUUsU0FBUyxxS0FBRSxTQUFTLHlDQUFFLFFBQVE7O2tHQUUzRSxnQ0FBZ0M7a0JBUjVDLFNBQVM7K0JBQ0Usc0NBQXNDLFlBQ3RDLGtDQUFrQyxjQUdoQyxJQUFJLFdBQ1AsQ0FBQyxVQUFVLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsUUFBUSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtQ29udHJvbCwgVmFsaWRhdG9ycywgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7bWFwfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtBc3luY1BpcGUsIEpzb25QaXBlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtDZGtMaXN0Ym94LCBDZGtPcHRpb259IGZyb20gJ0Bhbmd1bGFyL2Nkay9saXN0Ym94JztcblxuLyoqIEB0aXRsZSBMaXN0Ym94IHdpdGggZm9ybXMgdmFsaWRhdGlvbi4gKi9cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Nkay1saXN0Ym94LWZvcm1zLXZhbGlkYXRpb24tZXhhbXBsZScsXG4gIGV4cG9ydEFzOiAnY2RrTGlzdGJveEZvcm1zVmFsaWRhdGlvbkV4YW1wbGUnLFxuICB0ZW1wbGF0ZVVybDogJ2Nkay1saXN0Ym94LWZvcm1zLXZhbGlkYXRpb24tZXhhbXBsZS5odG1sJyxcbiAgc3R5bGVVcmw6ICdjZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uLWV4YW1wbGUuY3NzJyxcbiAgc3RhbmRhbG9uZTogdHJ1ZSxcbiAgaW1wb3J0czogW0Nka0xpc3Rib3gsIEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlLCBDZGtPcHRpb24sIEFzeW5jUGlwZSwgSnNvblBpcGVdLFxufSlcbmV4cG9ydCBjbGFzcyBDZGtMaXN0Ym94Rm9ybXNWYWxpZGF0aW9uRXhhbXBsZSB7XG4gIHNpZ25zID0gW1xuICAgICdSYXQnLFxuICAgICdPeCcsXG4gICAgJ1RpZ2VyJyxcbiAgICAnUmFiYml0JyxcbiAgICAnRHJhZ29uJyxcbiAgICAnU25ha2UnLFxuICAgICdIb3JzZScsXG4gICAgJ0dvYXQnLFxuICAgICdNb25rZXknLFxuICAgICdSb29zdGVyJyxcbiAgICAnRG9nJyxcbiAgICAnUGlnJyxcbiAgXTtcbiAgaW52YWxpZDogT2JzZXJ2YWJsZTxib29sZWFuPjtcblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLmludmFsaWQgPSB0aGlzLnNpZ25DdHJsLnZhbHVlQ2hhbmdlcy5waXBlKFxuICAgICAgbWFwKCgpID0+IHRoaXMuc2lnbkN0cmwudG91Y2hlZCAmJiAhdGhpcy5zaWduQ3RybC52YWxpZCksXG4gICAgKTtcbiAgfVxuXG4gIC8vICNkb2NyZWdpb24gZXJyb3JzXG4gIHNpZ25DdHJsID0gbmV3IEZvcm1Db250cm9sPHN0cmluZ1tdPihbXSwgVmFsaWRhdG9ycy5yZXF1aXJlZCk7XG5cbiAgZ2V0RXJyb3JzKCkge1xuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIGlmICh0aGlzLnNpZ25DdHJsLmhhc0Vycm9yKCdyZXF1aXJlZCcpKSB7XG4gICAgICBlcnJvcnMucHVzaCgnWW91IG11c3QgZW50ZXIgeW91ciB6b2RpYWMgc2lnbicpO1xuICAgIH1cblxuICAgIHJldHVybiBlcnJvcnMubGVuZ3RoID8gZXJyb3JzIDogbnVsbDtcbiAgfVxuICAvLyAjZW5kZG9jcmVnaW9uIGVycm9yc1xufVxuIiwiPGRpdiBjbGFzcz1cImV4YW1wbGUtbGlzdGJveC1jb250YWluZXJcIiBbY2xhc3MuZXhhbXBsZS1saXN0Ym94LWludmFsaWRdPVwiaW52YWxpZCB8IGFzeW5jXCI+XG4gIDxsYWJlbCBjbGFzcz1cImV4YW1wbGUtbGlzdGJveC1sYWJlbFwiIGlkPVwiZXhhbXBsZS16b2RpYWMtc2lnbi1sYWJlbFwiPlxuICAgIFpvZGlhYyBTaWduXG4gIDwvbGFiZWw+XG4gIDx1bCBjZGtMaXN0Ym94XG4gICAgICBbZm9ybUNvbnRyb2xdPVwic2lnbkN0cmxcIlxuICAgICAgYXJpYS1sYWJlbGxlZGJ5PVwiZXhhbXBsZS16b2RpYWMtc2lnbi1sYWJlbFwiXG4gICAgICBjbGFzcz1cImV4YW1wbGUtbGlzdGJveFwiPlxuICAgIEBmb3IgKHNpZ24gb2Ygc2lnbnM7IHRyYWNrIHNpZ24pIHtcbiAgICAgIDxsaSBbY2RrT3B0aW9uXT1cInNpZ25cIiBjbGFzcz1cImV4YW1wbGUtb3B0aW9uXCI+e3tzaWdufX08L2xpPlxuICAgIH1cbiAgPC91bD5cbjwvZGl2PlxuQGlmIChpbnZhbGlkIHwgYXN5bmMpIHtcbiAgPGRpdiBjbGFzcz1cImV4YW1wbGUtbGlzdGJveC1lcnJvcnNcIj5cbiAgICBAZm9yIChlcnJvciBvZiBnZXRFcnJvcnMoKTsgdHJhY2sgZXJyb3IpIHtcbiAgICAgIDxwPnt7ZXJyb3J9fTwvcD5cbiAgICB9XG4gIDwvZGl2PlxufVxuPHA+XG4gIFlvdXIgem9kaWFjIHNpZ24gaXM6IDxzdHJvbmc+e3tzaWduQ3RybC52YWx1ZSB8IGpzb259fTwvc3Ryb25nPiZuYnNwO1xuICA8YnV0dG9uIChjbGljayk9XCJzaWduQ3RybC5zZXRWYWx1ZShbXSlcIj5DbGVhcjwvYnV0dG9uPlxuPC9wPlxuIl19