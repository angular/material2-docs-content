/**
 ******************************************************************************
 * DO NOT MANUALLY EDIT THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED.
 ******************************************************************************
 */
export const EXAMPLE_COMPONENTS = {
    "cdk-popover-edit-cdk-table-flex": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-cdk-table-flex",
        "title": "CDK Popover Edit on a flex cdk-table.",
        "componentName": "CdkPopoverEditCdkTableFlexExample",
        "files": [
            "cdk-popover-edit-cdk-table-flex-example.ts",
            "cdk-popover-edit-cdk-table-flex-example.html",
            "cdk-popover-edit-cdk-table-flex-example.css"
        ],
        "selector": "cdk-popover-edit-cdk-table-flex-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-cdk-table-flex-example.ts",
        "importPath": "cdk-experimental/popover-edit"
    },
    "cdk-popover-edit-cdk-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-cdk-table",
        "title": "CDK Popover Edit on a CDK data-table",
        "componentName": "CdkPopoverEditCdkTableExample",
        "files": [
            "cdk-popover-edit-cdk-table-example.ts",
            "cdk-popover-edit-cdk-table-example.html",
            "cdk-popover-edit-cdk-table-example.css"
        ],
        "selector": "cdk-popover-edit-cdk-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-cdk-table-example.ts",
        "importPath": "cdk-experimental/popover-edit"
    },
    "cdk-popover-edit-cell-span-vanilla-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-cell-span-vanilla-table",
        "title": "CDK Popover Edit spanning multiple columns on an HTML data-table",
        "componentName": "CdkPopoverEditCellSpanVanillaTableExample",
        "files": [
            "cdk-popover-edit-cell-span-vanilla-table-example.ts",
            "cdk-popover-edit-cell-span-vanilla-table-example.html",
            "cdk-popover-edit-cell-span-vanilla-table-example.css"
        ],
        "selector": "cdk-popover-edit-cell-span-vanilla-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-cell-span-vanilla-table-example.ts",
        "importPath": "cdk-experimental/popover-edit"
    },
    "cdk-popover-edit-tab-out-vanilla-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-tab-out-vanilla-table",
        "title": "CDK Popover Edit with spreadsheet-like configuration on an HTML data-table",
        "componentName": "CdkPopoverEditTabOutVanillaTableExample",
        "files": [
            "cdk-popover-edit-tab-out-vanilla-table-example.ts",
            "cdk-popover-edit-tab-out-vanilla-table-example.html",
            "cdk-popover-edit-tab-out-vanilla-table-example.css"
        ],
        "selector": "cdk-popover-edit-tab-out-vanilla-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-tab-out-vanilla-table-example.ts",
        "importPath": "cdk-experimental/popover-edit"
    },
    "cdk-popover-edit-vanilla-table": {
        "packagePath": "cdk-experimental/popover-edit/cdk-popover-edit-vanilla-table",
        "title": "CDK Popover Edit on an HTML data-table",
        "componentName": "CdkPopoverEditVanillaTableExample",
        "files": [
            "cdk-popover-edit-vanilla-table-example.ts",
            "cdk-popover-edit-vanilla-table-example.html",
            "cdk-popover-edit-vanilla-table-example.css"
        ],
        "selector": "cdk-popover-edit-vanilla-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-popover-edit-vanilla-table-example.ts",
        "importPath": "cdk-experimental/popover-edit"
    },
    "cdk-selection-column": {
        "packagePath": "cdk-experimental/selection/cdk-selection-column",
        "title": "CDK Selection Column on a CDK table.",
        "componentName": "CdkSelectionColumnExample",
        "files": [
            "cdk-selection-column-example.ts",
            "cdk-selection-column-example.html",
            "cdk-selection-column-example.css"
        ],
        "selector": "cdk-selection-column-example",
        "additionalComponents": [],
        "primaryFile": "cdk-selection-column-example.ts",
        "importPath": "cdk-experimental/selection"
    },
    "cdk-selection-list": {
        "packagePath": "cdk-experimental/selection/cdk-selection-list",
        "title": "CDK Selection on a simple list.",
        "componentName": "CdkSelectionListExample",
        "files": [
            "cdk-selection-list-example.ts",
            "cdk-selection-list-example.html"
        ],
        "selector": "cdk-selection-list-example",
        "additionalComponents": [],
        "primaryFile": "cdk-selection-list-example.ts",
        "importPath": "cdk-experimental/selection"
    },
    "focus-monitor-directives": {
        "packagePath": "cdk/a11y/focus-monitor-directives",
        "title": "Monitoring focus with FocusMonitor",
        "componentName": "FocusMonitorDirectivesExample",
        "files": [
            "focus-monitor-directives-example.ts",
            "focus-monitor-directives-example.html",
            "focus-monitor-directives-example.css"
        ],
        "selector": "focus-monitor-directives-example",
        "additionalComponents": [],
        "primaryFile": "focus-monitor-directives-example.ts",
        "importPath": "cdk/a11y"
    },
    "focus-monitor-focus-via": {
        "packagePath": "cdk/a11y/focus-monitor-focus-via",
        "title": "Focusing with a specific FocusOrigin",
        "componentName": "FocusMonitorFocusViaExample",
        "files": [
            "focus-monitor-focus-via-example.ts",
            "focus-monitor-focus-via-example.html",
            "focus-monitor-focus-via-example.css"
        ],
        "selector": "focus-monitor-focus-via-example",
        "additionalComponents": [],
        "primaryFile": "focus-monitor-focus-via-example.ts",
        "importPath": "cdk/a11y"
    },
    "focus-monitor-overview": {
        "packagePath": "cdk/a11y/focus-monitor-overview",
        "title": "Monitoring focus with FocusMonitor",
        "componentName": "FocusMonitorOverviewExample",
        "files": [
            "focus-monitor-overview-example.ts",
            "focus-monitor-overview-example.html",
            "focus-monitor-overview-example.css"
        ],
        "selector": "focus-monitor-overview-example",
        "additionalComponents": [],
        "primaryFile": "focus-monitor-overview-example.ts",
        "importPath": "cdk/a11y"
    },
    "cdk-accordion-overview": {
        "packagePath": "cdk/accordion/cdk-accordion-overview",
        "title": "Accordion overview",
        "componentName": "CdkAccordionOverviewExample",
        "files": [
            "cdk-accordion-overview-example.ts",
            "cdk-accordion-overview-example.html",
            "cdk-accordion-overview-example.css"
        ],
        "selector": "cdk-accordion-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-accordion-overview-example.ts",
        "importPath": "cdk/accordion"
    },
    "cdk-clipboard-overview": {
        "packagePath": "cdk/clipboard/cdk-clipboard-overview",
        "title": "Clipboard overview",
        "componentName": "CdkClipboardOverviewExample",
        "files": [
            "cdk-clipboard-overview-example.ts",
            "cdk-clipboard-overview-example.html",
            "cdk-clipboard-overview-example.css"
        ],
        "selector": "cdk-clipboard-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-clipboard-overview-example.ts",
        "importPath": "cdk/clipboard"
    },
    "cdk-dialog-data": {
        "packagePath": "cdk/dialog/cdk-dialog-data",
        "title": "Injecting data when opening a dialog",
        "componentName": "CdkDialogDataExample",
        "files": [
            "cdk-dialog-data-example.ts",
            "cdk-dialog-data-example.html",
            "cdk-dialog-data-example-dialog.html",
            "./cdk-dialog-data-example-dialog.css"
        ],
        "selector": "cdk-dialog-data-example",
        "additionalComponents": [
            "CdkDialogDataExampleDialog"
        ],
        "primaryFile": "cdk-dialog-data-example.ts",
        "importPath": "cdk/dialog"
    },
    "cdk-dialog-overview": {
        "packagePath": "cdk/dialog/cdk-dialog-overview",
        "title": "CDK Dialog Overview",
        "componentName": "CdkDialogOverviewExample",
        "files": [
            "cdk-dialog-overview-example.ts",
            "cdk-dialog-overview-example.html",
            "cdk-dialog-overview-example-dialog.html",
            "cdk-dialog-overview-example-dialog.css"
        ],
        "selector": "cdk-dialog-overview-example",
        "additionalComponents": [
            "CdkDialogOverviewExampleDialog"
        ],
        "primaryFile": "cdk-dialog-overview-example.ts",
        "importPath": "cdk/dialog"
    },
    "cdk-dialog-styling": {
        "packagePath": "cdk/dialog/cdk-dialog-styling",
        "title": "CDK Dialog Styling",
        "componentName": "CdkDialogStylingExample",
        "files": [
            "cdk-dialog-styling-example.ts",
            "cdk-dialog-styling-example.html",
            "cdk-dialog-styling-example-dialog.html",
            "cdk-dialog-styling-example-dialog.css"
        ],
        "selector": "cdk-dialog-styling-example",
        "additionalComponents": [
            "CdkDialogStylingExampleDialog"
        ],
        "primaryFile": "cdk-dialog-styling-example.ts",
        "importPath": "cdk/dialog"
    },
    "cdk-drag-drop-axis-lock": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-axis-lock",
        "title": "Drag&Drop position locking",
        "componentName": "CdkDragDropAxisLockExample",
        "files": [
            "cdk-drag-drop-axis-lock-example.ts",
            "cdk-drag-drop-axis-lock-example.html",
            "cdk-drag-drop-axis-lock-example.css"
        ],
        "selector": "cdk-drag-drop-axis-lock-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-axis-lock-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-boundary": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-boundary",
        "title": "Drag&Drop boundary",
        "componentName": "CdkDragDropBoundaryExample",
        "files": [
            "cdk-drag-drop-boundary-example.ts",
            "cdk-drag-drop-boundary-example.html",
            "cdk-drag-drop-boundary-example.css"
        ],
        "selector": "cdk-drag-drop-boundary-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-boundary-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-connected-sorting-group": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-connected-sorting-group",
        "title": "Drag&Drop connected sorting group",
        "componentName": "CdkDragDropConnectedSortingGroupExample",
        "files": [
            "cdk-drag-drop-connected-sorting-group-example.ts",
            "cdk-drag-drop-connected-sorting-group-example.html",
            "cdk-drag-drop-connected-sorting-group-example.css"
        ],
        "selector": "cdk-drag-drop-connected-sorting-group-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-connected-sorting-group-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-connected-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-connected-sorting",
        "title": "Drag&Drop connected sorting",
        "componentName": "CdkDragDropConnectedSortingExample",
        "files": [
            "cdk-drag-drop-connected-sorting-example.ts",
            "cdk-drag-drop-connected-sorting-example.html",
            "cdk-drag-drop-connected-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-connected-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-connected-sorting-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-custom-placeholder": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-custom-placeholder",
        "title": "Drag&Drop custom placeholder",
        "componentName": "CdkDragDropCustomPlaceholderExample",
        "files": [
            "cdk-drag-drop-custom-placeholder-example.ts",
            "cdk-drag-drop-custom-placeholder-example.html",
            "cdk-drag-drop-custom-placeholder-example.css"
        ],
        "selector": "cdk-drag-drop-custom-placeholder-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-custom-placeholder-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-custom-preview": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-custom-preview",
        "title": "Drag&Drop custom preview",
        "componentName": "CdkDragDropCustomPreviewExample",
        "files": [
            "cdk-drag-drop-custom-preview-example.ts",
            "cdk-drag-drop-custom-preview-example.html",
            "cdk-drag-drop-custom-preview-example.css"
        ],
        "selector": "cdk-drag-drop-custom-preview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-custom-preview-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-delay": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-delay",
        "title": "Delayed dragging",
        "componentName": "CdkDragDropDelayExample",
        "files": [
            "cdk-drag-drop-delay-example.ts",
            "cdk-drag-drop-delay-example.html",
            "cdk-drag-drop-delay-example.css"
        ],
        "selector": "cdk-drag-drop-delay-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-delay-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-disabled-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-disabled-sorting",
        "title": "Drag&Drop disabled sorting",
        "componentName": "CdkDragDropDisabledSortingExample",
        "files": [
            "cdk-drag-drop-disabled-sorting-example.ts",
            "cdk-drag-drop-disabled-sorting-example.html",
            "cdk-drag-drop-disabled-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-disabled-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-disabled-sorting-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-disabled": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-disabled",
        "title": "Drag&Drop disabled",
        "componentName": "CdkDragDropDisabledExample",
        "files": [
            "cdk-drag-drop-disabled-example.ts",
            "cdk-drag-drop-disabled-example.html",
            "cdk-drag-drop-disabled-example.css"
        ],
        "selector": "cdk-drag-drop-disabled-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-disabled-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-enter-predicate": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-enter-predicate",
        "title": "Drag&Drop enter predicate",
        "componentName": "CdkDragDropEnterPredicateExample",
        "files": [
            "cdk-drag-drop-enter-predicate-example.ts",
            "cdk-drag-drop-enter-predicate-example.html",
            "cdk-drag-drop-enter-predicate-example.css"
        ],
        "selector": "cdk-drag-drop-enter-predicate-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-enter-predicate-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-free-drag-position": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-free-drag-position",
        "title": "Programmatically setting the free drag position",
        "componentName": "CdkDragDropFreeDragPositionExample",
        "files": [
            "cdk-drag-drop-free-drag-position-example.ts",
            "cdk-drag-drop-free-drag-position-example.html",
            "cdk-drag-drop-free-drag-position-example.css"
        ],
        "selector": "cdk-drag-drop-free-drag-position-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-free-drag-position-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-handle": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-handle",
        "title": "Drag&Drop with a handle",
        "componentName": "CdkDragDropHandleExample",
        "files": [
            "cdk-drag-drop-handle-example.ts",
            "cdk-drag-drop-handle-example.html",
            "cdk-drag-drop-handle-example.css"
        ],
        "selector": "cdk-drag-drop-handle-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-handle-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-horizontal-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-horizontal-sorting",
        "title": "Drag&Drop horizontal sorting",
        "componentName": "CdkDragDropHorizontalSortingExample",
        "files": [
            "cdk-drag-drop-horizontal-sorting-example.ts",
            "cdk-drag-drop-horizontal-sorting-example.html",
            "cdk-drag-drop-horizontal-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-horizontal-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-horizontal-sorting-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-overview": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-overview",
        "title": "Basic Drag&Drop",
        "componentName": "CdkDragDropOverviewExample",
        "files": [
            "cdk-drag-drop-overview-example.ts",
            "cdk-drag-drop-overview-example.html",
            "cdk-drag-drop-overview-example.css"
        ],
        "selector": "cdk-drag-drop-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-overview-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-root-element": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-root-element",
        "title": "Drag&Drop with alternate root element",
        "componentName": "CdkDragDropRootElementExample",
        "files": [
            "cdk-drag-drop-root-element-example.ts",
            "cdk-drag-drop-root-element-example.html",
            "cdk-drag-drop-root-element-example.css"
        ],
        "selector": "cdk-drag-drop-root-element-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-root-element-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-sort-predicate": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-sort-predicate",
        "title": "Drag&Drop sort predicate",
        "componentName": "CdkDragDropSortPredicateExample",
        "files": [
            "cdk-drag-drop-sort-predicate-example.ts",
            "cdk-drag-drop-sort-predicate-example.html",
            "cdk-drag-drop-sort-predicate-example.css"
        ],
        "selector": "cdk-drag-drop-sort-predicate-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-sort-predicate-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-sorting": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-sorting",
        "title": "Drag&Drop sorting",
        "componentName": "CdkDragDropSortingExample",
        "files": [
            "cdk-drag-drop-sorting-example.ts",
            "cdk-drag-drop-sorting-example.html",
            "cdk-drag-drop-sorting-example.css"
        ],
        "selector": "cdk-drag-drop-sorting-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-sorting-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "cdk-drag-drop-table": {
        "packagePath": "cdk/drag-drop/cdk-drag-drop-table",
        "title": "Drag&Drop table",
        "componentName": "CdkDragDropTableExample",
        "files": [
            "cdk-drag-drop-table-example.ts",
            "cdk-drag-drop-table-example.html",
            "cdk-drag-drop-table-example.css"
        ],
        "selector": "cdk-drag-drop-table-example",
        "additionalComponents": [],
        "primaryFile": "cdk-drag-drop-table-example.ts",
        "importPath": "cdk/drag-drop"
    },
    "breakpoint-observer-overview": {
        "packagePath": "cdk/layout/breakpoint-observer-overview",
        "title": "Respond to viewport changes with BreakpointObserver",
        "componentName": "BreakpointObserverOverviewExample",
        "files": [
            "breakpoint-observer-overview-example.ts",
            "breakpoint-observer-overview-example.html",
            "breakpoint-observer-overview-example.css"
        ],
        "selector": "breakpoint-observer-overview-example",
        "additionalComponents": [],
        "primaryFile": "breakpoint-observer-overview-example.ts",
        "importPath": "cdk/layout"
    },
    "cdk-listbox-activedescendant": {
        "packagePath": "cdk/listbox/cdk-listbox-activedescendant",
        "title": "Listbox with aria-activedescendant.",
        "componentName": "CdkListboxActivedescendantExample",
        "files": [
            "cdk-listbox-activedescendant-example.ts",
            "cdk-listbox-activedescendant-example.html",
            "cdk-listbox-activedescendant-example.css"
        ],
        "selector": "cdk-listbox-activedescendant-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-activedescendant-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-compare-with": {
        "packagePath": "cdk/listbox/cdk-listbox-compare-with",
        "title": "Listbox with complex object as values.",
        "componentName": "CdkListboxCompareWithExample",
        "files": [
            "cdk-listbox-compare-with-example.ts",
            "cdk-listbox-compare-with-example.html",
            "cdk-listbox-compare-with-example.css"
        ],
        "selector": "cdk-listbox-compare-with-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-compare-with-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-custom-navigation": {
        "packagePath": "cdk/listbox/cdk-listbox-custom-navigation",
        "title": "Listbox with custom keyboard navigation options.",
        "componentName": "CdkListboxCustomNavigationExample",
        "files": [
            "cdk-listbox-custom-navigation-example.ts",
            "cdk-listbox-custom-navigation-example.html",
            "cdk-listbox-custom-navigation-example.css"
        ],
        "selector": "cdk-listbox-custom-navigation-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-custom-navigation-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-custom-typeahead": {
        "packagePath": "cdk/listbox/cdk-listbox-custom-typeahead",
        "title": "Listbox with custom typeahead.",
        "componentName": "CdkListboxCustomTypeaheadExample",
        "files": [
            "cdk-listbox-custom-typeahead-example.ts",
            "cdk-listbox-custom-typeahead-example.html",
            "cdk-listbox-custom-typeahead-example.css"
        ],
        "selector": "cdk-listbox-custom-typeahead-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-custom-typeahead-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-disabled": {
        "packagePath": "cdk/listbox/cdk-listbox-disabled",
        "title": "Listbox with disabled options.",
        "componentName": "CdkListboxDisabledExample",
        "files": [
            "cdk-listbox-disabled-example.ts",
            "cdk-listbox-disabled-example.html",
            "cdk-listbox-disabled-example.css"
        ],
        "selector": "cdk-listbox-disabled-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-disabled-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-forms-validation": {
        "packagePath": "cdk/listbox/cdk-listbox-forms-validation",
        "title": "Listbox with forms validation.",
        "componentName": "CdkListboxFormsValidationExample",
        "files": [
            "cdk-listbox-forms-validation-example.ts",
            "cdk-listbox-forms-validation-example.html",
            "cdk-listbox-forms-validation-example.css"
        ],
        "selector": "cdk-listbox-forms-validation-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-forms-validation-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-horizontal": {
        "packagePath": "cdk/listbox/cdk-listbox-horizontal",
        "title": "Horizontal listbox",
        "componentName": "CdkListboxHorizontalExample",
        "files": [
            "cdk-listbox-horizontal-example.ts",
            "cdk-listbox-horizontal-example.html",
            "cdk-listbox-horizontal-example.css"
        ],
        "selector": "cdk-listbox-horizontal-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-horizontal-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-multiple": {
        "packagePath": "cdk/listbox/cdk-listbox-multiple",
        "title": "Listbox with multiple selection.",
        "componentName": "CdkListboxMultipleExample",
        "files": [
            "cdk-listbox-multiple-example.ts",
            "cdk-listbox-multiple-example.html",
            "cdk-listbox-multiple-example.css"
        ],
        "selector": "cdk-listbox-multiple-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-multiple-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-overview": {
        "packagePath": "cdk/listbox/cdk-listbox-overview",
        "title": "Basic listbox.",
        "componentName": "CdkListboxOverviewExample",
        "files": [
            "cdk-listbox-overview-example.ts",
            "cdk-listbox-overview-example.html",
            "cdk-listbox-overview-example.css"
        ],
        "selector": "cdk-listbox-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-overview-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-reactive-forms": {
        "packagePath": "cdk/listbox/cdk-listbox-reactive-forms",
        "title": "Listbox with reactive forms.",
        "componentName": "CdkListboxReactiveFormsExample",
        "files": [
            "cdk-listbox-reactive-forms-example.ts",
            "cdk-listbox-reactive-forms-example.html",
            "cdk-listbox-reactive-forms-example.css"
        ],
        "selector": "cdk-listbox-reactive-forms-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-reactive-forms-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-template-forms": {
        "packagePath": "cdk/listbox/cdk-listbox-template-forms",
        "title": "Listbox with template-driven forms.",
        "componentName": "CdkListboxTemplateFormsExample",
        "files": [
            "cdk-listbox-template-forms-example.ts",
            "cdk-listbox-template-forms-example.html",
            "cdk-listbox-template-forms-example.css"
        ],
        "selector": "cdk-listbox-template-forms-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-template-forms-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-listbox-value-binding": {
        "packagePath": "cdk/listbox/cdk-listbox-value-binding",
        "title": "Listbox with value binding.",
        "componentName": "CdkListboxValueBindingExample",
        "files": [
            "cdk-listbox-value-binding-example.ts",
            "cdk-listbox-value-binding-example.html",
            "cdk-listbox-value-binding-example.css"
        ],
        "selector": "cdk-listbox-value-binding-example",
        "additionalComponents": [],
        "primaryFile": "cdk-listbox-value-binding-example.ts",
        "importPath": "cdk/listbox"
    },
    "cdk-menu-context": {
        "packagePath": "cdk/menu/cdk-menu-context",
        "title": "Context menu.",
        "componentName": "CdkMenuContextExample",
        "files": [
            "cdk-menu-context-example.ts",
            "cdk-menu-context-example.html",
            "cdk-menu-context-example.css"
        ],
        "selector": "cdk-menu-context-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-context-example.ts",
        "importPath": "cdk/menu"
    },
    "cdk-menu-inline": {
        "packagePath": "cdk/menu/cdk-menu-inline",
        "title": "Gmail inline menu.",
        "componentName": "CdkMenuInlineExample",
        "files": [
            "cdk-menu-inline-example.ts",
            "cdk-menu-inline-example.html",
            "cdk-menu-inline-example.css"
        ],
        "selector": "cdk-menu-inline-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-inline-example.ts",
        "importPath": "cdk/menu"
    },
    "cdk-menu-menubar": {
        "packagePath": "cdk/menu/cdk-menu-menubar",
        "title": "Google Docs Menu Bar.",
        "componentName": "CdkMenuMenubarExample",
        "files": [
            "cdk-menu-menubar-example.ts",
            "cdk-menu-menubar-example.html",
            "cdk-menu-menubar-example.css"
        ],
        "selector": "cdk-menu-menubar-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-menubar-example.ts",
        "importPath": "cdk/menu"
    },
    "cdk-menu-nested-context": {
        "packagePath": "cdk/menu/cdk-menu-nested-context",
        "title": "Nested context menus.",
        "componentName": "CdkMenuNestedContextExample",
        "files": [
            "cdk-menu-nested-context-example.ts",
            "cdk-menu-nested-context-example.html",
            "cdk-menu-nested-context-example.css"
        ],
        "selector": "cdk-menu-nested-context-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-nested-context-example.ts",
        "importPath": "cdk/menu"
    },
    "cdk-menu-standalone-menu": {
        "packagePath": "cdk/menu/cdk-menu-standalone-menu",
        "title": "Menu with Standalone Trigger.",
        "componentName": "CdkMenuStandaloneMenuExample",
        "files": [
            "cdk-menu-standalone-menu-example.ts",
            "cdk-menu-standalone-menu-example.html",
            "cdk-menu-standalone-menu-example.css"
        ],
        "selector": "cdk-menu-standalone-menu-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-standalone-menu-example.ts",
        "importPath": "cdk/menu"
    },
    "cdk-menu-standalone-stateful-menu": {
        "packagePath": "cdk/menu/cdk-menu-standalone-stateful-menu",
        "title": "Stateful Menu with Standalone Trigger.",
        "componentName": "CdkMenuStandaloneStatefulMenuExample",
        "files": [
            "cdk-menu-standalone-stateful-menu-example.ts",
            "cdk-menu-standalone-stateful-menu-example.html",
            "cdk-menu-standalone-stateful-menu-example.css"
        ],
        "selector": "cdk-menu-standalone-stateful-menu-example",
        "additionalComponents": [],
        "primaryFile": "cdk-menu-standalone-stateful-menu-example.ts",
        "importPath": "cdk/menu"
    },
    "cdk-overlay-basic": {
        "packagePath": "cdk/overlay/cdk-overlay-basic",
        "title": "Overlay basic example",
        "componentName": "CdkOverlayBasicExample",
        "files": [
            "cdk-overlay-basic-example.ts",
            "./cdk-overlay-basic-example.html",
            "./cdk-overlay-basic-example.css"
        ],
        "selector": "cdk-overlay-basic-example",
        "additionalComponents": [],
        "primaryFile": "cdk-overlay-basic-example.ts",
        "importPath": "cdk/overlay"
    },
    "cdk-platform-overview": {
        "packagePath": "cdk/platform/cdk-platform-overview",
        "title": "Platform overview",
        "componentName": "CdkPlatformOverviewExample",
        "files": [
            "cdk-platform-overview-example.ts",
            "cdk-platform-overview-example.html"
        ],
        "selector": "cdk-platform-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-platform-overview-example.ts",
        "importPath": "cdk/platform"
    },
    "cdk-portal-overview": {
        "packagePath": "cdk/portal/cdk-portal-overview",
        "title": "Portal overview",
        "componentName": "CdkPortalOverviewExample",
        "files": [
            "cdk-portal-overview-example.ts",
            "cdk-portal-overview-example.html",
            "cdk-portal-overview-example.css"
        ],
        "selector": "cdk-portal-overview-example",
        "additionalComponents": [
            "ComponentPortalExample"
        ],
        "primaryFile": "cdk-portal-overview-example.ts",
        "importPath": "cdk/portal"
    },
    "cdk-virtual-scroll-append-only": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-append-only",
        "title": "Virtual scroll with view recycling disabled.",
        "componentName": "CdkVirtualScrollAppendOnlyExample",
        "files": [
            "cdk-virtual-scroll-append-only-example.ts",
            "cdk-virtual-scroll-append-only-example.html",
            "cdk-virtual-scroll-append-only-example.css"
        ],
        "selector": "cdk-virtual-scroll-append-only-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-append-only-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-context": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-context",
        "title": "Virtual scroll context variables",
        "componentName": "CdkVirtualScrollContextExample",
        "files": [
            "cdk-virtual-scroll-context-example.ts",
            "cdk-virtual-scroll-context-example.html",
            "cdk-virtual-scroll-context-example.css"
        ],
        "selector": "cdk-virtual-scroll-context-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-context-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-custom-strategy": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-custom-strategy",
        "title": "Virtual scroll with a custom strategy",
        "componentName": "CdkVirtualScrollCustomStrategyExample",
        "files": [
            "cdk-virtual-scroll-custom-strategy-example.ts",
            "cdk-virtual-scroll-custom-strategy-example.html",
            "cdk-virtual-scroll-custom-strategy-example.css"
        ],
        "selector": "cdk-virtual-scroll-custom-strategy-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-custom-strategy-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-data-source": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-data-source",
        "title": "Virtual scroll with a custom data source",
        "componentName": "CdkVirtualScrollDataSourceExample",
        "files": [
            "cdk-virtual-scroll-data-source-example.ts",
            "cdk-virtual-scroll-data-source-example.html",
            "cdk-virtual-scroll-data-source-example.css"
        ],
        "selector": "cdk-virtual-scroll-data-source-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-data-source-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-dl": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-dl",
        "title": "Virtual scrolling `<dl>`",
        "componentName": "CdkVirtualScrollDlExample",
        "files": [
            "cdk-virtual-scroll-dl-example.ts",
            "cdk-virtual-scroll-dl-example.html",
            "cdk-virtual-scroll-dl-example.css"
        ],
        "selector": "cdk-virtual-scroll-dl-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-dl-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-fixed-buffer": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-fixed-buffer",
        "title": "Fixed size virtual scroll with custom buffer parameters",
        "componentName": "CdkVirtualScrollFixedBufferExample",
        "files": [
            "cdk-virtual-scroll-fixed-buffer-example.ts",
            "cdk-virtual-scroll-fixed-buffer-example.html",
            "cdk-virtual-scroll-fixed-buffer-example.css"
        ],
        "selector": "cdk-virtual-scroll-fixed-buffer-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-fixed-buffer-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-horizontal": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-horizontal",
        "title": "Horizontal virtual scroll",
        "componentName": "CdkVirtualScrollHorizontalExample",
        "files": [
            "cdk-virtual-scroll-horizontal-example.ts",
            "cdk-virtual-scroll-horizontal-example.html",
            "cdk-virtual-scroll-horizontal-example.css"
        ],
        "selector": "cdk-virtual-scroll-horizontal-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-horizontal-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-overview": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-overview",
        "title": "Basic virtual scroll",
        "componentName": "CdkVirtualScrollOverviewExample",
        "files": [
            "cdk-virtual-scroll-overview-example.ts",
            "cdk-virtual-scroll-overview-example.html",
            "cdk-virtual-scroll-overview-example.css"
        ],
        "selector": "cdk-virtual-scroll-overview-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-overview-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-parent-scrolling": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-parent-scrolling",
        "title": "Virtual scrolling viewport parent element",
        "componentName": "CdkVirtualScrollParentScrollingExample",
        "files": [
            "cdk-virtual-scroll-parent-scrolling-example.ts",
            "cdk-virtual-scroll-parent-scrolling-example.html",
            "cdk-virtual-scroll-parent-scrolling-example.css"
        ],
        "selector": "cdk-virtual-scroll-parent-scrolling-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-parent-scrolling-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-template-cache": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-template-cache",
        "title": "Virtual scroll with no template caching",
        "componentName": "CdkVirtualScrollTemplateCacheExample",
        "files": [
            "cdk-virtual-scroll-template-cache-example.ts",
            "cdk-virtual-scroll-template-cache-example.html",
            "cdk-virtual-scroll-template-cache-example.css"
        ],
        "selector": "cdk-virtual-scroll-template-cache-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-template-cache-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-virtual-scroll-window-scrolling": {
        "packagePath": "cdk/scrolling/cdk-virtual-scroll-window-scrolling",
        "title": "Virtual scrolling window",
        "componentName": "CdkVirtualScrollWindowScrollingExample",
        "files": [
            "cdk-virtual-scroll-window-scrolling-example.ts",
            "cdk-virtual-scroll-window-scrolling-example.html",
            "cdk-virtual-scroll-window-scrolling-example.css"
        ],
        "selector": "cdk-virtual-scroll-window-scrolling-example",
        "additionalComponents": [],
        "primaryFile": "cdk-virtual-scroll-window-scrolling-example.ts",
        "importPath": "cdk/scrolling"
    },
    "cdk-custom-stepper-without-form": {
        "packagePath": "cdk/stepper/cdk-custom-stepper-without-form",
        "title": "A custom CDK stepper without a form",
        "componentName": "CdkCustomStepperWithoutFormExample",
        "files": [
            "cdk-custom-stepper-without-form-example.ts",
            "./cdk-custom-stepper-without-form-example.html",
            "./cdk-custom-stepper-without-form-example.css",
            "./example-custom-stepper.html",
            "./example-custom-stepper.css"
        ],
        "selector": "cdk-custom-stepper-without-form-example",
        "additionalComponents": [
            "CustomStepper"
        ],
        "primaryFile": "cdk-custom-stepper-without-form-example.ts",
        "importPath": "cdk/stepper"
    },
    "cdk-linear-stepper-with-form": {
        "packagePath": "cdk/stepper/cdk-linear-stepper-with-form",
        "title": "A custom CDK linear stepper with forms",
        "componentName": "CdkLinearStepperWithFormExample",
        "files": [
            "cdk-linear-stepper-with-form-example.ts",
            "./cdk-linear-stepper-with-form-example.html",
            "./cdk-linear-stepper-with-form-example.css",
            "./example-custom-linear-stepper.html",
            "./example-custom-linear-stepper.css"
        ],
        "selector": "cdk-linear-stepper-with-form-example",
        "additionalComponents": [
            "CustomLinearStepper"
        ],
        "primaryFile": "cdk-linear-stepper-with-form-example.ts",
        "importPath": "cdk/stepper"
    },
    "cdk-table-basic": {
        "packagePath": "cdk/table/cdk-table-basic",
        "title": "Basic CDK data-table",
        "componentName": "CdkTableBasicExample",
        "files": [
            "cdk-table-basic-example.ts",
            "cdk-table-basic-example.html",
            "cdk-table-basic-example.css"
        ],
        "selector": "cdk-table-basic-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-basic-example.ts",
        "importPath": "cdk/table"
    },
    "cdk-table-fixed-layout": {
        "packagePath": "cdk/table/cdk-table-fixed-layout",
        "title": "CDK table with a fixed layout.",
        "componentName": "CdkTableFixedLayoutExample",
        "files": [
            "cdk-table-fixed-layout-example.ts",
            "cdk-table-fixed-layout-example.html",
            "cdk-table-fixed-layout-example.css"
        ],
        "selector": "cdk-table-fixed-layout-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-fixed-layout-example.ts",
        "importPath": "cdk/table"
    },
    "cdk-table-flex-basic": {
        "packagePath": "cdk/table/cdk-table-flex-basic",
        "title": "Basic use of `<cdk-table>` (uses display flex)",
        "componentName": "CdkTableFlexBasicExample",
        "files": [
            "cdk-table-flex-basic-example.ts",
            "cdk-table-flex-basic-example.html",
            "cdk-table-flex-basic-example.css"
        ],
        "selector": "cdk-table-flex-basic-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-flex-basic-example.ts",
        "importPath": "cdk/table"
    },
    "cdk-table-recycle-rows": {
        "packagePath": "cdk/table/cdk-table-recycle-rows",
        "title": "Table that uses the recycle view repeater strategy.",
        "componentName": "CdkTableRecycleRowsExample",
        "files": [
            "cdk-table-recycle-rows-example.ts",
            "cdk-table-recycle-rows-example.html",
            "cdk-table-recycle-rows-example.css"
        ],
        "selector": "cdk-table-recycle-rows-example",
        "additionalComponents": [],
        "primaryFile": "cdk-table-recycle-rows-example.ts",
        "importPath": "cdk/table"
    },
    "text-field-autofill-directive": {
        "packagePath": "cdk/text-field/text-field-autofill-directive",
        "title": "Monitoring autofill state with cdkAutofill",
        "componentName": "TextFieldAutofillDirectiveExample",
        "files": [
            "text-field-autofill-directive-example.ts",
            "./text-field-autofill-directive-example.html",
            "./text-field-autofill-directive-example.css"
        ],
        "selector": "text-field-autofill-directive-example",
        "additionalComponents": [],
        "primaryFile": "text-field-autofill-directive-example.ts",
        "importPath": "cdk/text-field"
    },
    "text-field-autofill-monitor": {
        "packagePath": "cdk/text-field/text-field-autofill-monitor",
        "title": "Monitoring autofill state with AutofillMonitor",
        "componentName": "TextFieldAutofillMonitorExample",
        "files": [
            "text-field-autofill-monitor-example.ts",
            "./text-field-autofill-monitor-example.html",
            "./text-field-autofill-monitor-example.css"
        ],
        "selector": "text-field-autofill-monitor-example",
        "additionalComponents": [],
        "primaryFile": "text-field-autofill-monitor-example.ts",
        "importPath": "cdk/text-field"
    },
    "text-field-autosize-textarea": {
        "packagePath": "cdk/text-field/text-field-autosize-textarea",
        "title": "Auto-resizing textarea",
        "componentName": "TextFieldAutosizeTextareaExample",
        "files": [
            "text-field-autosize-textarea-example.ts",
            "./text-field-autosize-textarea-example.html",
            "./text-field-autosize-textarea-example.css"
        ],
        "selector": "text-field-autosize-textarea-example",
        "additionalComponents": [],
        "primaryFile": "text-field-autosize-textarea-example.ts",
        "importPath": "cdk/text-field"
    },
    "cdk-tree-flat": {
        "packagePath": "cdk/tree/cdk-tree-flat",
        "title": "Tree with flat nodes",
        "componentName": "CdkTreeFlatExample",
        "files": [
            "cdk-tree-flat-example.ts",
            "cdk-tree-flat-example.html",
            "cdk-tree-flat-example.css"
        ],
        "selector": "cdk-tree-flat-example",
        "additionalComponents": [],
        "primaryFile": "cdk-tree-flat-example.ts",
        "importPath": "cdk/tree"
    },
    "cdk-tree-nested": {
        "packagePath": "cdk/tree/cdk-tree-nested",
        "title": "Tree with nested nodes",
        "componentName": "CdkTreeNestedExample",
        "files": [
            "cdk-tree-nested-example.ts",
            "cdk-tree-nested-example.html",
            "cdk-tree-nested-example.css"
        ],
        "selector": "cdk-tree-nested-example",
        "additionalComponents": [],
        "primaryFile": "cdk-tree-nested-example.ts",
        "importPath": "cdk/tree"
    },
    "default-enabled-column-resize-flex": {
        "packagePath": "material-experimental/column-resize/default-enabled-column-resize-flex",
        "title": "Default-enabled column resize with a flex-based mat-table.",
        "componentName": "DefaultEnabledColumnResizeFlexExample",
        "files": [
            "default-enabled-column-resize-flex-example.ts",
            "default-enabled-column-resize-flex-example.html",
            "default-enabled-column-resize-flex-example.css"
        ],
        "selector": "default-enabled-column-resize-flex-example",
        "additionalComponents": [],
        "primaryFile": "default-enabled-column-resize-flex-example.ts",
        "importPath": "material-experimental/column-resize"
    },
    "default-enabled-column-resize": {
        "packagePath": "material-experimental/column-resize/default-enabled-column-resize",
        "title": "Default-enabled column resize with a table-based mat-table.",
        "componentName": "DefaultEnabledColumnResizeExample",
        "files": [
            "default-enabled-column-resize-example.ts",
            "default-enabled-column-resize-example.html",
            "default-enabled-column-resize-example.css"
        ],
        "selector": "default-enabled-column-resize-example",
        "additionalComponents": [],
        "primaryFile": "default-enabled-column-resize-example.ts",
        "importPath": "material-experimental/column-resize"
    },
    "opt-in-column-resize": {
        "packagePath": "material-experimental/column-resize/opt-in-column-resize",
        "title": "Opt-in column resize with a table-based mat-table.",
        "componentName": "OptInColumnResizeExample",
        "files": [
            "opt-in-column-resize-example.ts",
            "opt-in-column-resize-example.html",
            "opt-in-column-resize-example.css"
        ],
        "selector": "opt-in-column-resize-example",
        "additionalComponents": [],
        "primaryFile": "opt-in-column-resize-example.ts",
        "importPath": "material-experimental/column-resize"
    },
    "popover-edit-cell-span-mat-table": {
        "packagePath": "material-experimental/popover-edit/popover-edit-cell-span-mat-table",
        "title": "Material Popover Edit spanning multiple columns on a Material data-table",
        "componentName": "PopoverEditCellSpanMatTableExample",
        "files": [
            "popover-edit-cell-span-mat-table-example.ts",
            "popover-edit-cell-span-mat-table-example.html",
            "popover-edit-cell-span-mat-table-example.css"
        ],
        "selector": "popover-edit-cell-span-mat-table-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-cell-span-mat-table-example.ts",
        "importPath": "material-experimental/popover-edit"
    },
    "popover-edit-mat-table-flex": {
        "packagePath": "material-experimental/popover-edit/popover-edit-mat-table-flex",
        "title": "Material Popover Edit on a flex Material data-table",
        "componentName": "PopoverEditMatTableFlexExample",
        "files": [
            "popover-edit-mat-table-flex-example.ts",
            "popover-edit-mat-table-flex-example.html",
            "popover-edit-mat-table-flex-example.css"
        ],
        "selector": "popover-edit-mat-table-flex-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-mat-table-flex-example.ts",
        "importPath": "material-experimental/popover-edit"
    },
    "popover-edit-mat-table": {
        "packagePath": "material-experimental/popover-edit/popover-edit-mat-table",
        "title": "Material Popover Edit on a Material data-table",
        "componentName": "PopoverEditMatTableExample",
        "files": [
            "popover-edit-mat-table-example.ts",
            "popover-edit-mat-table-example.html",
            "popover-edit-mat-table-example.css"
        ],
        "selector": "popover-edit-mat-table-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-mat-table-example.ts",
        "importPath": "material-experimental/popover-edit"
    },
    "popover-edit-tab-out-mat-table": {
        "packagePath": "material-experimental/popover-edit/popover-edit-tab-out-mat-table",
        "title": "Material Popover Edit with spreadsheet-like configuration on a Material data-table",
        "componentName": "PopoverEditTabOutMatTableExample",
        "files": [
            "popover-edit-tab-out-mat-table-example.ts",
            "popover-edit-tab-out-mat-table-example.html",
            "popover-edit-tab-out-mat-table-example.css"
        ],
        "selector": "popover-edit-tab-out-mat-table-example",
        "additionalComponents": [],
        "primaryFile": "popover-edit-tab-out-mat-table-example.ts",
        "importPath": "material-experimental/popover-edit"
    },
    "mat-selection-column": {
        "packagePath": "material-experimental/selection/mat-selection-column",
        "title": "Table that uses `matSelectionColumn` which allows users to select rows.",
        "componentName": "MatSelectionColumnExample",
        "files": [
            "mat-selection-column-example.ts",
            "mat-selection-column-example.html",
            "mat-selection-column-example.css"
        ],
        "selector": "mat-selection-column-example",
        "additionalComponents": [],
        "primaryFile": "mat-selection-column-example.ts",
        "importPath": "material-experimental/selection"
    },
    "mat-selection-list": {
        "packagePath": "material-experimental/selection/mat-selection-list",
        "title": "Mat Selection on a simple list.",
        "componentName": "MatSelectionListExample",
        "files": [
            "mat-selection-list-example.ts",
            "mat-selection-list-example.html"
        ],
        "selector": "mat-selection-list-example",
        "additionalComponents": [],
        "primaryFile": "mat-selection-list-example.ts",
        "importPath": "material-experimental/selection"
    },
    "autocomplete-auto-active-first-option": {
        "packagePath": "material/autocomplete/autocomplete-auto-active-first-option",
        "title": "Highlight the first autocomplete option",
        "componentName": "AutocompleteAutoActiveFirstOptionExample",
        "files": [
            "autocomplete-auto-active-first-option-example.ts",
            "autocomplete-auto-active-first-option-example.html",
            "autocomplete-auto-active-first-option-example.css"
        ],
        "selector": "autocomplete-auto-active-first-option-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-auto-active-first-option-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-display": {
        "packagePath": "material/autocomplete/autocomplete-display",
        "title": "Display value autocomplete",
        "componentName": "AutocompleteDisplayExample",
        "files": [
            "autocomplete-display-example.ts",
            "autocomplete-display-example.html",
            "autocomplete-display-example.css"
        ],
        "selector": "autocomplete-display-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-display-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-filter": {
        "packagePath": "material/autocomplete/autocomplete-filter",
        "title": "Filter autocomplete",
        "componentName": "AutocompleteFilterExample",
        "files": [
            "autocomplete-filter-example.ts",
            "autocomplete-filter-example.html",
            "autocomplete-filter-example.css"
        ],
        "selector": "autocomplete-filter-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-filter-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-harness": {
        "packagePath": "material/autocomplete/autocomplete-harness",
        "title": "Testing with MatAutocompleteHarness",
        "componentName": "AutocompleteHarnessExample",
        "files": [
            "autocomplete-harness-example.ts",
            "autocomplete-harness-example.html",
            "autocomplete-harness-example.spec.ts"
        ],
        "selector": "autocomplete-harness-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-harness-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-optgroup": {
        "packagePath": "material/autocomplete/autocomplete-optgroup",
        "title": "Option groups autocomplete",
        "componentName": "AutocompleteOptgroupExample",
        "files": [
            "autocomplete-optgroup-example.ts",
            "autocomplete-optgroup-example.html"
        ],
        "selector": "autocomplete-optgroup-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-optgroup-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-overview": {
        "packagePath": "material/autocomplete/autocomplete-overview",
        "title": "Autocomplete overview",
        "componentName": "AutocompleteOverviewExample",
        "files": [
            "autocomplete-overview-example.ts",
            "autocomplete-overview-example.html",
            "autocomplete-overview-example.css"
        ],
        "selector": "autocomplete-overview-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-overview-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-plain-input": {
        "packagePath": "material/autocomplete/autocomplete-plain-input",
        "title": "Plain input autocomplete",
        "componentName": "AutocompletePlainInputExample",
        "files": [
            "autocomplete-plain-input-example.ts",
            "autocomplete-plain-input-example.html",
            "autocomplete-plain-input-example.css"
        ],
        "selector": "autocomplete-plain-input-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-plain-input-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-require-selection": {
        "packagePath": "material/autocomplete/autocomplete-require-selection",
        "title": "Require an autocomplete option to be selected",
        "componentName": "AutocompleteRequireSelectionExample",
        "files": [
            "autocomplete-require-selection-example.ts",
            "autocomplete-require-selection-example.html",
            "autocomplete-require-selection-example.css"
        ],
        "selector": "autocomplete-require-selection-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-require-selection-example.ts",
        "importPath": "material/autocomplete"
    },
    "autocomplete-simple": {
        "packagePath": "material/autocomplete/autocomplete-simple",
        "title": "Simple autocomplete",
        "componentName": "AutocompleteSimpleExample",
        "files": [
            "autocomplete-simple-example.ts",
            "autocomplete-simple-example.html",
            "autocomplete-simple-example.css"
        ],
        "selector": "autocomplete-simple-example",
        "additionalComponents": [],
        "primaryFile": "autocomplete-simple-example.ts",
        "importPath": "material/autocomplete"
    },
    "badge-harness": {
        "packagePath": "material/badge/badge-harness",
        "title": "Testing with MatBadgeHarness",
        "componentName": "BadgeHarnessExample",
        "files": [
            "badge-harness-example.ts",
            "badge-harness-example.html",
            "badge-harness-example.spec.ts"
        ],
        "selector": "badge-harness-example",
        "additionalComponents": [],
        "primaryFile": "badge-harness-example.ts",
        "importPath": "material/badge"
    },
    "badge-overview": {
        "packagePath": "material/badge/badge-overview",
        "title": "Badge overview",
        "componentName": "BadgeOverviewExample",
        "files": [
            "badge-overview-example.ts",
            "badge-overview-example.html",
            "badge-overview-example.css"
        ],
        "selector": "badge-overview-example",
        "additionalComponents": [],
        "primaryFile": "badge-overview-example.ts",
        "importPath": "material/badge"
    },
    "bottom-sheet-harness": {
        "packagePath": "material/bottom-sheet/bottom-sheet-harness",
        "title": "Testing with MatBottomSheetHarness",
        "componentName": "BottomSheetHarnessExample",
        "files": [
            "bottom-sheet-harness-example.ts",
            "bottom-sheet-harness-example.html",
            "bottom-sheet-harness-example.spec.ts"
        ],
        "selector": "bottom-sheet-harness-example",
        "additionalComponents": [],
        "primaryFile": "bottom-sheet-harness-example.ts",
        "importPath": "material/bottom-sheet"
    },
    "bottom-sheet-overview": {
        "packagePath": "material/bottom-sheet/bottom-sheet-overview",
        "title": "Bottom Sheet Overview",
        "componentName": "BottomSheetOverviewExample",
        "files": [
            "bottom-sheet-overview-example.ts",
            "bottom-sheet-overview-example.html",
            "bottom-sheet-overview-example-sheet.html"
        ],
        "selector": "bottom-sheet-overview-example",
        "additionalComponents": [
            "BottomSheetOverviewExampleSheet"
        ],
        "primaryFile": "bottom-sheet-overview-example.ts",
        "importPath": "material/bottom-sheet"
    },
    "button-toggle-appearance": {
        "packagePath": "material/button-toggle/button-toggle-appearance",
        "title": "Button toggle appearance",
        "componentName": "ButtonToggleAppearanceExample",
        "files": [
            "button-toggle-appearance-example.ts",
            "button-toggle-appearance-example.html",
            "button-toggle-appearance-example.css"
        ],
        "selector": "button-toggle-appearance-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-appearance-example.ts",
        "importPath": "material/button-toggle"
    },
    "button-toggle-forms": {
        "packagePath": "material/button-toggle/button-toggle-forms",
        "title": "Button-toggles with forms",
        "componentName": "ButtonToggleFormsExample",
        "files": [
            "button-toggle-forms-example.ts",
            "button-toggle-forms-example.html"
        ],
        "selector": "button-toggle-forms-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-forms-example.ts",
        "importPath": "material/button-toggle"
    },
    "button-toggle-harness": {
        "packagePath": "material/button-toggle/button-toggle-harness",
        "title": "Testing with MatButtonToggleHarness",
        "componentName": "ButtonToggleHarnessExample",
        "files": [
            "button-toggle-harness-example.ts",
            "button-toggle-harness-example.html",
            "button-toggle-harness-example.spec.ts"
        ],
        "selector": "button-toggle-harness-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-harness-example.ts",
        "importPath": "material/button-toggle"
    },
    "button-toggle-mode": {
        "packagePath": "material/button-toggle/button-toggle-mode",
        "title": "Button toggle selection mode",
        "componentName": "ButtonToggleModeExample",
        "files": [
            "button-toggle-mode-example.ts",
            "button-toggle-mode-example.html"
        ],
        "selector": "button-toggle-mode-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-mode-example.ts",
        "importPath": "material/button-toggle"
    },
    "button-toggle-overview": {
        "packagePath": "material/button-toggle/button-toggle-overview",
        "title": "Basic button-toggles",
        "componentName": "ButtonToggleOverviewExample",
        "files": [
            "button-toggle-overview-example.ts",
            "button-toggle-overview-example.html"
        ],
        "selector": "button-toggle-overview-example",
        "additionalComponents": [],
        "primaryFile": "button-toggle-overview-example.ts",
        "importPath": "material/button-toggle"
    },
    "button-disabled-interactive": {
        "packagePath": "material/button/button-disabled-interactive",
        "title": "Interactive disabled buttons",
        "componentName": "ButtonDisabledInteractiveExample",
        "files": [
            "button-disabled-interactive-example.ts",
            "button-disabled-interactive-example.html",
            "button-disabled-interactive-example.css"
        ],
        "selector": "button-disabled-interactive-example",
        "additionalComponents": [],
        "primaryFile": "button-disabled-interactive-example.ts",
        "importPath": "material/button"
    },
    "button-harness": {
        "packagePath": "material/button/button-harness",
        "title": "Testing with MatButtonHarness",
        "componentName": "ButtonHarnessExample",
        "files": [
            "button-harness-example.ts",
            "button-harness-example.html",
            "button-harness-example.spec.ts"
        ],
        "selector": "button-harness-example",
        "additionalComponents": [],
        "primaryFile": "button-harness-example.ts",
        "importPath": "material/button"
    },
    "button-overview": {
        "packagePath": "material/button/button-overview",
        "title": "Basic buttons",
        "componentName": "ButtonOverviewExample",
        "files": [
            "button-overview-example.ts",
            "button-overview-example.html",
            "button-overview-example.css"
        ],
        "selector": "button-overview-example",
        "additionalComponents": [],
        "primaryFile": "button-overview-example.ts",
        "importPath": "material/button"
    },
    "card-actions": {
        "packagePath": "material/card/card-actions",
        "title": "Card with actions alignment option",
        "componentName": "CardActionsExample",
        "files": [
            "card-actions-example.ts",
            "card-actions-example.html"
        ],
        "selector": "card-actions-example",
        "additionalComponents": [],
        "primaryFile": "card-actions-example.ts",
        "importPath": "material/card"
    },
    "card-fancy": {
        "packagePath": "material/card/card-fancy",
        "title": "Card with multiple sections",
        "componentName": "CardFancyExample",
        "files": [
            "card-fancy-example.ts",
            "card-fancy-example.html",
            "card-fancy-example.css"
        ],
        "selector": "card-fancy-example",
        "additionalComponents": [],
        "primaryFile": "card-fancy-example.ts",
        "importPath": "material/card"
    },
    "card-footer": {
        "packagePath": "material/card/card-footer",
        "title": "Card with footer",
        "componentName": "CardFooterExample",
        "files": [
            "card-footer-example.ts",
            "card-footer-example.html",
            "card-footer-example.css"
        ],
        "selector": "card-footer-example",
        "additionalComponents": [],
        "primaryFile": "card-footer-example.ts",
        "importPath": "material/card"
    },
    "card-harness": {
        "packagePath": "material/card/card-harness",
        "title": "Testing with MatCardHarness",
        "componentName": "CardHarnessExample",
        "files": [
            "card-harness-example.ts",
            "card-harness-example.html",
            "card-harness-example.spec.ts"
        ],
        "selector": "card-harness-example",
        "additionalComponents": [],
        "primaryFile": "card-harness-example.ts",
        "importPath": "material/card"
    },
    "card-media-size": {
        "packagePath": "material/card/card-media-size",
        "title": "Card with media size",
        "componentName": "CardMediaSizeExample",
        "files": [
            "card-media-size-example.ts",
            "card-media-size-example.html",
            "card-media-size-example.css"
        ],
        "selector": "card-media-size-example",
        "additionalComponents": [],
        "primaryFile": "card-media-size-example.ts",
        "importPath": "material/card"
    },
    "card-overview": {
        "packagePath": "material/card/card-overview",
        "title": "Basic cards",
        "componentName": "CardOverviewExample",
        "files": [
            "card-overview-example.ts",
            "card-overview-example.html"
        ],
        "selector": "card-overview-example",
        "additionalComponents": [],
        "primaryFile": "card-overview-example.ts",
        "importPath": "material/card"
    },
    "checkbox-configurable": {
        "packagePath": "material/checkbox/checkbox-configurable",
        "title": "Configurable checkbox",
        "componentName": "CheckboxConfigurableExample",
        "files": [
            "checkbox-configurable-example.ts",
            "checkbox-configurable-example.html",
            "checkbox-configurable-example.css"
        ],
        "selector": "checkbox-configurable-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-configurable-example.ts",
        "importPath": "material/checkbox"
    },
    "checkbox-harness": {
        "packagePath": "material/checkbox/checkbox-harness",
        "title": "Testing with MatCheckboxHarness",
        "componentName": "CheckboxHarnessExample",
        "files": [
            "checkbox-harness-example.ts",
            "checkbox-harness-example.html",
            "checkbox-harness-example.spec.ts"
        ],
        "selector": "checkbox-harness-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-harness-example.ts",
        "importPath": "material/checkbox"
    },
    "checkbox-overview": {
        "packagePath": "material/checkbox/checkbox-overview",
        "title": "Basic checkboxes",
        "componentName": "CheckboxOverviewExample",
        "files": [
            "checkbox-overview-example.ts",
            "checkbox-overview-example.html",
            "checkbox-overview-example.css"
        ],
        "selector": "checkbox-overview-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-overview-example.ts",
        "importPath": "material/checkbox"
    },
    "checkbox-reactive-forms": {
        "packagePath": "material/checkbox/checkbox-reactive-forms",
        "title": "Checkboxes with reactive forms",
        "componentName": "CheckboxReactiveFormsExample",
        "files": [
            "checkbox-reactive-forms-example.ts",
            "checkbox-reactive-forms-example.html",
            "checkbox-reactive-forms-example.css"
        ],
        "selector": "checkbox-reactive-forms-example",
        "additionalComponents": [],
        "primaryFile": "checkbox-reactive-forms-example.ts",
        "importPath": "material/checkbox"
    },
    "chips-autocomplete": {
        "packagePath": "material/chips/chips-autocomplete",
        "title": "Chips Autocomplete",
        "componentName": "ChipsAutocompleteExample",
        "files": [
            "chips-autocomplete-example.ts",
            "chips-autocomplete-example.html",
            "chips-autocomplete-example.css"
        ],
        "selector": "chips-autocomplete-example",
        "additionalComponents": [],
        "primaryFile": "chips-autocomplete-example.ts",
        "importPath": "material/chips"
    },
    "chips-avatar": {
        "packagePath": "material/chips/chips-avatar",
        "title": "Chips avatar",
        "componentName": "ChipsAvatarExample",
        "files": [
            "chips-avatar-example.ts",
            "chips-avatar-example.html",
            "chips-avatar-example.css"
        ],
        "selector": "chips-avatar-example",
        "additionalComponents": [],
        "primaryFile": "chips-avatar-example.ts",
        "importPath": "material/chips"
    },
    "chips-drag-drop": {
        "packagePath": "material/chips/chips-drag-drop",
        "title": "Chips Drag and Drop",
        "componentName": "ChipsDragDropExample",
        "files": [
            "chips-drag-drop-example.ts",
            "chips-drag-drop-example.html",
            "chips-drag-drop-example.css"
        ],
        "selector": "chips-drag-drop-example",
        "additionalComponents": [],
        "primaryFile": "chips-drag-drop-example.ts",
        "importPath": "material/chips"
    },
    "chips-form-control": {
        "packagePath": "material/chips/chips-form-control",
        "title": "Chips with form control",
        "componentName": "ChipsFormControlExample",
        "files": [
            "chips-form-control-example.ts",
            "chips-form-control-example.html",
            "chips-form-control-example.css"
        ],
        "selector": "chips-form-control-example",
        "additionalComponents": [],
        "primaryFile": "chips-form-control-example.ts",
        "importPath": "material/chips"
    },
    "chips-harness": {
        "packagePath": "material/chips/chips-harness",
        "title": "Testing with MatChipsHarness",
        "componentName": "ChipsHarnessExample",
        "files": [
            "chips-harness-example.ts",
            "chips-harness-example.html",
            "chips-harness-example.spec.ts"
        ],
        "selector": "chips-harness-example",
        "additionalComponents": [],
        "primaryFile": "chips-harness-example.ts",
        "importPath": "material/chips"
    },
    "chips-input": {
        "packagePath": "material/chips/chips-input",
        "title": "Chips with input",
        "componentName": "ChipsInputExample",
        "files": [
            "chips-input-example.ts",
            "chips-input-example.html",
            "chips-input-example.css"
        ],
        "selector": "chips-input-example",
        "additionalComponents": [],
        "primaryFile": "chips-input-example.ts",
        "importPath": "material/chips"
    },
    "chips-overview": {
        "packagePath": "material/chips/chips-overview",
        "title": "Basic chips",
        "componentName": "ChipsOverviewExample",
        "files": [
            "chips-overview-example.ts",
            "chips-overview-example.html"
        ],
        "selector": "chips-overview-example",
        "additionalComponents": [],
        "primaryFile": "chips-overview-example.ts",
        "importPath": "material/chips"
    },
    "chips-stacked": {
        "packagePath": "material/chips/chips-stacked",
        "title": "Stacked chips",
        "componentName": "ChipsStackedExample",
        "files": [
            "chips-stacked-example.ts",
            "chips-stacked-example.html",
            "chips-stacked-example.css"
        ],
        "selector": "chips-stacked-example",
        "additionalComponents": [],
        "primaryFile": "chips-stacked-example.ts",
        "importPath": "material/chips"
    },
    "elevation-overview": {
        "packagePath": "material/core/elevation-overview",
        "title": "Elevation CSS classes",
        "componentName": "ElevationOverviewExample",
        "files": [
            "elevation-overview-example.ts",
            "elevation-overview-example.html",
            "elevation-overview-example.css"
        ],
        "selector": "elevation-overview-example",
        "additionalComponents": [],
        "primaryFile": "elevation-overview-example.ts",
        "importPath": "material/core"
    },
    "ripple-overview": {
        "packagePath": "material/core/ripple-overview",
        "title": "MatRipple basic usage",
        "componentName": "RippleOverviewExample",
        "files": [
            "ripple-overview-example.ts",
            "ripple-overview-example.html",
            "ripple-overview-example.css"
        ],
        "selector": "ripple-overview-example",
        "additionalComponents": [],
        "primaryFile": "ripple-overview-example.ts",
        "importPath": "material/core"
    },
    "date-range-picker-comparison": {
        "packagePath": "material/datepicker/date-range-picker-comparison",
        "title": "Date range picker comparison ranges",
        "componentName": "DateRangePickerComparisonExample",
        "files": [
            "date-range-picker-comparison-example.ts",
            "date-range-picker-comparison-example.html",
            "date-range-picker-comparison-example.css"
        ],
        "selector": "date-range-picker-comparison-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-comparison-example.ts",
        "importPath": "material/datepicker"
    },
    "date-range-picker-forms": {
        "packagePath": "material/datepicker/date-range-picker-forms",
        "title": "Date range picker forms integration",
        "componentName": "DateRangePickerFormsExample",
        "files": [
            "date-range-picker-forms-example.ts",
            "date-range-picker-forms-example.html"
        ],
        "selector": "date-range-picker-forms-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-forms-example.ts",
        "importPath": "material/datepicker"
    },
    "date-range-picker-overview": {
        "packagePath": "material/datepicker/date-range-picker-overview",
        "title": "Basic date range picker",
        "componentName": "DateRangePickerOverviewExample",
        "files": [
            "date-range-picker-overview-example.ts",
            "date-range-picker-overview-example.html"
        ],
        "selector": "date-range-picker-overview-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-overview-example.ts",
        "importPath": "material/datepicker"
    },
    "date-range-picker-selection-strategy": {
        "packagePath": "material/datepicker/date-range-picker-selection-strategy",
        "title": "Date range picker with custom a selection strategy",
        "componentName": "DateRangePickerSelectionStrategyExample",
        "files": [
            "date-range-picker-selection-strategy-example.ts",
            "date-range-picker-selection-strategy-example.html"
        ],
        "selector": "date-range-picker-selection-strategy-example",
        "additionalComponents": [],
        "primaryFile": "date-range-picker-selection-strategy-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-actions": {
        "packagePath": "material/datepicker/datepicker-actions",
        "title": "Datepicker action buttons",
        "componentName": "DatepickerActionsExample",
        "files": [
            "datepicker-actions-example.ts",
            "datepicker-actions-example.html",
            "datepicker-actions-example.css"
        ],
        "selector": "datepicker-actions-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-actions-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-api": {
        "packagePath": "material/datepicker/datepicker-api",
        "title": "Datepicker open method",
        "componentName": "DatepickerApiExample",
        "files": [
            "datepicker-api-example.ts",
            "datepicker-api-example.html",
            "datepicker-api-example.css"
        ],
        "selector": "datepicker-api-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-api-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-custom-header": {
        "packagePath": "material/datepicker/datepicker-custom-header",
        "title": "Datepicker with custom calendar header",
        "componentName": "DatepickerCustomHeaderExample",
        "files": [
            "datepicker-custom-header-example.ts",
            "datepicker-custom-header-example.html"
        ],
        "selector": "datepicker-custom-header-example",
        "additionalComponents": [
            "ExampleHeader"
        ],
        "primaryFile": "datepicker-custom-header-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-custom-icon": {
        "packagePath": "material/datepicker/datepicker-custom-icon",
        "title": "Datepicker with custom icon",
        "componentName": "DatepickerCustomIconExample",
        "files": [
            "datepicker-custom-icon-example.ts",
            "datepicker-custom-icon-example.html"
        ],
        "selector": "datepicker-custom-icon-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-custom-icon-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-date-class": {
        "packagePath": "material/datepicker/datepicker-date-class",
        "title": "Datepicker with custom date classes",
        "componentName": "DatepickerDateClassExample",
        "files": [
            "datepicker-date-class-example.ts",
            "datepicker-date-class-example.html",
            "datepicker-date-class-example.css"
        ],
        "selector": "datepicker-date-class-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-date-class-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-disabled": {
        "packagePath": "material/datepicker/datepicker-disabled",
        "title": "Disabled datepicker",
        "componentName": "DatepickerDisabledExample",
        "files": [
            "datepicker-disabled-example.ts",
            "datepicker-disabled-example.html"
        ],
        "selector": "datepicker-disabled-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-disabled-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-events": {
        "packagePath": "material/datepicker/datepicker-events",
        "title": "Datepicker input and change events",
        "componentName": "DatepickerEventsExample",
        "files": [
            "datepicker-events-example.ts",
            "datepicker-events-example.html",
            "datepicker-events-example.css"
        ],
        "selector": "datepicker-events-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-events-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-filter": {
        "packagePath": "material/datepicker/datepicker-filter",
        "title": "Datepicker with filter validation",
        "componentName": "DatepickerFilterExample",
        "files": [
            "datepicker-filter-example.ts",
            "datepicker-filter-example.html"
        ],
        "selector": "datepicker-filter-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-filter-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-formats": {
        "packagePath": "material/datepicker/datepicker-formats",
        "title": "Datepicker with custom formats",
        "componentName": "DatepickerFormatsExample",
        "files": [
            "datepicker-formats-example.ts",
            "datepicker-formats-example.html"
        ],
        "selector": "datepicker-formats-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-formats-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-harness": {
        "packagePath": "material/datepicker/datepicker-harness",
        "title": "Testing with MatDatepickerInputHarness",
        "componentName": "DatepickerHarnessExample",
        "files": [
            "datepicker-harness-example.ts",
            "datepicker-harness-example.html",
            "datepicker-harness-example.spec.ts"
        ],
        "selector": "datepicker-harness-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-harness-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-inline-calendar": {
        "packagePath": "material/datepicker/datepicker-inline-calendar",
        "title": "Datepicker inline calendar example",
        "componentName": "DatepickerInlineCalendarExample",
        "files": [
            "datepicker-inline-calendar-example.ts",
            "datepicker-inline-calendar-example.html",
            "datepicker-inline-calendar-example.css"
        ],
        "selector": "datepicker-inline-calendar-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-inline-calendar-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-locale": {
        "packagePath": "material/datepicker/datepicker-locale",
        "title": "Datepicker with different locale",
        "componentName": "DatepickerLocaleExample",
        "files": [
            "datepicker-locale-example.ts",
            "datepicker-locale-example.html",
            "datepicker-locale-example.css"
        ],
        "selector": "datepicker-locale-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-locale-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-min-max": {
        "packagePath": "material/datepicker/datepicker-min-max",
        "title": "Datepicker with min & max validation",
        "componentName": "DatepickerMinMaxExample",
        "files": [
            "datepicker-min-max-example.ts",
            "datepicker-min-max-example.html"
        ],
        "selector": "datepicker-min-max-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-min-max-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-moment": {
        "packagePath": "material/datepicker/datepicker-moment",
        "title": "Datepicker that uses Moment.js dates",
        "componentName": "DatepickerMomentExample",
        "files": [
            "datepicker-moment-example.ts",
            "datepicker-moment-example.html"
        ],
        "selector": "datepicker-moment-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-moment-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-overview": {
        "packagePath": "material/datepicker/datepicker-overview",
        "title": "Basic datepicker",
        "componentName": "DatepickerOverviewExample",
        "files": [
            "datepicker-overview-example.ts",
            "datepicker-overview-example.html"
        ],
        "selector": "datepicker-overview-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-overview-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-start-view": {
        "packagePath": "material/datepicker/datepicker-start-view",
        "title": "Datepicker start date",
        "componentName": "DatepickerStartViewExample",
        "files": [
            "datepicker-start-view-example.ts",
            "datepicker-start-view-example.html"
        ],
        "selector": "datepicker-start-view-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-start-view-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-touch": {
        "packagePath": "material/datepicker/datepicker-touch",
        "title": "Datepicker touch UI",
        "componentName": "DatepickerTouchExample",
        "files": [
            "datepicker-touch-example.ts",
            "datepicker-touch-example.html"
        ],
        "selector": "datepicker-touch-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-touch-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-value": {
        "packagePath": "material/datepicker/datepicker-value",
        "title": "Datepicker selected value",
        "componentName": "DatepickerValueExample",
        "files": [
            "datepicker-value-example.ts",
            "datepicker-value-example.html",
            "datepicker-value-example.css"
        ],
        "selector": "datepicker-value-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-value-example.ts",
        "importPath": "material/datepicker"
    },
    "datepicker-views-selection": {
        "packagePath": "material/datepicker/datepicker-views-selection",
        "title": "Datepicker emulating a Year and month picker",
        "componentName": "DatepickerViewsSelectionExample",
        "files": [
            "datepicker-views-selection-example.ts",
            "datepicker-views-selection-example.html",
            "datepicker-views-selection-example.css"
        ],
        "selector": "datepicker-views-selection-example",
        "additionalComponents": [],
        "primaryFile": "datepicker-views-selection-example.ts",
        "importPath": "material/datepicker"
    },
    "dialog-animations": {
        "packagePath": "material/dialog/dialog-animations",
        "title": "Dialog Animations",
        "componentName": "DialogAnimationsExample",
        "files": [
            "dialog-animations-example.ts",
            "dialog-animations-example.html",
            "dialog-animations-example.css",
            "dialog-animations-example-dialog.html"
        ],
        "selector": "dialog-animations-example",
        "additionalComponents": [
            "DialogAnimationsExampleDialog"
        ],
        "primaryFile": "dialog-animations-example.ts",
        "importPath": "material/dialog"
    },
    "dialog-content": {
        "packagePath": "material/dialog/dialog-content",
        "title": "Dialog with header, scrollable content and actions",
        "componentName": "DialogContentExample",
        "files": [
            "dialog-content-example.ts",
            "dialog-content-example.html",
            "dialog-content-example-dialog.html"
        ],
        "selector": "dialog-content-example",
        "additionalComponents": [
            "DialogContentExampleDialog"
        ],
        "primaryFile": "dialog-content-example.ts",
        "importPath": "material/dialog"
    },
    "dialog-data": {
        "packagePath": "material/dialog/dialog-data",
        "title": "Injecting data when opening a dialog",
        "componentName": "DialogDataExample",
        "files": [
            "dialog-data-example.ts",
            "dialog-data-example.html",
            "dialog-data-example-dialog.html"
        ],
        "selector": "dialog-data-example",
        "additionalComponents": [
            "DialogDataExampleDialog"
        ],
        "primaryFile": "dialog-data-example.ts",
        "importPath": "material/dialog"
    },
    "dialog-elements": {
        "packagePath": "material/dialog/dialog-elements",
        "title": "Dialog elements",
        "componentName": "DialogElementsExample",
        "files": [
            "dialog-elements-example.ts",
            "dialog-elements-example.html",
            "dialog-elements-example-dialog.html"
        ],
        "selector": "dialog-elements-example",
        "additionalComponents": [
            "DialogElementsExampleDialog"
        ],
        "primaryFile": "dialog-elements-example.ts",
        "importPath": "material/dialog"
    },
    "dialog-from-menu": {
        "packagePath": "material/dialog/dialog-from-menu",
        "title": "Dialog launched from a menu",
        "componentName": "DialogFromMenuExample",
        "files": [
            "dialog-from-menu-example.ts",
            "dialog-from-menu-example.html",
            "dialog-from-menu-example-dialog.html"
        ],
        "selector": "dialog-from-menu-example",
        "additionalComponents": [
            "DialogFromMenuExampleDialog"
        ],
        "primaryFile": "dialog-from-menu-example.ts",
        "importPath": "material/dialog"
    },
    "dialog-harness": {
        "packagePath": "material/dialog/dialog-harness",
        "title": "Testing with MatDialogHarness",
        "componentName": "DialogHarnessExample",
        "files": [
            "dialog-harness-example.ts",
            "dialog-harness-example.html",
            "dialog-harness-example.spec.ts"
        ],
        "selector": "dialog-harness-example",
        "additionalComponents": [],
        "primaryFile": "dialog-harness-example.ts",
        "importPath": "material/dialog"
    },
    "dialog-overview": {
        "packagePath": "material/dialog/dialog-overview",
        "title": "Dialog Overview",
        "componentName": "DialogOverviewExample",
        "files": [
            "dialog-overview-example.ts",
            "dialog-overview-example.html",
            "dialog-overview-example-dialog.html"
        ],
        "selector": "dialog-overview-example",
        "additionalComponents": [
            "DialogOverviewExampleDialog"
        ],
        "primaryFile": "dialog-overview-example.ts",
        "importPath": "material/dialog"
    },
    "divider-harness": {
        "packagePath": "material/divider/divider-harness",
        "title": "Testing with MatDividerHarness",
        "componentName": "DividerHarnessExample",
        "files": [
            "divider-harness-example.ts",
            "divider-harness-example.html",
            "divider-harness-example.spec.ts"
        ],
        "selector": "divider-harness-example",
        "additionalComponents": [],
        "primaryFile": "divider-harness-example.ts",
        "importPath": "material/divider"
    },
    "divider-overview": {
        "packagePath": "material/divider/divider-overview",
        "title": "Basic divider",
        "componentName": "DividerOverviewExample",
        "files": [
            "divider-overview-example.ts",
            "divider-overview-example.html"
        ],
        "selector": "divider-overview-example",
        "additionalComponents": [],
        "primaryFile": "divider-overview-example.ts",
        "importPath": "material/divider"
    },
    "expansion-expand-collapse-all": {
        "packagePath": "material/expansion/expansion-expand-collapse-all",
        "title": "Accordion with expand/collapse all toggles",
        "componentName": "ExpansionExpandCollapseAllExample",
        "files": [
            "expansion-expand-collapse-all-example.ts",
            "expansion-expand-collapse-all-example.html",
            "expansion-expand-collapse-all-example.css"
        ],
        "selector": "expansion-expand-collapse-all-example",
        "additionalComponents": [],
        "primaryFile": "expansion-expand-collapse-all-example.ts",
        "importPath": "material/expansion"
    },
    "expansion-harness": {
        "packagePath": "material/expansion/expansion-harness",
        "title": "Testing with MatExpansionPanelHarness and MatAccordionHarness",
        "componentName": "ExpansionHarnessExample",
        "files": [
            "expansion-harness-example.ts",
            "expansion-harness-example.html",
            "expansion-harness-example.spec.ts"
        ],
        "selector": "expansion-harness-example",
        "additionalComponents": [],
        "primaryFile": "expansion-harness-example.ts",
        "importPath": "material/expansion"
    },
    "expansion-overview": {
        "packagePath": "material/expansion/expansion-overview",
        "title": "Basic expansion panel",
        "componentName": "ExpansionOverviewExample",
        "files": [
            "expansion-overview-example.ts",
            "expansion-overview-example.html"
        ],
        "selector": "expansion-overview-example",
        "additionalComponents": [],
        "primaryFile": "expansion-overview-example.ts",
        "importPath": "material/expansion"
    },
    "expansion-steps": {
        "packagePath": "material/expansion/expansion-steps",
        "title": "Expansion panel as accordion",
        "componentName": "ExpansionStepsExample",
        "files": [
            "expansion-steps-example.ts",
            "expansion-steps-example.html",
            "expansion-steps-example.css"
        ],
        "selector": "expansion-steps-example",
        "additionalComponents": [],
        "primaryFile": "expansion-steps-example.ts",
        "importPath": "material/expansion"
    },
    "form-field-appearance": {
        "packagePath": "material/form-field/form-field-appearance",
        "title": "Form field appearance variants",
        "componentName": "FormFieldAppearanceExample",
        "files": [
            "form-field-appearance-example.ts",
            "form-field-appearance-example.html"
        ],
        "selector": "form-field-appearance-example",
        "additionalComponents": [],
        "primaryFile": "form-field-appearance-example.ts",
        "importPath": "material/form-field"
    },
    "form-field-custom-control": {
        "packagePath": "material/form-field/form-field-custom-control",
        "title": "Form field with custom telephone number input control.",
        "componentName": "FormFieldCustomControlExample",
        "files": [
            "form-field-custom-control-example.ts",
            "form-field-custom-control-example.html",
            "example-tel-input-example.html",
            "example-tel-input-example.css"
        ],
        "selector": "form-field-custom-control-example",
        "additionalComponents": [
            "MyTelInput"
        ],
        "primaryFile": "form-field-custom-control-example.ts",
        "importPath": "material/form-field"
    },
    "form-field-error": {
        "packagePath": "material/form-field/form-field-error",
        "title": "Form field with error messages",
        "componentName": "FormFieldErrorExample",
        "files": [
            "form-field-error-example.ts",
            "form-field-error-example.html",
            "form-field-error-example.css"
        ],
        "selector": "form-field-error-example",
        "additionalComponents": [],
        "primaryFile": "form-field-error-example.ts",
        "importPath": "material/form-field"
    },
    "form-field-harness": {
        "packagePath": "material/form-field/form-field-harness",
        "title": "Testing with MatFormFieldHarness",
        "componentName": "FormFieldHarnessExample",
        "files": [
            "form-field-harness-example.ts",
            "form-field-harness-example.html",
            "form-field-harness-example.spec.ts"
        ],
        "selector": "form-field-harness-example",
        "additionalComponents": [],
        "primaryFile": "form-field-harness-example.ts",
        "importPath": "material/form-field"
    },
    "form-field-hint": {
        "packagePath": "material/form-field/form-field-hint",
        "title": "Form field with hints",
        "componentName": "FormFieldHintExample",
        "files": [
            "form-field-hint-example.ts",
            "form-field-hint-example.html",
            "form-field-hint-example.css"
        ],
        "selector": "form-field-hint-example",
        "additionalComponents": [],
        "primaryFile": "form-field-hint-example.ts",
        "importPath": "material/form-field"
    },
    "form-field-label": {
        "packagePath": "material/form-field/form-field-label",
        "title": "Form field with label",
        "componentName": "FormFieldLabelExample",
        "files": [
            "form-field-label-example.ts",
            "form-field-label-example.html",
            "form-field-label-example.css"
        ],
        "selector": "form-field-label-example",
        "additionalComponents": [],
        "primaryFile": "form-field-label-example.ts",
        "importPath": "material/form-field"
    },
    "form-field-overview": {
        "packagePath": "material/form-field/form-field-overview",
        "title": "Simple form field",
        "componentName": "FormFieldOverviewExample",
        "files": [
            "form-field-overview-example.ts",
            "form-field-overview-example.html",
            "form-field-overview-example.css"
        ],
        "selector": "form-field-overview-example",
        "additionalComponents": [],
        "primaryFile": "form-field-overview-example.ts",
        "importPath": "material/form-field"
    },
    "form-field-prefix-suffix": {
        "packagePath": "material/form-field/form-field-prefix-suffix",
        "title": "Form field with prefix & suffix",
        "componentName": "FormFieldPrefixSuffixExample",
        "files": [
            "form-field-prefix-suffix-example.ts",
            "form-field-prefix-suffix-example.html",
            "form-field-prefix-suffix-example.css"
        ],
        "selector": "form-field-prefix-suffix-example",
        "additionalComponents": [],
        "primaryFile": "form-field-prefix-suffix-example.ts",
        "importPath": "material/form-field"
    },
    "grid-list-dynamic": {
        "packagePath": "material/grid-list/grid-list-dynamic",
        "title": "Dynamic grid-list",
        "componentName": "GridListDynamicExample",
        "files": [
            "grid-list-dynamic-example.ts",
            "grid-list-dynamic-example.html"
        ],
        "selector": "grid-list-dynamic-example",
        "additionalComponents": [],
        "primaryFile": "grid-list-dynamic-example.ts",
        "importPath": "material/grid-list"
    },
    "grid-list-harness": {
        "packagePath": "material/grid-list/grid-list-harness",
        "title": "Testing with MatGridListHarness",
        "componentName": "GridListHarnessExample",
        "files": [
            "grid-list-harness-example.ts",
            "grid-list-harness-example.html",
            "grid-list-harness-example.spec.ts"
        ],
        "selector": "grid-list-harness-example",
        "additionalComponents": [],
        "primaryFile": "grid-list-harness-example.ts",
        "importPath": "material/grid-list"
    },
    "grid-list-overview": {
        "packagePath": "material/grid-list/grid-list-overview",
        "title": "Basic grid-list",
        "componentName": "GridListOverviewExample",
        "files": [
            "grid-list-overview-example.ts",
            "grid-list-overview-example.html",
            "grid-list-overview-example.css"
        ],
        "selector": "grid-list-overview-example",
        "additionalComponents": [],
        "primaryFile": "grid-list-overview-example.ts",
        "importPath": "material/grid-list"
    },
    "icon-harness": {
        "packagePath": "material/icon/icon-harness",
        "title": "Testing with MatIconHarness",
        "componentName": "IconHarnessExample",
        "files": [
            "icon-harness-example.ts",
            "icon-harness-example.html",
            "icon-harness-example.spec.ts"
        ],
        "selector": "icon-harness-example",
        "additionalComponents": [],
        "primaryFile": "icon-harness-example.ts",
        "importPath": "material/icon"
    },
    "icon-overview": {
        "packagePath": "material/icon/icon-overview",
        "title": "Basic icons",
        "componentName": "IconOverviewExample",
        "files": [
            "icon-overview-example.ts",
            "icon-overview-example.html"
        ],
        "selector": "icon-overview-example",
        "additionalComponents": [],
        "primaryFile": "icon-overview-example.ts",
        "importPath": "material/icon"
    },
    "icon-svg": {
        "packagePath": "material/icon/icon-svg",
        "title": "SVG icons",
        "componentName": "IconSvgExample",
        "files": [
            "icon-svg-example.ts",
            "icon-svg-example.html"
        ],
        "selector": "icon-svg-example",
        "additionalComponents": [],
        "primaryFile": "icon-svg-example.ts",
        "importPath": "material/icon"
    },
    "input-clearable": {
        "packagePath": "material/input/input-clearable",
        "title": "Input with a clear button",
        "componentName": "InputClearableExample",
        "files": [
            "input-clearable-example.ts",
            "./input-clearable-example.html",
            "./input-clearable-example.css"
        ],
        "selector": "input-clearable-example",
        "additionalComponents": [],
        "primaryFile": "input-clearable-example.ts",
        "importPath": "material/input"
    },
    "input-error-state-matcher": {
        "packagePath": "material/input/input-error-state-matcher",
        "title": "Input with a custom ErrorStateMatcher",
        "componentName": "InputErrorStateMatcherExample",
        "files": [
            "input-error-state-matcher-example.ts",
            "./input-error-state-matcher-example.html",
            "./input-error-state-matcher-example.css"
        ],
        "selector": "input-error-state-matcher-example",
        "additionalComponents": [],
        "primaryFile": "input-error-state-matcher-example.ts",
        "importPath": "material/input"
    },
    "input-errors": {
        "packagePath": "material/input/input-errors",
        "title": "Input with error messages",
        "componentName": "InputErrorsExample",
        "files": [
            "input-errors-example.ts",
            "input-errors-example.html",
            "input-errors-example.css"
        ],
        "selector": "input-errors-example",
        "additionalComponents": [],
        "primaryFile": "input-errors-example.ts",
        "importPath": "material/input"
    },
    "input-form": {
        "packagePath": "material/input/input-form",
        "title": "Inputs in a form",
        "componentName": "InputFormExample",
        "files": [
            "input-form-example.ts",
            "input-form-example.html",
            "input-form-example.css"
        ],
        "selector": "input-form-example",
        "additionalComponents": [],
        "primaryFile": "input-form-example.ts",
        "importPath": "material/input"
    },
    "input-harness": {
        "packagePath": "material/input/input-harness",
        "title": "Testing with MatInputHarness",
        "componentName": "InputHarnessExample",
        "files": [
            "input-harness-example.ts",
            "input-harness-example.html",
            "input-harness-example.spec.ts"
        ],
        "selector": "input-harness-example",
        "additionalComponents": [],
        "primaryFile": "input-harness-example.ts",
        "importPath": "material/input"
    },
    "input-hint": {
        "packagePath": "material/input/input-hint",
        "title": "Input with hints",
        "componentName": "InputHintExample",
        "files": [
            "input-hint-example.ts",
            "input-hint-example.html",
            "input-hint-example.css"
        ],
        "selector": "input-hint-example",
        "additionalComponents": [],
        "primaryFile": "input-hint-example.ts",
        "importPath": "material/input"
    },
    "input-overview": {
        "packagePath": "material/input/input-overview",
        "title": "Basic Inputs",
        "componentName": "InputOverviewExample",
        "files": [
            "input-overview-example.ts",
            "input-overview-example.html",
            "input-overview-example.css"
        ],
        "selector": "input-overview-example",
        "additionalComponents": [],
        "primaryFile": "input-overview-example.ts",
        "importPath": "material/input"
    },
    "input-prefix-suffix": {
        "packagePath": "material/input/input-prefix-suffix",
        "title": "Inputs with prefixes and suffixes",
        "componentName": "InputPrefixSuffixExample",
        "files": [
            "input-prefix-suffix-example.ts",
            "input-prefix-suffix-example.html",
            "input-prefix-suffix-example.css"
        ],
        "selector": "input-prefix-suffix-example",
        "additionalComponents": [],
        "primaryFile": "input-prefix-suffix-example.ts",
        "importPath": "material/input"
    },
    "list-harness": {
        "packagePath": "material/list/list-harness",
        "title": "Testing with MatListHarness",
        "componentName": "ListHarnessExample",
        "files": [
            "list-harness-example.ts",
            "list-harness-example.html",
            "list-harness-example.spec.ts"
        ],
        "selector": "list-harness-example",
        "additionalComponents": [],
        "primaryFile": "list-harness-example.ts",
        "importPath": "material/list"
    },
    "list-overview": {
        "packagePath": "material/list/list-overview",
        "title": "Basic list",
        "componentName": "ListOverviewExample",
        "files": [
            "list-overview-example.ts",
            "list-overview-example.html"
        ],
        "selector": "list-overview-example",
        "additionalComponents": [],
        "primaryFile": "list-overview-example.ts",
        "importPath": "material/list"
    },
    "list-sections": {
        "packagePath": "material/list/list-sections",
        "title": "List with sections",
        "componentName": "ListSectionsExample",
        "files": [
            "list-sections-example.ts",
            "list-sections-example.html",
            "list-sections-example.css"
        ],
        "selector": "list-sections-example",
        "additionalComponents": [],
        "primaryFile": "list-sections-example.ts",
        "importPath": "material/list"
    },
    "list-selection": {
        "packagePath": "material/list/list-selection",
        "title": "List with selection",
        "componentName": "ListSelectionExample",
        "files": [
            "list-selection-example.ts",
            "list-selection-example.html"
        ],
        "selector": "list-selection-example",
        "additionalComponents": [],
        "primaryFile": "list-selection-example.ts",
        "importPath": "material/list"
    },
    "list-single-selection": {
        "packagePath": "material/list/list-single-selection",
        "title": "List with single selection",
        "componentName": "ListSingleSelectionExample",
        "files": [
            "list-single-selection-example.ts",
            "list-single-selection-example.html"
        ],
        "selector": "list-single-selection-example",
        "additionalComponents": [],
        "primaryFile": "list-single-selection-example.ts",
        "importPath": "material/list"
    },
    "list-variants": {
        "packagePath": "material/list/list-variants",
        "title": "List variants",
        "componentName": "ListVariantsExample",
        "files": [
            "list-variants-example.ts",
            "list-variants-example.html",
            "./list-variants-example.css"
        ],
        "selector": "list-variants-example",
        "additionalComponents": [],
        "primaryFile": "list-variants-example.ts",
        "importPath": "material/list"
    },
    "menu-harness": {
        "packagePath": "material/menu/menu-harness",
        "title": "Testing with MatMenuHarness",
        "componentName": "MenuHarnessExample",
        "files": [
            "menu-harness-example.ts",
            "menu-harness-example.html",
            "menu-harness-example.spec.ts"
        ],
        "selector": "menu-harness-example",
        "additionalComponents": [],
        "primaryFile": "menu-harness-example.ts",
        "importPath": "material/menu"
    },
    "menu-icons": {
        "packagePath": "material/menu/menu-icons",
        "title": "Menu with icons",
        "componentName": "MenuIconsExample",
        "files": [
            "menu-icons-example.ts",
            "menu-icons-example.html"
        ],
        "selector": "menu-icons-example",
        "additionalComponents": [],
        "primaryFile": "menu-icons-example.ts",
        "importPath": "material/menu"
    },
    "menu-nested": {
        "packagePath": "material/menu/menu-nested",
        "title": "Nested menu",
        "componentName": "MenuNestedExample",
        "files": [
            "menu-nested-example.ts",
            "menu-nested-example.html"
        ],
        "selector": "menu-nested-example",
        "additionalComponents": [],
        "primaryFile": "menu-nested-example.ts",
        "importPath": "material/menu"
    },
    "menu-overview": {
        "packagePath": "material/menu/menu-overview",
        "title": "Basic menu",
        "componentName": "MenuOverviewExample",
        "files": [
            "menu-overview-example.ts",
            "menu-overview-example.html"
        ],
        "selector": "menu-overview-example",
        "additionalComponents": [],
        "primaryFile": "menu-overview-example.ts",
        "importPath": "material/menu"
    },
    "menu-position": {
        "packagePath": "material/menu/menu-position",
        "title": "Menu positioning",
        "componentName": "MenuPositionExample",
        "files": [
            "menu-position-example.ts",
            "menu-position-example.html"
        ],
        "selector": "menu-position-example",
        "additionalComponents": [],
        "primaryFile": "menu-position-example.ts",
        "importPath": "material/menu"
    },
    "paginator-configurable": {
        "packagePath": "material/paginator/paginator-configurable",
        "title": "Configurable paginator",
        "componentName": "PaginatorConfigurableExample",
        "files": [
            "paginator-configurable-example.ts",
            "paginator-configurable-example.html",
            "paginator-configurable-example.css"
        ],
        "selector": "paginator-configurable-example",
        "additionalComponents": [],
        "primaryFile": "paginator-configurable-example.ts",
        "importPath": "material/paginator"
    },
    "paginator-harness": {
        "packagePath": "material/paginator/paginator-harness",
        "title": "Testing with MatPaginatorHarness",
        "componentName": "PaginatorHarnessExample",
        "files": [
            "paginator-harness-example.ts",
            "paginator-harness-example.html",
            "paginator-harness-example.spec.ts"
        ],
        "selector": "paginator-harness-example",
        "additionalComponents": [],
        "primaryFile": "paginator-harness-example.ts",
        "importPath": "material/paginator"
    },
    "paginator-intl": {
        "packagePath": "material/paginator/paginator-intl",
        "title": "Paginator internationalization",
        "componentName": "PaginatorIntlExample",
        "files": [
            "paginator-intl-example.ts",
            "paginator-intl-example.html"
        ],
        "selector": "paginator-intl-example",
        "additionalComponents": [],
        "primaryFile": "paginator-intl-example.ts",
        "importPath": "material/paginator"
    },
    "paginator-overview": {
        "packagePath": "material/paginator/paginator-overview",
        "title": "Paginator",
        "componentName": "PaginatorOverviewExample",
        "files": [
            "paginator-overview-example.ts",
            "paginator-overview-example.html"
        ],
        "selector": "paginator-overview-example",
        "additionalComponents": [],
        "primaryFile": "paginator-overview-example.ts",
        "importPath": "material/paginator"
    },
    "progress-bar-buffer": {
        "packagePath": "material/progress-bar/progress-bar-buffer",
        "title": "Buffer progress-bar",
        "componentName": "ProgressBarBufferExample",
        "files": [
            "progress-bar-buffer-example.ts",
            "progress-bar-buffer-example.html"
        ],
        "selector": "progress-bar-buffer-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-buffer-example.ts",
        "importPath": "material/progress-bar"
    },
    "progress-bar-configurable": {
        "packagePath": "material/progress-bar/progress-bar-configurable",
        "title": "Configurable progress-bar",
        "componentName": "ProgressBarConfigurableExample",
        "files": [
            "progress-bar-configurable-example.ts",
            "progress-bar-configurable-example.html",
            "progress-bar-configurable-example.css"
        ],
        "selector": "progress-bar-configurable-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-configurable-example.ts",
        "importPath": "material/progress-bar"
    },
    "progress-bar-determinate": {
        "packagePath": "material/progress-bar/progress-bar-determinate",
        "title": "Determinate progress-bar",
        "componentName": "ProgressBarDeterminateExample",
        "files": [
            "progress-bar-determinate-example.ts",
            "progress-bar-determinate-example.html"
        ],
        "selector": "progress-bar-determinate-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-determinate-example.ts",
        "importPath": "material/progress-bar"
    },
    "progress-bar-harness": {
        "packagePath": "material/progress-bar/progress-bar-harness",
        "title": "Testing with MatProgressBarHarness",
        "componentName": "ProgressBarHarnessExample",
        "files": [
            "progress-bar-harness-example.ts",
            "progress-bar-harness-example.html",
            "progress-bar-harness-example.spec.ts"
        ],
        "selector": "progress-bar-harness-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-harness-example.ts",
        "importPath": "material/progress-bar"
    },
    "progress-bar-indeterminate": {
        "packagePath": "material/progress-bar/progress-bar-indeterminate",
        "title": "Indeterminate progress-bar",
        "componentName": "ProgressBarIndeterminateExample",
        "files": [
            "progress-bar-indeterminate-example.ts",
            "progress-bar-indeterminate-example.html"
        ],
        "selector": "progress-bar-indeterminate-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-indeterminate-example.ts",
        "importPath": "material/progress-bar"
    },
    "progress-bar-query": {
        "packagePath": "material/progress-bar/progress-bar-query",
        "title": "Query progress-bar",
        "componentName": "ProgressBarQueryExample",
        "files": [
            "progress-bar-query-example.ts",
            "progress-bar-query-example.html"
        ],
        "selector": "progress-bar-query-example",
        "additionalComponents": [],
        "primaryFile": "progress-bar-query-example.ts",
        "importPath": "material/progress-bar"
    },
    "progress-spinner-configurable": {
        "packagePath": "material/progress-spinner/progress-spinner-configurable",
        "title": "Configurable progress spinner",
        "componentName": "ProgressSpinnerConfigurableExample",
        "files": [
            "progress-spinner-configurable-example.ts",
            "progress-spinner-configurable-example.html",
            "progress-spinner-configurable-example.css"
        ],
        "selector": "progress-spinner-configurable-example",
        "additionalComponents": [],
        "primaryFile": "progress-spinner-configurable-example.ts",
        "importPath": "material/progress-spinner"
    },
    "progress-spinner-harness": {
        "packagePath": "material/progress-spinner/progress-spinner-harness",
        "title": "Testing with MatProgressSpinnerHarness",
        "componentName": "ProgressSpinnerHarnessExample",
        "files": [
            "progress-spinner-harness-example.ts",
            "progress-spinner-harness-example.html",
            "progress-spinner-harness-example.spec.ts"
        ],
        "selector": "progress-spinner-harness-example",
        "additionalComponents": [],
        "primaryFile": "progress-spinner-harness-example.ts",
        "importPath": "material/progress-spinner"
    },
    "progress-spinner-overview": {
        "packagePath": "material/progress-spinner/progress-spinner-overview",
        "title": "Basic progress-spinner",
        "componentName": "ProgressSpinnerOverviewExample",
        "files": [
            "progress-spinner-overview-example.ts",
            "progress-spinner-overview-example.html"
        ],
        "selector": "progress-spinner-overview-example",
        "additionalComponents": [],
        "primaryFile": "progress-spinner-overview-example.ts",
        "importPath": "material/progress-spinner"
    },
    "radio-harness": {
        "packagePath": "material/radio/radio-harness",
        "title": "Testing with MatRadioHarness",
        "componentName": "RadioHarnessExample",
        "files": [
            "radio-harness-example.ts",
            "radio-harness-example.html",
            "radio-harness-example.spec.ts"
        ],
        "selector": "radio-harness-example",
        "additionalComponents": [],
        "primaryFile": "radio-harness-example.ts",
        "importPath": "material/radio"
    },
    "radio-ng-model": {
        "packagePath": "material/radio/radio-ng-model",
        "title": "Radios with ngModel",
        "componentName": "RadioNgModelExample",
        "files": [
            "radio-ng-model-example.ts",
            "radio-ng-model-example.html",
            "radio-ng-model-example.css"
        ],
        "selector": "radio-ng-model-example",
        "additionalComponents": [],
        "primaryFile": "radio-ng-model-example.ts",
        "importPath": "material/radio"
    },
    "radio-overview": {
        "packagePath": "material/radio/radio-overview",
        "title": "Basic radios",
        "componentName": "RadioOverviewExample",
        "files": [
            "radio-overview-example.ts",
            "radio-overview-example.html",
            "radio-overview-example.css"
        ],
        "selector": "radio-overview-example",
        "additionalComponents": [],
        "primaryFile": "radio-overview-example.ts",
        "importPath": "material/radio"
    },
    "select-custom-trigger": {
        "packagePath": "material/select/select-custom-trigger",
        "title": "Select with custom trigger text",
        "componentName": "SelectCustomTriggerExample",
        "files": [
            "select-custom-trigger-example.ts",
            "select-custom-trigger-example.html",
            "select-custom-trigger-example.css"
        ],
        "selector": "select-custom-trigger-example",
        "additionalComponents": [],
        "primaryFile": "select-custom-trigger-example.ts",
        "importPath": "material/select"
    },
    "select-disabled": {
        "packagePath": "material/select/select-disabled",
        "title": "Disabled select",
        "componentName": "SelectDisabledExample",
        "files": [
            "select-disabled-example.ts",
            "select-disabled-example.html"
        ],
        "selector": "select-disabled-example",
        "additionalComponents": [],
        "primaryFile": "select-disabled-example.ts",
        "importPath": "material/select"
    },
    "select-error-state-matcher": {
        "packagePath": "material/select/select-error-state-matcher",
        "title": "Select with a custom ErrorStateMatcher",
        "componentName": "SelectErrorStateMatcherExample",
        "files": [
            "select-error-state-matcher-example.ts",
            "select-error-state-matcher-example.html"
        ],
        "selector": "select-error-state-matcher-example",
        "additionalComponents": [],
        "primaryFile": "select-error-state-matcher-example.ts",
        "importPath": "material/select"
    },
    "select-form": {
        "packagePath": "material/select/select-form",
        "title": "Select in a form",
        "componentName": "SelectFormExample",
        "files": [
            "select-form-example.ts",
            "select-form-example.html"
        ],
        "selector": "select-form-example",
        "additionalComponents": [],
        "primaryFile": "select-form-example.ts",
        "importPath": "material/select"
    },
    "select-harness": {
        "packagePath": "material/select/select-harness",
        "title": "Testing with MatSelectHarness",
        "componentName": "SelectHarnessExample",
        "files": [
            "select-harness-example.ts",
            "select-harness-example.html",
            "select-harness-example.spec.ts"
        ],
        "selector": "select-harness-example",
        "additionalComponents": [],
        "primaryFile": "select-harness-example.ts",
        "importPath": "material/select"
    },
    "select-hint-error": {
        "packagePath": "material/select/select-hint-error",
        "title": "Select with form field features",
        "componentName": "SelectHintErrorExample",
        "files": [
            "select-hint-error-example.ts",
            "select-hint-error-example.html"
        ],
        "selector": "select-hint-error-example",
        "additionalComponents": [],
        "primaryFile": "select-hint-error-example.ts",
        "importPath": "material/select"
    },
    "select-initial-value": {
        "packagePath": "material/select/select-initial-value",
        "title": "Basic select with initial value and no form",
        "componentName": "SelectInitialValueExample",
        "files": [
            "select-initial-value-example.ts",
            "select-initial-value-example.html"
        ],
        "selector": "select-initial-value-example",
        "additionalComponents": [],
        "primaryFile": "select-initial-value-example.ts",
        "importPath": "material/select"
    },
    "select-multiple": {
        "packagePath": "material/select/select-multiple",
        "title": "Select with multiple selection",
        "componentName": "SelectMultipleExample",
        "files": [
            "select-multiple-example.ts",
            "select-multiple-example.html"
        ],
        "selector": "select-multiple-example",
        "additionalComponents": [],
        "primaryFile": "select-multiple-example.ts",
        "importPath": "material/select"
    },
    "select-no-ripple": {
        "packagePath": "material/select/select-no-ripple",
        "title": "Select with no option ripple",
        "componentName": "SelectNoRippleExample",
        "files": [
            "select-no-ripple-example.ts",
            "select-no-ripple-example.html"
        ],
        "selector": "select-no-ripple-example",
        "additionalComponents": [],
        "primaryFile": "select-no-ripple-example.ts",
        "importPath": "material/select"
    },
    "select-optgroup": {
        "packagePath": "material/select/select-optgroup",
        "title": "Select with option groups",
        "componentName": "SelectOptgroupExample",
        "files": [
            "select-optgroup-example.ts",
            "select-optgroup-example.html"
        ],
        "selector": "select-optgroup-example",
        "additionalComponents": [],
        "primaryFile": "select-optgroup-example.ts",
        "importPath": "material/select"
    },
    "select-overview": {
        "packagePath": "material/select/select-overview",
        "title": "Basic select",
        "componentName": "SelectOverviewExample",
        "files": [
            "select-overview-example.ts",
            "select-overview-example.html"
        ],
        "selector": "select-overview-example",
        "additionalComponents": [],
        "primaryFile": "select-overview-example.ts",
        "importPath": "material/select"
    },
    "select-panel-class": {
        "packagePath": "material/select/select-panel-class",
        "title": "Select with custom panel styling",
        "componentName": "SelectPanelClassExample",
        "files": [
            "select-panel-class-example.ts",
            "select-panel-class-example.html",
            "select-panel-class-example.css"
        ],
        "selector": "select-panel-class-example",
        "additionalComponents": [],
        "primaryFile": "select-panel-class-example.ts",
        "importPath": "material/select"
    },
    "select-reactive-form": {
        "packagePath": "material/select/select-reactive-form",
        "title": "Select in a reactive form",
        "componentName": "SelectReactiveFormExample",
        "files": [
            "select-reactive-form-example.ts",
            "select-reactive-form-example.html"
        ],
        "selector": "select-reactive-form-example",
        "additionalComponents": [],
        "primaryFile": "select-reactive-form-example.ts",
        "importPath": "material/select"
    },
    "select-reset": {
        "packagePath": "material/select/select-reset",
        "title": "Select with reset option",
        "componentName": "SelectResetExample",
        "files": [
            "select-reset-example.ts",
            "select-reset-example.html"
        ],
        "selector": "select-reset-example",
        "additionalComponents": [],
        "primaryFile": "select-reset-example.ts",
        "importPath": "material/select"
    },
    "select-value-binding": {
        "packagePath": "material/select/select-value-binding",
        "title": "Select with 2-way value binding",
        "componentName": "SelectValueBindingExample",
        "files": [
            "select-value-binding-example.ts",
            "select-value-binding-example.html"
        ],
        "selector": "select-value-binding-example",
        "additionalComponents": [],
        "primaryFile": "select-value-binding-example.ts",
        "importPath": "material/select"
    },
    "sidenav-autosize": {
        "packagePath": "material/sidenav/sidenav-autosize",
        "title": "Autosize sidenav",
        "componentName": "SidenavAutosizeExample",
        "files": [
            "sidenav-autosize-example.ts",
            "sidenav-autosize-example.html",
            "sidenav-autosize-example.css"
        ],
        "selector": "sidenav-autosize-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-autosize-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-backdrop": {
        "packagePath": "material/sidenav/sidenav-backdrop",
        "title": "Drawer with explicit backdrop setting",
        "componentName": "SidenavBackdropExample",
        "files": [
            "sidenav-backdrop-example.ts",
            "sidenav-backdrop-example.html",
            "sidenav-backdrop-example.css"
        ],
        "selector": "sidenav-backdrop-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-backdrop-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-configurable-focus-trap": {
        "packagePath": "material/sidenav/sidenav-configurable-focus-trap",
        "title": "Sidenav using injected ConfigurableFocusTrap",
        "componentName": "SidenavConfigurableFocusTrapExample",
        "files": [
            "sidenav-configurable-focus-trap-example.ts",
            "sidenav-configurable-focus-trap-example.html",
            "sidenav-configurable-focus-trap-example.css"
        ],
        "selector": "sidenav-configurable-focus-trap-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-configurable-focus-trap-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-disable-close": {
        "packagePath": "material/sidenav/sidenav-disable-close",
        "title": "Sidenav with custom escape and backdrop click behavior",
        "componentName": "SidenavDisableCloseExample",
        "files": [
            "sidenav-disable-close-example.ts",
            "sidenav-disable-close-example.html",
            "sidenav-disable-close-example.css"
        ],
        "selector": "sidenav-disable-close-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-disable-close-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-drawer-overview": {
        "packagePath": "material/sidenav/sidenav-drawer-overview",
        "title": "Basic drawer",
        "componentName": "SidenavDrawerOverviewExample",
        "files": [
            "sidenav-drawer-overview-example.ts",
            "sidenav-drawer-overview-example.html",
            "sidenav-drawer-overview-example.css"
        ],
        "selector": "sidenav-drawer-overview-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-drawer-overview-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-fixed": {
        "packagePath": "material/sidenav/sidenav-fixed",
        "title": "Fixed sidenav",
        "componentName": "SidenavFixedExample",
        "files": [
            "sidenav-fixed-example.ts",
            "sidenav-fixed-example.html",
            "sidenav-fixed-example.css"
        ],
        "selector": "sidenav-fixed-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-fixed-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-harness": {
        "packagePath": "material/sidenav/sidenav-harness",
        "title": "Testing with MatSidenavHarness",
        "componentName": "SidenavHarnessExample",
        "files": [
            "sidenav-harness-example.ts",
            "sidenav-harness-example.html",
            "sidenav-harness-example.spec.ts"
        ],
        "selector": "sidenav-harness-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-harness-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-mode": {
        "packagePath": "material/sidenav/sidenav-mode",
        "title": "Sidenav with configurable mode",
        "componentName": "SidenavModeExample",
        "files": [
            "sidenav-mode-example.ts",
            "sidenav-mode-example.html",
            "sidenav-mode-example.css"
        ],
        "selector": "sidenav-mode-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-mode-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-open-close": {
        "packagePath": "material/sidenav/sidenav-open-close",
        "title": "Sidenav open & close behavior",
        "componentName": "SidenavOpenCloseExample",
        "files": [
            "sidenav-open-close-example.ts",
            "sidenav-open-close-example.html",
            "sidenav-open-close-example.css"
        ],
        "selector": "sidenav-open-close-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-open-close-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-overview": {
        "packagePath": "material/sidenav/sidenav-overview",
        "title": "Basic sidenav",
        "componentName": "SidenavOverviewExample",
        "files": [
            "sidenav-overview-example.ts",
            "sidenav-overview-example.html",
            "sidenav-overview-example.css"
        ],
        "selector": "sidenav-overview-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-overview-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-position": {
        "packagePath": "material/sidenav/sidenav-position",
        "title": "Implicit main content with two sidenavs",
        "componentName": "SidenavPositionExample",
        "files": [
            "sidenav-position-example.ts",
            "sidenav-position-example.html",
            "sidenav-position-example.css"
        ],
        "selector": "sidenav-position-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-position-example.ts",
        "importPath": "material/sidenav"
    },
    "sidenav-responsive": {
        "packagePath": "material/sidenav/sidenav-responsive",
        "title": "Responsive sidenav",
        "componentName": "SidenavResponsiveExample",
        "files": [
            "sidenav-responsive-example.ts",
            "sidenav-responsive-example.html",
            "sidenav-responsive-example.css"
        ],
        "selector": "sidenav-responsive-example",
        "additionalComponents": [],
        "primaryFile": "sidenav-responsive-example.ts",
        "importPath": "material/sidenav"
    },
    "slide-toggle-configurable": {
        "packagePath": "material/slide-toggle/slide-toggle-configurable",
        "title": "Configurable slide-toggle",
        "componentName": "SlideToggleConfigurableExample",
        "files": [
            "slide-toggle-configurable-example.ts",
            "slide-toggle-configurable-example.html",
            "slide-toggle-configurable-example.css"
        ],
        "selector": "slide-toggle-configurable-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-configurable-example.ts",
        "importPath": "material/slide-toggle"
    },
    "slide-toggle-forms": {
        "packagePath": "material/slide-toggle/slide-toggle-forms",
        "title": "Slide-toggle with forms",
        "componentName": "SlideToggleFormsExample",
        "files": [
            "slide-toggle-forms-example.ts",
            "./slide-toggle-forms-example.html",
            "./slide-toggle-forms-example.css"
        ],
        "selector": "slide-toggle-forms-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-forms-example.ts",
        "importPath": "material/slide-toggle"
    },
    "slide-toggle-harness": {
        "packagePath": "material/slide-toggle/slide-toggle-harness",
        "title": "Testing with MatSlideToggleHarness",
        "componentName": "SlideToggleHarnessExample",
        "files": [
            "slide-toggle-harness-example.ts",
            "slide-toggle-harness-example.html",
            "slide-toggle-harness-example.spec.ts"
        ],
        "selector": "slide-toggle-harness-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-harness-example.ts",
        "importPath": "material/slide-toggle"
    },
    "slide-toggle-overview": {
        "packagePath": "material/slide-toggle/slide-toggle-overview",
        "title": "Basic slide-toggles",
        "componentName": "SlideToggleOverviewExample",
        "files": [
            "slide-toggle-overview-example.ts",
            "slide-toggle-overview-example.html"
        ],
        "selector": "slide-toggle-overview-example",
        "additionalComponents": [],
        "primaryFile": "slide-toggle-overview-example.ts",
        "importPath": "material/slide-toggle"
    },
    "slider-configurable": {
        "packagePath": "material/slider/slider-configurable",
        "title": "Configurable slider",
        "componentName": "SliderConfigurableExample",
        "files": [
            "slider-configurable-example.ts",
            "slider-configurable-example.html",
            "slider-configurable-example.css"
        ],
        "selector": "slider-configurable-example",
        "additionalComponents": [],
        "primaryFile": "slider-configurable-example.ts",
        "importPath": "material/slider"
    },
    "slider-formatting": {
        "packagePath": "material/slider/slider-formatting",
        "title": "Slider with custom thumb label formatting.",
        "componentName": "SliderFormattingExample",
        "files": [
            "slider-formatting-example.ts",
            "slider-formatting-example.html",
            "slider-formatting-example.css"
        ],
        "selector": "slider-formatting-example",
        "additionalComponents": [],
        "primaryFile": "slider-formatting-example.ts",
        "importPath": "material/slider"
    },
    "slider-harness": {
        "packagePath": "material/slider/slider-harness",
        "title": "Testing with MatSliderHarness",
        "componentName": "SliderHarnessExample",
        "files": [
            "slider-harness-example.ts",
            "slider-harness-example.html",
            "slider-harness-example.spec.ts"
        ],
        "selector": "slider-harness-example",
        "additionalComponents": [],
        "primaryFile": "slider-harness-example.ts",
        "importPath": "material/slider"
    },
    "slider-overview": {
        "packagePath": "material/slider/slider-overview",
        "title": "Basic slider",
        "componentName": "SliderOverviewExample",
        "files": [
            "slider-overview-example.ts",
            "slider-overview-example.html",
            "slider-overview-example.css"
        ],
        "selector": "slider-overview-example",
        "additionalComponents": [],
        "primaryFile": "slider-overview-example.ts",
        "importPath": "material/slider"
    },
    "slider-range": {
        "packagePath": "material/slider/slider-range",
        "title": "Range slider",
        "componentName": "SliderRangeExample",
        "files": [
            "slider-range-example.ts",
            "slider-range-example.html",
            "slider-range-example.css"
        ],
        "selector": "slider-range-example",
        "additionalComponents": [],
        "primaryFile": "slider-range-example.ts",
        "importPath": "material/slider"
    },
    "snack-bar-annotated-component": {
        "packagePath": "material/snack-bar/snack-bar-annotated-component",
        "title": "Snack-bar with an annotated custom component",
        "componentName": "SnackBarAnnotatedComponentExample",
        "files": [
            "snack-bar-annotated-component-example.ts",
            "snack-bar-annotated-component-example.html",
            "snack-bar-annotated-component-example.css",
            "snack-bar-annotated-component-example-snack.html"
        ],
        "selector": "snack-bar-annotated-component-example",
        "additionalComponents": [
            "PizzaPartyAnnotatedComponent"
        ],
        "primaryFile": "snack-bar-annotated-component-example.ts",
        "importPath": "material/snack-bar"
    },
    "snack-bar-component": {
        "packagePath": "material/snack-bar/snack-bar-component",
        "title": "Snack-bar with a custom component",
        "componentName": "SnackBarComponentExample",
        "files": [
            "snack-bar-component-example.ts",
            "snack-bar-component-example.html",
            "snack-bar-component-example.css",
            "snack-bar-component-example-snack.html"
        ],
        "selector": "snack-bar-component-example",
        "additionalComponents": [
            "PizzaPartyComponent"
        ],
        "primaryFile": "snack-bar-component-example.ts",
        "importPath": "material/snack-bar"
    },
    "snack-bar-harness": {
        "packagePath": "material/snack-bar/snack-bar-harness",
        "title": "Testing with MatSnackBarHarness",
        "componentName": "SnackBarHarnessExample",
        "files": [
            "snack-bar-harness-example.ts",
            "snack-bar-harness-example.html",
            "snack-bar-harness-example.spec.ts"
        ],
        "selector": "snack-bar-harness-example",
        "additionalComponents": [],
        "primaryFile": "snack-bar-harness-example.ts",
        "importPath": "material/snack-bar"
    },
    "snack-bar-overview": {
        "packagePath": "material/snack-bar/snack-bar-overview",
        "title": "Basic snack-bar",
        "componentName": "SnackBarOverviewExample",
        "files": [
            "snack-bar-overview-example.ts",
            "snack-bar-overview-example.html",
            "snack-bar-overview-example.css"
        ],
        "selector": "snack-bar-overview-example",
        "additionalComponents": [],
        "primaryFile": "snack-bar-overview-example.ts",
        "importPath": "material/snack-bar"
    },
    "snack-bar-position": {
        "packagePath": "material/snack-bar/snack-bar-position",
        "title": "Snack-bar with configurable position",
        "componentName": "SnackBarPositionExample",
        "files": [
            "snack-bar-position-example.ts",
            "snack-bar-position-example.html",
            "snack-bar-position-example.css"
        ],
        "selector": "snack-bar-position-example",
        "additionalComponents": [],
        "primaryFile": "snack-bar-position-example.ts",
        "importPath": "material/snack-bar"
    },
    "sort-harness": {
        "packagePath": "material/sort/sort-harness",
        "title": "Testing with MatSortHarness",
        "componentName": "SortHarnessExample",
        "files": [
            "sort-harness-example.ts",
            "sort-harness-example.html",
            "sort-harness-example.spec.ts"
        ],
        "selector": "sort-harness-example",
        "additionalComponents": [],
        "primaryFile": "sort-harness-example.ts",
        "importPath": "material/sort"
    },
    "sort-overview": {
        "packagePath": "material/sort/sort-overview",
        "title": "Sorting overview",
        "componentName": "SortOverviewExample",
        "files": [
            "sort-overview-example.ts",
            "sort-overview-example.html",
            "sort-overview-example.css"
        ],
        "selector": "sort-overview-example",
        "additionalComponents": [],
        "primaryFile": "sort-overview-example.ts",
        "importPath": "material/sort"
    },
    "stepper-animations": {
        "packagePath": "material/stepper/stepper-animations",
        "title": "Stepper animations",
        "componentName": "StepperAnimationsExample",
        "files": [
            "stepper-animations-example.ts",
            "stepper-animations-example.html",
            "stepper-animations-example.css"
        ],
        "selector": "stepper-animations-example",
        "additionalComponents": [],
        "primaryFile": "stepper-animations-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-editable": {
        "packagePath": "material/stepper/stepper-editable",
        "title": "Stepper with editable steps",
        "componentName": "StepperEditableExample",
        "files": [
            "stepper-editable-example.ts",
            "stepper-editable-example.html",
            "stepper-editable-example.css"
        ],
        "selector": "stepper-editable-example",
        "additionalComponents": [],
        "primaryFile": "stepper-editable-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-errors": {
        "packagePath": "material/stepper/stepper-errors",
        "title": "Stepper that displays errors in the steps",
        "componentName": "StepperErrorsExample",
        "files": [
            "stepper-errors-example.ts",
            "stepper-errors-example.html",
            "stepper-errors-example.css"
        ],
        "selector": "stepper-errors-example",
        "additionalComponents": [],
        "primaryFile": "stepper-errors-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-harness": {
        "packagePath": "material/stepper/stepper-harness",
        "title": "Testing with MatStepperHarness",
        "componentName": "StepperHarnessExample",
        "files": [
            "stepper-harness-example.ts",
            "stepper-harness-example.html",
            "stepper-harness-example.spec.ts"
        ],
        "selector": "stepper-harness-example",
        "additionalComponents": [],
        "primaryFile": "stepper-harness-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-header-position": {
        "packagePath": "material/stepper/stepper-header-position",
        "title": "Stepper header position",
        "componentName": "StepperHeaderPositionExample",
        "files": [
            "stepper-header-position-example.ts",
            "stepper-header-position-example.html"
        ],
        "selector": "stepper-header-position-example",
        "additionalComponents": [],
        "primaryFile": "stepper-header-position-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-intl": {
        "packagePath": "material/stepper/stepper-intl",
        "title": "Stepper that uses the MatStepperIntl service",
        "componentName": "StepperIntlExample",
        "files": [
            "stepper-intl-example.ts",
            "stepper-intl-example.html",
            "stepper-intl-example.css"
        ],
        "selector": "stepper-intl-example",
        "additionalComponents": [],
        "primaryFile": "stepper-intl-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-label-position-bottom": {
        "packagePath": "material/stepper/stepper-label-position-bottom",
        "title": "Stepper label bottom position",
        "componentName": "StepperLabelPositionBottomExample",
        "files": [
            "stepper-label-position-bottom-example.ts",
            "stepper-label-position-bottom-example.html",
            "stepper-label-position-bottom-example.css"
        ],
        "selector": "stepper-label-position-bottom-example",
        "additionalComponents": [],
        "primaryFile": "stepper-label-position-bottom-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-lazy-content": {
        "packagePath": "material/stepper/stepper-lazy-content",
        "title": "Stepper lazy content rendering",
        "componentName": "StepperLazyContentExample",
        "files": [
            "stepper-lazy-content-example.ts",
            "stepper-lazy-content-example.html"
        ],
        "selector": "stepper-lazy-content-example",
        "additionalComponents": [],
        "primaryFile": "stepper-lazy-content-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-optional": {
        "packagePath": "material/stepper/stepper-optional",
        "title": "Stepper with optional steps",
        "componentName": "StepperOptionalExample",
        "files": [
            "stepper-optional-example.ts",
            "stepper-optional-example.html",
            "stepper-optional-example.css"
        ],
        "selector": "stepper-optional-example",
        "additionalComponents": [],
        "primaryFile": "stepper-optional-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-overview": {
        "packagePath": "material/stepper/stepper-overview",
        "title": "Stepper overview",
        "componentName": "StepperOverviewExample",
        "files": [
            "stepper-overview-example.ts",
            "stepper-overview-example.html",
            "stepper-overview-example.css"
        ],
        "selector": "stepper-overview-example",
        "additionalComponents": [],
        "primaryFile": "stepper-overview-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-responsive": {
        "packagePath": "material/stepper/stepper-responsive",
        "title": "Stepper responsive",
        "componentName": "StepperResponsiveExample",
        "files": [
            "stepper-responsive-example.ts",
            "stepper-responsive-example.html",
            "stepper-responsive-example.css"
        ],
        "selector": "stepper-responsive-example",
        "additionalComponents": [],
        "primaryFile": "stepper-responsive-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-states": {
        "packagePath": "material/stepper/stepper-states",
        "title": "Stepper with customized states",
        "componentName": "StepperStatesExample",
        "files": [
            "stepper-states-example.ts",
            "stepper-states-example.html",
            "stepper-states-example.css"
        ],
        "selector": "stepper-states-example",
        "additionalComponents": [],
        "primaryFile": "stepper-states-example.ts",
        "importPath": "material/stepper"
    },
    "stepper-vertical": {
        "packagePath": "material/stepper/stepper-vertical",
        "title": "Stepper vertical",
        "componentName": "StepperVerticalExample",
        "files": [
            "stepper-vertical-example.ts",
            "stepper-vertical-example.html",
            "stepper-vertical-example.css"
        ],
        "selector": "stepper-vertical-example",
        "additionalComponents": [],
        "primaryFile": "stepper-vertical-example.ts",
        "importPath": "material/stepper"
    },
    "table-basic": {
        "packagePath": "material/table/table-basic",
        "title": "Basic use of `<table mat-table>`",
        "componentName": "TableBasicExample",
        "files": [
            "table-basic-example.ts",
            "table-basic-example.html",
            "table-basic-example.css"
        ],
        "selector": "table-basic-example",
        "additionalComponents": [],
        "primaryFile": "table-basic-example.ts",
        "importPath": "material/table"
    },
    "table-column-styling": {
        "packagePath": "material/table/table-column-styling",
        "title": "Styling columns using their auto-generated column names",
        "componentName": "TableColumnStylingExample",
        "files": [
            "table-column-styling-example.ts",
            "table-column-styling-example.html",
            "table-column-styling-example.css"
        ],
        "selector": "table-column-styling-example",
        "additionalComponents": [],
        "primaryFile": "table-column-styling-example.ts",
        "importPath": "material/table"
    },
    "table-dynamic-array-data": {
        "packagePath": "material/table/table-dynamic-array-data",
        "title": "Adding and removing data when using an array-based datasource.",
        "componentName": "TableDynamicArrayDataExample",
        "files": [
            "table-dynamic-array-data-example.ts",
            "table-dynamic-array-data-example.html",
            "table-dynamic-array-data-example.css"
        ],
        "selector": "table-dynamic-array-data-example",
        "additionalComponents": [],
        "primaryFile": "table-dynamic-array-data-example.ts",
        "importPath": "material/table"
    },
    "table-dynamic-columns": {
        "packagePath": "material/table/table-dynamic-columns",
        "title": "Table dynamically changing the columns displayed",
        "componentName": "TableDynamicColumnsExample",
        "files": [
            "table-dynamic-columns-example.ts",
            "table-dynamic-columns-example.html",
            "table-dynamic-columns-example.css"
        ],
        "selector": "table-dynamic-columns-example",
        "additionalComponents": [],
        "primaryFile": "table-dynamic-columns-example.ts",
        "importPath": "material/table"
    },
    "table-dynamic-observable-data": {
        "packagePath": "material/table/table-dynamic-observable-data",
        "title": "Adding and removing data when using an observable-based datasource.",
        "componentName": "TableDynamicObservableDataExample",
        "files": [
            "table-dynamic-observable-data-example.ts",
            "table-dynamic-observable-data-example.html",
            "table-dynamic-observable-data-example.css"
        ],
        "selector": "table-dynamic-observable-data-example",
        "additionalComponents": [],
        "primaryFile": "table-dynamic-observable-data-example.ts",
        "importPath": "material/table"
    },
    "table-expandable-rows": {
        "packagePath": "material/table/table-expandable-rows",
        "title": "Table with expandable rows",
        "componentName": "TableExpandableRowsExample",
        "files": [
            "table-expandable-rows-example.ts",
            "table-expandable-rows-example.html",
            "table-expandable-rows-example.css"
        ],
        "selector": "table-expandable-rows-example",
        "additionalComponents": [],
        "primaryFile": "table-expandable-rows-example.ts",
        "importPath": "material/table"
    },
    "table-filtering": {
        "packagePath": "material/table/table-filtering",
        "title": "Table with filtering",
        "componentName": "TableFilteringExample",
        "files": [
            "table-filtering-example.ts",
            "table-filtering-example.html",
            "table-filtering-example.css"
        ],
        "selector": "table-filtering-example",
        "additionalComponents": [],
        "primaryFile": "table-filtering-example.ts",
        "importPath": "material/table"
    },
    "table-flex-basic": {
        "packagePath": "material/table/table-flex-basic",
        "title": "Basic use of `<mat-table>` (uses display flex)",
        "componentName": "TableFlexBasicExample",
        "files": [
            "table-flex-basic-example.ts",
            "table-flex-basic-example.html",
            "table-flex-basic-example.css"
        ],
        "selector": "table-flex-basic-example",
        "additionalComponents": [],
        "primaryFile": "table-flex-basic-example.ts",
        "importPath": "material/table"
    },
    "table-flex-large-row": {
        "packagePath": "material/table/table-flex-large-row",
        "title": "Flex table where one column's cells has a greater height than others.",
        "componentName": "TableFlexLargeRowExample",
        "files": [
            "table-flex-large-row-example.ts",
            "table-flex-large-row-example.html",
            "table-flex-large-row-example.css"
        ],
        "selector": "table-flex-large-row-example",
        "additionalComponents": [],
        "primaryFile": "table-flex-large-row-example.ts",
        "importPath": "material/table"
    },
    "table-footer-row": {
        "packagePath": "material/table/table-footer-row",
        "title": "Footer row table",
        "componentName": "TableFooterRowExample",
        "files": [
            "table-footer-row-example.ts",
            "table-footer-row-example.html",
            "table-footer-row-example.css"
        ],
        "selector": "table-footer-row-example",
        "additionalComponents": [],
        "primaryFile": "table-footer-row-example.ts",
        "importPath": "material/table"
    },
    "table-generated-columns": {
        "packagePath": "material/table/table-generated-columns",
        "title": "Table with columns defined using a for loop instead of statically written in the template.",
        "componentName": "TableGeneratedColumnsExample",
        "files": [
            "table-generated-columns-example.ts",
            "table-generated-columns-example.html",
            "table-generated-columns-example.css"
        ],
        "selector": "table-generated-columns-example",
        "additionalComponents": [],
        "primaryFile": "table-generated-columns-example.ts",
        "importPath": "material/table"
    },
    "table-harness": {
        "packagePath": "material/table/table-harness",
        "title": "Testing with MatTableHarness",
        "componentName": "TableHarnessExample",
        "files": [
            "table-harness-example.ts",
            "table-harness-example.html",
            "table-harness-example.spec.ts"
        ],
        "selector": "table-harness-example",
        "additionalComponents": [],
        "primaryFile": "table-harness-example.ts",
        "importPath": "material/table"
    },
    "table-http": {
        "packagePath": "material/table/table-http",
        "title": "Table retrieving data through HTTP",
        "componentName": "TableHttpExample",
        "files": [
            "table-http-example.ts",
            "table-http-example.html",
            "table-http-example.css"
        ],
        "selector": "table-http-example",
        "additionalComponents": [],
        "primaryFile": "table-http-example.ts",
        "importPath": "material/table"
    },
    "table-multiple-header-footer": {
        "packagePath": "material/table/table-multiple-header-footer",
        "title": "Table with multiple header and footer rows",
        "componentName": "TableMultipleHeaderFooterExample",
        "files": [
            "table-multiple-header-footer-example.ts",
            "table-multiple-header-footer-example.html",
            "table-multiple-header-footer-example.css"
        ],
        "selector": "table-multiple-header-footer-example",
        "additionalComponents": [],
        "primaryFile": "table-multiple-header-footer-example.ts",
        "importPath": "material/table"
    },
    "table-overview": {
        "packagePath": "material/table/table-overview",
        "title": "Data table with sorting, pagination, and filtering.",
        "componentName": "TableOverviewExample",
        "files": [
            "table-overview-example.ts",
            "table-overview-example.html",
            "table-overview-example.css"
        ],
        "selector": "table-overview-example",
        "additionalComponents": [],
        "primaryFile": "table-overview-example.ts",
        "importPath": "material/table"
    },
    "table-pagination": {
        "packagePath": "material/table/table-pagination",
        "title": "Table with pagination",
        "componentName": "TablePaginationExample",
        "files": [
            "table-pagination-example.ts",
            "table-pagination-example.html",
            "table-pagination-example.css"
        ],
        "selector": "table-pagination-example",
        "additionalComponents": [],
        "primaryFile": "table-pagination-example.ts",
        "importPath": "material/table"
    },
    "table-recycle-rows": {
        "packagePath": "material/table/table-recycle-rows",
        "title": "Table that uses the recycle view repeater strategy.",
        "componentName": "TableRecycleRowsExample",
        "files": [
            "table-recycle-rows-example.ts",
            "table-recycle-rows-example.html",
            "table-recycle-rows-example.css"
        ],
        "selector": "table-recycle-rows-example",
        "additionalComponents": [],
        "primaryFile": "table-recycle-rows-example.ts",
        "importPath": "material/table"
    },
    "table-reorderable": {
        "packagePath": "material/table/table-reorderable",
        "title": "Table with re-orderable columns",
        "componentName": "TableReorderableExample",
        "files": [
            "table-reorderable-example.ts",
            "./table-reorderable-example.html",
            "./table-reorderable-example.css"
        ],
        "selector": "table-reorderable-example",
        "additionalComponents": [],
        "primaryFile": "table-reorderable-example.ts",
        "importPath": "material/table"
    },
    "table-row-binding": {
        "packagePath": "material/table/table-row-binding",
        "title": "Binding event handlers and properties to the table rows.",
        "componentName": "TableRowBindingExample",
        "files": [
            "table-row-binding-example.ts",
            "table-row-binding-example.html",
            "table-row-binding-example.css"
        ],
        "selector": "table-row-binding-example",
        "additionalComponents": [],
        "primaryFile": "table-row-binding-example.ts",
        "importPath": "material/table"
    },
    "table-row-context": {
        "packagePath": "material/table/table-row-context",
        "title": "Table showing each row context properties.",
        "componentName": "TableRowContextExample",
        "files": [
            "table-row-context-example.ts",
            "table-row-context-example.html",
            "table-row-context-example.css"
        ],
        "selector": "table-row-context-example",
        "additionalComponents": [],
        "primaryFile": "table-row-context-example.ts",
        "importPath": "material/table"
    },
    "table-selection": {
        "packagePath": "material/table/table-selection",
        "title": "Table with selection",
        "componentName": "TableSelectionExample",
        "files": [
            "table-selection-example.ts",
            "table-selection-example.html",
            "table-selection-example.css"
        ],
        "selector": "table-selection-example",
        "additionalComponents": [],
        "primaryFile": "table-selection-example.ts",
        "importPath": "material/table"
    },
    "table-sorting": {
        "packagePath": "material/table/table-sorting",
        "title": "Table with sorting",
        "componentName": "TableSortingExample",
        "files": [
            "table-sorting-example.ts",
            "table-sorting-example.html",
            "table-sorting-example.css"
        ],
        "selector": "table-sorting-example",
        "additionalComponents": [],
        "primaryFile": "table-sorting-example.ts",
        "importPath": "material/table"
    },
    "table-sticky-columns": {
        "packagePath": "material/table/table-sticky-columns",
        "title": "Table with sticky columns",
        "componentName": "TableStickyColumnsExample",
        "files": [
            "table-sticky-columns-example.ts",
            "table-sticky-columns-example.html",
            "table-sticky-columns-example.css"
        ],
        "selector": "table-sticky-columns-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-columns-example.ts",
        "importPath": "material/table"
    },
    "table-sticky-complex-flex": {
        "packagePath": "material/table/table-sticky-complex-flex",
        "title": "Flex-layout tables with toggle-able sticky headers, footers, and columns",
        "componentName": "TableStickyComplexFlexExample",
        "files": [
            "table-sticky-complex-flex-example.ts",
            "table-sticky-complex-flex-example.html",
            "table-sticky-complex-flex-example.css"
        ],
        "selector": "table-sticky-complex-flex-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-complex-flex-example.ts",
        "importPath": "material/table"
    },
    "table-sticky-complex": {
        "packagePath": "material/table/table-sticky-complex",
        "title": "Tables with toggle-able sticky headers, footers, and columns",
        "componentName": "TableStickyComplexExample",
        "files": [
            "table-sticky-complex-example.ts",
            "table-sticky-complex-example.html",
            "table-sticky-complex-example.css"
        ],
        "selector": "table-sticky-complex-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-complex-example.ts",
        "importPath": "material/table"
    },
    "table-sticky-footer": {
        "packagePath": "material/table/table-sticky-footer",
        "title": "Table with a sticky footer",
        "componentName": "TableStickyFooterExample",
        "files": [
            "table-sticky-footer-example.ts",
            "table-sticky-footer-example.html",
            "table-sticky-footer-example.css"
        ],
        "selector": "table-sticky-footer-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-footer-example.ts",
        "importPath": "material/table"
    },
    "table-sticky-header": {
        "packagePath": "material/table/table-sticky-header",
        "title": "Table with sticky header",
        "componentName": "TableStickyHeaderExample",
        "files": [
            "table-sticky-header-example.ts",
            "table-sticky-header-example.html",
            "table-sticky-header-example.css"
        ],
        "selector": "table-sticky-header-example",
        "additionalComponents": [],
        "primaryFile": "table-sticky-header-example.ts",
        "importPath": "material/table"
    },
    "table-text-column-advanced": {
        "packagePath": "material/table/table-text-column-advanced",
        "title": "Use of 'mat-text-column' with various configurations of the interface.",
        "componentName": "TableTextColumnAdvancedExample",
        "files": [
            "table-text-column-advanced-example.ts",
            "table-text-column-advanced-example.html",
            "table-text-column-advanced-example.css"
        ],
        "selector": "table-text-column-advanced-example",
        "additionalComponents": [],
        "primaryFile": "table-text-column-advanced-example.ts",
        "importPath": "material/table"
    },
    "table-text-column": {
        "packagePath": "material/table/table-text-column",
        "title": "Use of `mat-text-column` which can be used for simple columns that only need to display\na text value for the header and cells.",
        "componentName": "TableTextColumnExample",
        "files": [
            "table-text-column-example.ts",
            "table-text-column-example.html",
            "table-text-column-example.css"
        ],
        "selector": "table-text-column-example",
        "additionalComponents": [],
        "primaryFile": "table-text-column-example.ts",
        "importPath": "material/table"
    },
    "table-with-ripples": {
        "packagePath": "material/table/table-with-ripples",
        "title": "Tables with Material Design ripples.",
        "componentName": "TableWithRipplesExample",
        "files": [
            "table-with-ripples-example.ts",
            "table-with-ripples-example.html"
        ],
        "selector": "table-with-ripples-example",
        "additionalComponents": [],
        "primaryFile": "table-with-ripples-example.ts",
        "importPath": "material/table"
    },
    "table-wrapped": {
        "packagePath": "material/table/table-wrapped",
        "title": "Table example that shows how to wrap a table component for definition and behavior reuse.",
        "componentName": "TableWrappedExample",
        "files": [
            "table-wrapped-example.ts",
            "table-wrapped-example.html",
            "table-wrapped-example.css",
            "wrapper-table.html"
        ],
        "selector": "table-wrapped-example",
        "additionalComponents": [
            "WrapperTable"
        ],
        "primaryFile": "table-wrapped-example.ts",
        "importPath": "material/table"
    },
    "tab-group-align": {
        "packagePath": "material/tabs/tab-group-align",
        "title": "Tab group with aligned labels",
        "componentName": "TabGroupAlignExample",
        "files": [
            "tab-group-align-example.ts",
            "tab-group-align-example.html",
            "tab-group-align-example.css"
        ],
        "selector": "tab-group-align-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-align-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-animations": {
        "packagePath": "material/tabs/tab-group-animations",
        "title": "Tab group animations",
        "componentName": "TabGroupAnimationsExample",
        "files": [
            "tab-group-animations-example.ts",
            "tab-group-animations-example.html",
            "tab-group-animations-example.css"
        ],
        "selector": "tab-group-animations-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-animations-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-async": {
        "packagePath": "material/tabs/tab-group-async",
        "title": "Tab group with asynchronously loading tab contents",
        "componentName": "TabGroupAsyncExample",
        "files": [
            "tab-group-async-example.ts",
            "tab-group-async-example.html"
        ],
        "selector": "tab-group-async-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-async-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-basic": {
        "packagePath": "material/tabs/tab-group-basic",
        "title": "Basic use of the tab group",
        "componentName": "TabGroupBasicExample",
        "files": [
            "tab-group-basic-example.ts",
            "tab-group-basic-example.html"
        ],
        "selector": "tab-group-basic-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-basic-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-custom-label": {
        "packagePath": "material/tabs/tab-group-custom-label",
        "title": "Using tabs with a custom label template",
        "componentName": "TabGroupCustomLabelExample",
        "files": [
            "tab-group-custom-label-example.ts",
            "tab-group-custom-label-example.html",
            "tab-group-custom-label-example.css"
        ],
        "selector": "tab-group-custom-label-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-custom-label-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-dynamic-height": {
        "packagePath": "material/tabs/tab-group-dynamic-height",
        "title": "Tab group with dynamic height based on tab contents",
        "componentName": "TabGroupDynamicHeightExample",
        "files": [
            "tab-group-dynamic-height-example.ts",
            "tab-group-dynamic-height-example.html",
            "tab-group-dynamic-height-example.css"
        ],
        "selector": "tab-group-dynamic-height-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-dynamic-height-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-dynamic": {
        "packagePath": "material/tabs/tab-group-dynamic",
        "title": "Tab group with dynamically changing tabs",
        "componentName": "TabGroupDynamicExample",
        "files": [
            "tab-group-dynamic-example.ts",
            "tab-group-dynamic-example.html",
            "tab-group-dynamic-example.css"
        ],
        "selector": "tab-group-dynamic-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-dynamic-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-harness": {
        "packagePath": "material/tabs/tab-group-harness",
        "title": "Testing with MatTabGroupHarness",
        "componentName": "TabGroupHarnessExample",
        "files": [
            "tab-group-harness-example.ts",
            "tab-group-harness-example.html",
            "tab-group-harness-example.spec.ts"
        ],
        "selector": "tab-group-harness-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-harness-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-header-below": {
        "packagePath": "material/tabs/tab-group-header-below",
        "title": "Tab group with the headers on the bottom",
        "componentName": "TabGroupHeaderBelowExample",
        "files": [
            "tab-group-header-below-example.ts",
            "tab-group-header-below-example.html"
        ],
        "selector": "tab-group-header-below-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-header-below-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-ink-bar": {
        "packagePath": "material/tabs/tab-group-ink-bar",
        "title": "Tab group with ink bar fit to content",
        "componentName": "TabGroupInkBarExample",
        "files": [
            "tab-group-ink-bar-example.ts",
            "tab-group-ink-bar-example.html"
        ],
        "selector": "tab-group-ink-bar-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-ink-bar-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-inverted": {
        "packagePath": "material/tabs/tab-group-inverted",
        "title": "Tab group with inverted tabs",
        "componentName": "TabGroupInvertedExample",
        "files": [
            "tab-group-inverted-example.ts",
            "tab-group-inverted-example.html"
        ],
        "selector": "tab-group-inverted-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-inverted-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-lazy-loaded": {
        "packagePath": "material/tabs/tab-group-lazy-loaded",
        "title": "Tab group where the tab content is loaded lazily (when activated)",
        "componentName": "TabGroupLazyLoadedExample",
        "files": [
            "tab-group-lazy-loaded-example.ts",
            "tab-group-lazy-loaded-example.html"
        ],
        "selector": "tab-group-lazy-loaded-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-lazy-loaded-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-paginated": {
        "packagePath": "material/tabs/tab-group-paginated",
        "title": "Tab group with paginated tabs",
        "componentName": "TabGroupPaginatedExample",
        "files": [
            "tab-group-paginated-example.ts",
            "tab-group-paginated-example.html"
        ],
        "selector": "tab-group-paginated-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-paginated-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-preserve-content": {
        "packagePath": "material/tabs/tab-group-preserve-content",
        "title": "Tab group that keeps its content inside the DOM when it's off-screen.",
        "componentName": "TabGroupPreserveContentExample",
        "files": [
            "tab-group-preserve-content-example.ts",
            "tab-group-preserve-content-example.html"
        ],
        "selector": "tab-group-preserve-content-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-preserve-content-example.ts",
        "importPath": "material/tabs"
    },
    "tab-group-stretched": {
        "packagePath": "material/tabs/tab-group-stretched",
        "title": "Tab group with stretched labels",
        "componentName": "TabGroupStretchedExample",
        "files": [
            "tab-group-stretched-example.ts",
            "tab-group-stretched-example.html",
            "tab-group-stretched-example.css"
        ],
        "selector": "tab-group-stretched-example",
        "additionalComponents": [],
        "primaryFile": "tab-group-stretched-example.ts",
        "importPath": "material/tabs"
    },
    "tab-nav-bar-basic": {
        "packagePath": "material/tabs/tab-nav-bar-basic",
        "title": "Basic use of the tab nav bar",
        "componentName": "TabNavBarBasicExample",
        "files": [
            "tab-nav-bar-basic-example.ts",
            "tab-nav-bar-basic-example.html",
            "tab-nav-bar-basic-example.css"
        ],
        "selector": "tab-nav-bar-basic-example",
        "additionalComponents": [],
        "primaryFile": "tab-nav-bar-basic-example.ts",
        "importPath": "material/tabs"
    },
    "toolbar-basic": {
        "packagePath": "material/toolbar/toolbar-basic",
        "title": "Basic toolbar",
        "componentName": "ToolbarBasicExample",
        "files": [
            "toolbar-basic-example.ts",
            "toolbar-basic-example.html",
            "toolbar-basic-example.css"
        ],
        "selector": "toolbar-basic-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-basic-example.ts",
        "importPath": "material/toolbar"
    },
    "toolbar-harness": {
        "packagePath": "material/toolbar/toolbar-harness",
        "title": "Testing with MatToolbarHarness",
        "componentName": "ToolbarHarnessExample",
        "files": [
            "toolbar-harness-example.ts",
            "toolbar-harness-example.html",
            "toolbar-harness-example.spec.ts"
        ],
        "selector": "toolbar-harness-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-harness-example.ts",
        "importPath": "material/toolbar"
    },
    "toolbar-multirow": {
        "packagePath": "material/toolbar/toolbar-multirow",
        "title": "Multi-row toolbar",
        "componentName": "ToolbarMultirowExample",
        "files": [
            "toolbar-multirow-example.ts",
            "toolbar-multirow-example.html",
            "toolbar-multirow-example.css"
        ],
        "selector": "toolbar-multirow-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-multirow-example.ts",
        "importPath": "material/toolbar"
    },
    "toolbar-overview": {
        "packagePath": "material/toolbar/toolbar-overview",
        "title": "Toolbar overview",
        "componentName": "ToolbarOverviewExample",
        "files": [
            "toolbar-overview-example.ts",
            "toolbar-overview-example.html",
            "toolbar-overview-example.css"
        ],
        "selector": "toolbar-overview-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-overview-example.ts",
        "importPath": "material/toolbar"
    },
    "toolbar-simple": {
        "packagePath": "material/toolbar/toolbar-simple",
        "title": "Toolbar with just text",
        "componentName": "ToolbarSimpleExample",
        "files": [
            "toolbar-simple-example.ts",
            "toolbar-simple-example.html"
        ],
        "selector": "toolbar-simple-example",
        "additionalComponents": [],
        "primaryFile": "toolbar-simple-example.ts",
        "importPath": "material/toolbar"
    },
    "tooltip-auto-hide": {
        "packagePath": "material/tooltip/tooltip-auto-hide",
        "title": "Tooltip that demonstrates auto-hiding when it clips out of its scrolling container.",
        "componentName": "TooltipAutoHideExample",
        "files": [
            "tooltip-auto-hide-example.ts",
            "tooltip-auto-hide-example.html",
            "tooltip-auto-hide-example.css"
        ],
        "selector": "tooltip-auto-hide-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-auto-hide-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-custom-class": {
        "packagePath": "material/tooltip/tooltip-custom-class",
        "title": "Tooltip that can have a custom class applied.",
        "componentName": "TooltipCustomClassExample",
        "files": [
            "tooltip-custom-class-example.ts",
            "tooltip-custom-class-example.html",
            "tooltip-custom-class-example.css"
        ],
        "selector": "tooltip-custom-class-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-custom-class-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-delay": {
        "packagePath": "material/tooltip/tooltip-delay",
        "title": "Tooltip with a show and hide delay",
        "componentName": "TooltipDelayExample",
        "files": [
            "tooltip-delay-example.ts",
            "tooltip-delay-example.html",
            "tooltip-delay-example.css"
        ],
        "selector": "tooltip-delay-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-delay-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-disabled": {
        "packagePath": "material/tooltip/tooltip-disabled",
        "title": "Tooltip that can be disabled",
        "componentName": "TooltipDisabledExample",
        "files": [
            "tooltip-disabled-example.ts",
            "tooltip-disabled-example.html",
            "tooltip-disabled-example.css"
        ],
        "selector": "tooltip-disabled-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-disabled-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-harness": {
        "packagePath": "material/tooltip/tooltip-harness",
        "title": "Testing with MatTooltipHarness",
        "componentName": "TooltipHarnessExample",
        "files": [
            "tooltip-harness-example.ts",
            "tooltip-harness-example.html",
            "tooltip-harness-example.spec.ts"
        ],
        "selector": "tooltip-harness-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-harness-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-manual": {
        "packagePath": "material/tooltip/tooltip-manual",
        "title": "Tooltip that can be manually shown/hidden.",
        "componentName": "TooltipManualExample",
        "files": [
            "tooltip-manual-example.ts",
            "tooltip-manual-example.html",
            "tooltip-manual-example.css"
        ],
        "selector": "tooltip-manual-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-manual-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-message": {
        "packagePath": "material/tooltip/tooltip-message",
        "title": "Tooltip with a changing message",
        "componentName": "TooltipMessageExample",
        "files": [
            "tooltip-message-example.ts",
            "tooltip-message-example.html",
            "tooltip-message-example.css"
        ],
        "selector": "tooltip-message-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-message-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-modified-defaults": {
        "packagePath": "material/tooltip/tooltip-modified-defaults",
        "title": "Tooltip with a show and hide delay",
        "componentName": "TooltipModifiedDefaultsExample",
        "files": [
            "tooltip-modified-defaults-example.ts",
            "tooltip-modified-defaults-example.html"
        ],
        "selector": "tooltip-modified-defaults-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-modified-defaults-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-overview": {
        "packagePath": "material/tooltip/tooltip-overview",
        "title": "Basic tooltip",
        "componentName": "TooltipOverviewExample",
        "files": [
            "tooltip-overview-example.ts",
            "tooltip-overview-example.html"
        ],
        "selector": "tooltip-overview-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-overview-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-position-at-origin": {
        "packagePath": "material/tooltip/tooltip-position-at-origin",
        "title": "Basic tooltip",
        "componentName": "TooltipPositionAtOriginExample",
        "files": [
            "tooltip-position-at-origin-example.ts",
            "tooltip-position-at-origin-example.html",
            "tooltip-position-at-origin-example.css"
        ],
        "selector": "tooltip-position-at-origin-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-position-at-origin-example.ts",
        "importPath": "material/tooltip"
    },
    "tooltip-position": {
        "packagePath": "material/tooltip/tooltip-position",
        "title": "Tooltip with a custom position",
        "componentName": "TooltipPositionExample",
        "files": [
            "tooltip-position-example.ts",
            "tooltip-position-example.html",
            "tooltip-position-example.css"
        ],
        "selector": "tooltip-position-example",
        "additionalComponents": [],
        "primaryFile": "tooltip-position-example.ts",
        "importPath": "material/tooltip"
    },
    "tree-dynamic": {
        "packagePath": "material/tree/tree-dynamic",
        "title": "Tree with dynamic data",
        "componentName": "TreeDynamicExample",
        "files": [
            "tree-dynamic-example.ts",
            "tree-dynamic-example.html",
            "tree-dynamic-example.css"
        ],
        "selector": "tree-dynamic-example",
        "additionalComponents": [],
        "primaryFile": "tree-dynamic-example.ts",
        "importPath": "material/tree"
    },
    "tree-flat-overview": {
        "packagePath": "material/tree/tree-flat-overview",
        "title": "Tree with flat nodes",
        "componentName": "TreeFlatOverviewExample",
        "files": [
            "tree-flat-overview-example.ts",
            "tree-flat-overview-example.html"
        ],
        "selector": "tree-flat-overview-example",
        "additionalComponents": [],
        "primaryFile": "tree-flat-overview-example.ts",
        "importPath": "material/tree"
    },
    "tree-harness": {
        "packagePath": "material/tree/tree-harness",
        "title": "Testing with MatTreeHarness",
        "componentName": "TreeHarnessExample",
        "files": [
            "tree-harness-example.ts",
            "tree-harness-example.html",
            "tree-harness-example.spec.ts"
        ],
        "selector": "tree-harness-example",
        "additionalComponents": [],
        "primaryFile": "tree-harness-example.ts",
        "importPath": "material/tree"
    },
    "tree-loadmore": {
        "packagePath": "material/tree/tree-loadmore",
        "title": "Tree with partially loaded data",
        "componentName": "TreeLoadmoreExample",
        "files": [
            "tree-loadmore-example.ts",
            "tree-loadmore-example.html"
        ],
        "selector": "tree-loadmore-example",
        "additionalComponents": [],
        "primaryFile": "tree-loadmore-example.ts",
        "importPath": "material/tree"
    },
    "tree-nested-overview": {
        "packagePath": "material/tree/tree-nested-overview",
        "title": "Tree with nested nodes",
        "componentName": "TreeNestedOverviewExample",
        "files": [
            "tree-nested-overview-example.ts",
            "tree-nested-overview-example.html",
            "tree-nested-overview-example.css"
        ],
        "selector": "tree-nested-overview-example",
        "additionalComponents": [],
        "primaryFile": "tree-nested-overview-example.ts",
        "importPath": "material/tree"
    }
};
export async function loadExample(id) {
    switch (id) {
        case 'cdk-popover-edit-cdk-table-flex':
            return import('@angular/components-examples/cdk-experimental/popover-edit');
        case 'cdk-popover-edit-cdk-table':
            return import('@angular/components-examples/cdk-experimental/popover-edit');
        case 'cdk-popover-edit-cell-span-vanilla-table':
            return import('@angular/components-examples/cdk-experimental/popover-edit');
        case 'cdk-popover-edit-tab-out-vanilla-table':
            return import('@angular/components-examples/cdk-experimental/popover-edit');
        case 'cdk-popover-edit-vanilla-table':
            return import('@angular/components-examples/cdk-experimental/popover-edit');
        case 'cdk-selection-column':
            return import('@angular/components-examples/cdk-experimental/selection');
        case 'cdk-selection-list':
            return import('@angular/components-examples/cdk-experimental/selection');
        case 'focus-monitor-directives':
            return import('@angular/components-examples/cdk/a11y');
        case 'focus-monitor-focus-via':
            return import('@angular/components-examples/cdk/a11y');
        case 'focus-monitor-overview':
            return import('@angular/components-examples/cdk/a11y');
        case 'cdk-accordion-overview':
            return import('@angular/components-examples/cdk/accordion');
        case 'cdk-clipboard-overview':
            return import('@angular/components-examples/cdk/clipboard');
        case 'cdk-dialog-data':
            return import('@angular/components-examples/cdk/dialog');
        case 'cdk-dialog-overview':
            return import('@angular/components-examples/cdk/dialog');
        case 'cdk-dialog-styling':
            return import('@angular/components-examples/cdk/dialog');
        case 'cdk-drag-drop-axis-lock':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-boundary':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-connected-sorting-group':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-connected-sorting':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-custom-placeholder':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-custom-preview':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-delay':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-disabled-sorting':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-disabled':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-enter-predicate':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-free-drag-position':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-handle':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-horizontal-sorting':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-overview':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-root-element':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-sort-predicate':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-sorting':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'cdk-drag-drop-table':
            return import('@angular/components-examples/cdk/drag-drop');
        case 'breakpoint-observer-overview':
            return import('@angular/components-examples/cdk/layout');
        case 'cdk-listbox-activedescendant':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-compare-with':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-custom-navigation':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-custom-typeahead':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-disabled':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-forms-validation':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-horizontal':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-multiple':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-overview':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-reactive-forms':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-template-forms':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-listbox-value-binding':
            return import('@angular/components-examples/cdk/listbox');
        case 'cdk-menu-context':
            return import('@angular/components-examples/cdk/menu');
        case 'cdk-menu-inline':
            return import('@angular/components-examples/cdk/menu');
        case 'cdk-menu-menubar':
            return import('@angular/components-examples/cdk/menu');
        case 'cdk-menu-nested-context':
            return import('@angular/components-examples/cdk/menu');
        case 'cdk-menu-standalone-menu':
            return import('@angular/components-examples/cdk/menu');
        case 'cdk-menu-standalone-stateful-menu':
            return import('@angular/components-examples/cdk/menu');
        case 'cdk-overlay-basic':
            return import('@angular/components-examples/cdk/overlay');
        case 'cdk-platform-overview':
            return import('@angular/components-examples/cdk/platform');
        case 'cdk-portal-overview':
            return import('@angular/components-examples/cdk/portal');
        case 'cdk-virtual-scroll-append-only':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-context':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-custom-strategy':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-data-source':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-dl':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-fixed-buffer':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-horizontal':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-overview':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-parent-scrolling':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-template-cache':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-virtual-scroll-window-scrolling':
            return import('@angular/components-examples/cdk/scrolling');
        case 'cdk-custom-stepper-without-form':
            return import('@angular/components-examples/cdk/stepper');
        case 'cdk-linear-stepper-with-form':
            return import('@angular/components-examples/cdk/stepper');
        case 'cdk-table-basic':
            return import('@angular/components-examples/cdk/table');
        case 'cdk-table-fixed-layout':
            return import('@angular/components-examples/cdk/table');
        case 'cdk-table-flex-basic':
            return import('@angular/components-examples/cdk/table');
        case 'cdk-table-recycle-rows':
            return import('@angular/components-examples/cdk/table');
        case 'text-field-autofill-directive':
            return import('@angular/components-examples/cdk/text-field');
        case 'text-field-autofill-monitor':
            return import('@angular/components-examples/cdk/text-field');
        case 'text-field-autosize-textarea':
            return import('@angular/components-examples/cdk/text-field');
        case 'cdk-tree-flat':
            return import('@angular/components-examples/cdk/tree');
        case 'cdk-tree-nested':
            return import('@angular/components-examples/cdk/tree');
        case 'default-enabled-column-resize-flex':
            return import('@angular/components-examples/material-experimental/column-resize');
        case 'default-enabled-column-resize':
            return import('@angular/components-examples/material-experimental/column-resize');
        case 'opt-in-column-resize':
            return import('@angular/components-examples/material-experimental/column-resize');
        case 'popover-edit-cell-span-mat-table':
            return import('@angular/components-examples/material-experimental/popover-edit');
        case 'popover-edit-mat-table-flex':
            return import('@angular/components-examples/material-experimental/popover-edit');
        case 'popover-edit-mat-table':
            return import('@angular/components-examples/material-experimental/popover-edit');
        case 'popover-edit-tab-out-mat-table':
            return import('@angular/components-examples/material-experimental/popover-edit');
        case 'mat-selection-column':
            return import('@angular/components-examples/material-experimental/selection');
        case 'mat-selection-list':
            return import('@angular/components-examples/material-experimental/selection');
        case 'autocomplete-auto-active-first-option':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-display':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-filter':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-harness':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-optgroup':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-overview':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-plain-input':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-require-selection':
            return import('@angular/components-examples/material/autocomplete');
        case 'autocomplete-simple':
            return import('@angular/components-examples/material/autocomplete');
        case 'badge-harness':
            return import('@angular/components-examples/material/badge');
        case 'badge-overview':
            return import('@angular/components-examples/material/badge');
        case 'bottom-sheet-harness':
            return import('@angular/components-examples/material/bottom-sheet');
        case 'bottom-sheet-overview':
            return import('@angular/components-examples/material/bottom-sheet');
        case 'button-toggle-appearance':
            return import('@angular/components-examples/material/button-toggle');
        case 'button-toggle-forms':
            return import('@angular/components-examples/material/button-toggle');
        case 'button-toggle-harness':
            return import('@angular/components-examples/material/button-toggle');
        case 'button-toggle-mode':
            return import('@angular/components-examples/material/button-toggle');
        case 'button-toggle-overview':
            return import('@angular/components-examples/material/button-toggle');
        case 'button-disabled-interactive':
            return import('@angular/components-examples/material/button');
        case 'button-harness':
            return import('@angular/components-examples/material/button');
        case 'button-overview':
            return import('@angular/components-examples/material/button');
        case 'card-actions':
            return import('@angular/components-examples/material/card');
        case 'card-fancy':
            return import('@angular/components-examples/material/card');
        case 'card-footer':
            return import('@angular/components-examples/material/card');
        case 'card-harness':
            return import('@angular/components-examples/material/card');
        case 'card-media-size':
            return import('@angular/components-examples/material/card');
        case 'card-overview':
            return import('@angular/components-examples/material/card');
        case 'checkbox-configurable':
            return import('@angular/components-examples/material/checkbox');
        case 'checkbox-harness':
            return import('@angular/components-examples/material/checkbox');
        case 'checkbox-overview':
            return import('@angular/components-examples/material/checkbox');
        case 'checkbox-reactive-forms':
            return import('@angular/components-examples/material/checkbox');
        case 'chips-autocomplete':
            return import('@angular/components-examples/material/chips');
        case 'chips-avatar':
            return import('@angular/components-examples/material/chips');
        case 'chips-drag-drop':
            return import('@angular/components-examples/material/chips');
        case 'chips-form-control':
            return import('@angular/components-examples/material/chips');
        case 'chips-harness':
            return import('@angular/components-examples/material/chips');
        case 'chips-input':
            return import('@angular/components-examples/material/chips');
        case 'chips-overview':
            return import('@angular/components-examples/material/chips');
        case 'chips-stacked':
            return import('@angular/components-examples/material/chips');
        case 'elevation-overview':
            return import('@angular/components-examples/material/core');
        case 'ripple-overview':
            return import('@angular/components-examples/material/core');
        case 'date-range-picker-comparison':
            return import('@angular/components-examples/material/datepicker');
        case 'date-range-picker-forms':
            return import('@angular/components-examples/material/datepicker');
        case 'date-range-picker-overview':
            return import('@angular/components-examples/material/datepicker');
        case 'date-range-picker-selection-strategy':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-actions':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-api':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-custom-header':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-custom-icon':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-date-class':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-disabled':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-events':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-filter':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-formats':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-harness':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-inline-calendar':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-locale':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-min-max':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-moment':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-overview':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-start-view':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-touch':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-value':
            return import('@angular/components-examples/material/datepicker');
        case 'datepicker-views-selection':
            return import('@angular/components-examples/material/datepicker');
        case 'dialog-animations':
            return import('@angular/components-examples/material/dialog');
        case 'dialog-content':
            return import('@angular/components-examples/material/dialog');
        case 'dialog-data':
            return import('@angular/components-examples/material/dialog');
        case 'dialog-elements':
            return import('@angular/components-examples/material/dialog');
        case 'dialog-from-menu':
            return import('@angular/components-examples/material/dialog');
        case 'dialog-harness':
            return import('@angular/components-examples/material/dialog');
        case 'dialog-overview':
            return import('@angular/components-examples/material/dialog');
        case 'divider-harness':
            return import('@angular/components-examples/material/divider');
        case 'divider-overview':
            return import('@angular/components-examples/material/divider');
        case 'expansion-expand-collapse-all':
            return import('@angular/components-examples/material/expansion');
        case 'expansion-harness':
            return import('@angular/components-examples/material/expansion');
        case 'expansion-overview':
            return import('@angular/components-examples/material/expansion');
        case 'expansion-steps':
            return import('@angular/components-examples/material/expansion');
        case 'form-field-appearance':
            return import('@angular/components-examples/material/form-field');
        case 'form-field-custom-control':
            return import('@angular/components-examples/material/form-field');
        case 'form-field-error':
            return import('@angular/components-examples/material/form-field');
        case 'form-field-harness':
            return import('@angular/components-examples/material/form-field');
        case 'form-field-hint':
            return import('@angular/components-examples/material/form-field');
        case 'form-field-label':
            return import('@angular/components-examples/material/form-field');
        case 'form-field-overview':
            return import('@angular/components-examples/material/form-field');
        case 'form-field-prefix-suffix':
            return import('@angular/components-examples/material/form-field');
        case 'grid-list-dynamic':
            return import('@angular/components-examples/material/grid-list');
        case 'grid-list-harness':
            return import('@angular/components-examples/material/grid-list');
        case 'grid-list-overview':
            return import('@angular/components-examples/material/grid-list');
        case 'icon-harness':
            return import('@angular/components-examples/material/icon');
        case 'icon-overview':
            return import('@angular/components-examples/material/icon');
        case 'icon-svg':
            return import('@angular/components-examples/material/icon');
        case 'input-clearable':
            return import('@angular/components-examples/material/input');
        case 'input-error-state-matcher':
            return import('@angular/components-examples/material/input');
        case 'input-errors':
            return import('@angular/components-examples/material/input');
        case 'input-form':
            return import('@angular/components-examples/material/input');
        case 'input-harness':
            return import('@angular/components-examples/material/input');
        case 'input-hint':
            return import('@angular/components-examples/material/input');
        case 'input-overview':
            return import('@angular/components-examples/material/input');
        case 'input-prefix-suffix':
            return import('@angular/components-examples/material/input');
        case 'list-harness':
            return import('@angular/components-examples/material/list');
        case 'list-overview':
            return import('@angular/components-examples/material/list');
        case 'list-sections':
            return import('@angular/components-examples/material/list');
        case 'list-selection':
            return import('@angular/components-examples/material/list');
        case 'list-single-selection':
            return import('@angular/components-examples/material/list');
        case 'list-variants':
            return import('@angular/components-examples/material/list');
        case 'menu-harness':
            return import('@angular/components-examples/material/menu');
        case 'menu-icons':
            return import('@angular/components-examples/material/menu');
        case 'menu-nested':
            return import('@angular/components-examples/material/menu');
        case 'menu-overview':
            return import('@angular/components-examples/material/menu');
        case 'menu-position':
            return import('@angular/components-examples/material/menu');
        case 'paginator-configurable':
            return import('@angular/components-examples/material/paginator');
        case 'paginator-harness':
            return import('@angular/components-examples/material/paginator');
        case 'paginator-intl':
            return import('@angular/components-examples/material/paginator');
        case 'paginator-overview':
            return import('@angular/components-examples/material/paginator');
        case 'progress-bar-buffer':
            return import('@angular/components-examples/material/progress-bar');
        case 'progress-bar-configurable':
            return import('@angular/components-examples/material/progress-bar');
        case 'progress-bar-determinate':
            return import('@angular/components-examples/material/progress-bar');
        case 'progress-bar-harness':
            return import('@angular/components-examples/material/progress-bar');
        case 'progress-bar-indeterminate':
            return import('@angular/components-examples/material/progress-bar');
        case 'progress-bar-query':
            return import('@angular/components-examples/material/progress-bar');
        case 'progress-spinner-configurable':
            return import('@angular/components-examples/material/progress-spinner');
        case 'progress-spinner-harness':
            return import('@angular/components-examples/material/progress-spinner');
        case 'progress-spinner-overview':
            return import('@angular/components-examples/material/progress-spinner');
        case 'radio-harness':
            return import('@angular/components-examples/material/radio');
        case 'radio-ng-model':
            return import('@angular/components-examples/material/radio');
        case 'radio-overview':
            return import('@angular/components-examples/material/radio');
        case 'select-custom-trigger':
            return import('@angular/components-examples/material/select');
        case 'select-disabled':
            return import('@angular/components-examples/material/select');
        case 'select-error-state-matcher':
            return import('@angular/components-examples/material/select');
        case 'select-form':
            return import('@angular/components-examples/material/select');
        case 'select-harness':
            return import('@angular/components-examples/material/select');
        case 'select-hint-error':
            return import('@angular/components-examples/material/select');
        case 'select-initial-value':
            return import('@angular/components-examples/material/select');
        case 'select-multiple':
            return import('@angular/components-examples/material/select');
        case 'select-no-ripple':
            return import('@angular/components-examples/material/select');
        case 'select-optgroup':
            return import('@angular/components-examples/material/select');
        case 'select-overview':
            return import('@angular/components-examples/material/select');
        case 'select-panel-class':
            return import('@angular/components-examples/material/select');
        case 'select-reactive-form':
            return import('@angular/components-examples/material/select');
        case 'select-reset':
            return import('@angular/components-examples/material/select');
        case 'select-value-binding':
            return import('@angular/components-examples/material/select');
        case 'sidenav-autosize':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-backdrop':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-configurable-focus-trap':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-disable-close':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-drawer-overview':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-fixed':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-harness':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-mode':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-open-close':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-overview':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-position':
            return import('@angular/components-examples/material/sidenav');
        case 'sidenav-responsive':
            return import('@angular/components-examples/material/sidenav');
        case 'slide-toggle-configurable':
            return import('@angular/components-examples/material/slide-toggle');
        case 'slide-toggle-forms':
            return import('@angular/components-examples/material/slide-toggle');
        case 'slide-toggle-harness':
            return import('@angular/components-examples/material/slide-toggle');
        case 'slide-toggle-overview':
            return import('@angular/components-examples/material/slide-toggle');
        case 'slider-configurable':
            return import('@angular/components-examples/material/slider');
        case 'slider-formatting':
            return import('@angular/components-examples/material/slider');
        case 'slider-harness':
            return import('@angular/components-examples/material/slider');
        case 'slider-overview':
            return import('@angular/components-examples/material/slider');
        case 'slider-range':
            return import('@angular/components-examples/material/slider');
        case 'snack-bar-annotated-component':
            return import('@angular/components-examples/material/snack-bar');
        case 'snack-bar-component':
            return import('@angular/components-examples/material/snack-bar');
        case 'snack-bar-harness':
            return import('@angular/components-examples/material/snack-bar');
        case 'snack-bar-overview':
            return import('@angular/components-examples/material/snack-bar');
        case 'snack-bar-position':
            return import('@angular/components-examples/material/snack-bar');
        case 'sort-harness':
            return import('@angular/components-examples/material/sort');
        case 'sort-overview':
            return import('@angular/components-examples/material/sort');
        case 'stepper-animations':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-editable':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-errors':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-harness':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-header-position':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-intl':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-label-position-bottom':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-lazy-content':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-optional':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-overview':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-responsive':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-states':
            return import('@angular/components-examples/material/stepper');
        case 'stepper-vertical':
            return import('@angular/components-examples/material/stepper');
        case 'table-basic':
            return import('@angular/components-examples/material/table');
        case 'table-column-styling':
            return import('@angular/components-examples/material/table');
        case 'table-dynamic-array-data':
            return import('@angular/components-examples/material/table');
        case 'table-dynamic-columns':
            return import('@angular/components-examples/material/table');
        case 'table-dynamic-observable-data':
            return import('@angular/components-examples/material/table');
        case 'table-expandable-rows':
            return import('@angular/components-examples/material/table');
        case 'table-filtering':
            return import('@angular/components-examples/material/table');
        case 'table-flex-basic':
            return import('@angular/components-examples/material/table');
        case 'table-flex-large-row':
            return import('@angular/components-examples/material/table');
        case 'table-footer-row':
            return import('@angular/components-examples/material/table');
        case 'table-generated-columns':
            return import('@angular/components-examples/material/table');
        case 'table-harness':
            return import('@angular/components-examples/material/table');
        case 'table-http':
            return import('@angular/components-examples/material/table');
        case 'table-multiple-header-footer':
            return import('@angular/components-examples/material/table');
        case 'table-overview':
            return import('@angular/components-examples/material/table');
        case 'table-pagination':
            return import('@angular/components-examples/material/table');
        case 'table-recycle-rows':
            return import('@angular/components-examples/material/table');
        case 'table-reorderable':
            return import('@angular/components-examples/material/table');
        case 'table-row-binding':
            return import('@angular/components-examples/material/table');
        case 'table-row-context':
            return import('@angular/components-examples/material/table');
        case 'table-selection':
            return import('@angular/components-examples/material/table');
        case 'table-sorting':
            return import('@angular/components-examples/material/table');
        case 'table-sticky-columns':
            return import('@angular/components-examples/material/table');
        case 'table-sticky-complex-flex':
            return import('@angular/components-examples/material/table');
        case 'table-sticky-complex':
            return import('@angular/components-examples/material/table');
        case 'table-sticky-footer':
            return import('@angular/components-examples/material/table');
        case 'table-sticky-header':
            return import('@angular/components-examples/material/table');
        case 'table-text-column-advanced':
            return import('@angular/components-examples/material/table');
        case 'table-text-column':
            return import('@angular/components-examples/material/table');
        case 'table-with-ripples':
            return import('@angular/components-examples/material/table');
        case 'table-wrapped':
            return import('@angular/components-examples/material/table');
        case 'tab-group-align':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-animations':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-async':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-basic':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-custom-label':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-dynamic-height':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-dynamic':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-harness':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-header-below':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-ink-bar':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-inverted':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-lazy-loaded':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-paginated':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-preserve-content':
            return import('@angular/components-examples/material/tabs');
        case 'tab-group-stretched':
            return import('@angular/components-examples/material/tabs');
        case 'tab-nav-bar-basic':
            return import('@angular/components-examples/material/tabs');
        case 'toolbar-basic':
            return import('@angular/components-examples/material/toolbar');
        case 'toolbar-harness':
            return import('@angular/components-examples/material/toolbar');
        case 'toolbar-multirow':
            return import('@angular/components-examples/material/toolbar');
        case 'toolbar-overview':
            return import('@angular/components-examples/material/toolbar');
        case 'toolbar-simple':
            return import('@angular/components-examples/material/toolbar');
        case 'tooltip-auto-hide':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-custom-class':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-delay':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-disabled':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-harness':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-manual':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-message':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-modified-defaults':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-overview':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-position-at-origin':
            return import('@angular/components-examples/material/tooltip');
        case 'tooltip-position':
            return import('@angular/components-examples/material/tooltip');
        case 'tree-dynamic':
            return import('@angular/components-examples/material/tree');
        case 'tree-flat-overview':
            return import('@angular/components-examples/material/tree');
        case 'tree-harness':
            return import('@angular/components-examples/material/tree');
        case 'tree-loadmore':
            return import('@angular/components-examples/material/tree');
        case 'tree-nested-overview':
            return import('@angular/components-examples/material/tree');
        default:
            return undefined;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhhbXBsZS1tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9leGFtcGxlLW1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBcUJILE1BQU0sQ0FBQyxNQUFNLGtCQUFrQixHQUFnQztJQUM3RCxpQ0FBaUMsRUFBRTtRQUNqQyxhQUFhLEVBQUUsK0RBQStEO1FBQzlFLE9BQU8sRUFBRSx1Q0FBdUM7UUFDaEQsZUFBZSxFQUFFLG1DQUFtQztRQUNwRCxPQUFPLEVBQUU7WUFDUCw0Q0FBNEM7WUFDNUMsOENBQThDO1lBQzlDLDZDQUE2QztTQUM5QztRQUNELFVBQVUsRUFBRSx5Q0FBeUM7UUFDckQsc0JBQXNCLEVBQUUsRUFBRTtRQUMxQixhQUFhLEVBQUUsNENBQTRDO1FBQzNELFlBQVksRUFBRSwrQkFBK0I7S0FDOUM7SUFDRCw0QkFBNEIsRUFBRTtRQUM1QixhQUFhLEVBQUUsMERBQTBEO1FBQ3pFLE9BQU8sRUFBRSxzQ0FBc0M7UUFDL0MsZUFBZSxFQUFFLCtCQUErQjtRQUNoRCxPQUFPLEVBQUU7WUFDUCx1Q0FBdUM7WUFDdkMseUNBQXlDO1lBQ3pDLHdDQUF3QztTQUN6QztRQUNELFVBQVUsRUFBRSxvQ0FBb0M7UUFDaEQsc0JBQXNCLEVBQUUsRUFBRTtRQUMxQixhQUFhLEVBQUUsdUNBQXVDO1FBQ3RELFlBQVksRUFBRSwrQkFBK0I7S0FDOUM7SUFDRCwwQ0FBMEMsRUFBRTtRQUMxQyxhQUFhLEVBQUUsd0VBQXdFO1FBQ3ZGLE9BQU8sRUFBRSxrRUFBa0U7UUFDM0UsZUFBZSxFQUFFLDJDQUEyQztRQUM1RCxPQUFPLEVBQUU7WUFDUCxxREFBcUQ7WUFDckQsdURBQXVEO1lBQ3ZELHNEQUFzRDtTQUN2RDtRQUNELFVBQVUsRUFBRSxrREFBa0Q7UUFDOUQsc0JBQXNCLEVBQUUsRUFBRTtRQUMxQixhQUFhLEVBQUUscURBQXFEO1FB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LENBQUM7UUFDN0QsS0FBSyxpQkFBaUI7WUFDeEIsT0FBTyxNQUFNLENBQUMsK0NBQStDLENBQUMsQ0FBQztRQUM3RCxLQUFLLGdCQUFnQjtZQUN2QixPQUFPLE1BQU0sQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO1FBQzdELEtBQUssaUJBQWlCO1lBQ3hCLE9BQU8sTUFBTSxDQUFDLCtDQUErQyxDQUFDLENBQUM7UUFDN0QsS0FBSywyQkFBMkI7WUFDbEMsT0FBTyxNQUFNLENBQUMsK0NBQStDLENBQUMsQ0FBQztRQUM3RCxLQUFLLGtCQUFrQjtZQUN6QixPQUFPLE1BQU0sQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDO1FBQzdELEtBQUssNEJBQTRCO1lBQ25DLE9BQU8sTUFBTSxDQUFDLCtDQUErQyxDQUFDLENBQUM7UUFDN0QsS0FBSyxrQkFBa0I7WUFDekIsT0FBTyxNQUFNLENBQUMsK0NBQStDLENBQUMsQ0FBQztRQUM3RCxLQUFLLGNBQWM7WUFDckIsT0FBTyxNQUFNLENBQUMsNENBQTRDLENBQUMsQ0FBQztRQUMxRCxLQUFLLG9CQUFvQjtZQUMzQixPQUFPLE1BQU0sQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO1FBQzFELEtBQUssY0FBYztZQUNyQixPQUFPLE1BQU0sQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO1FBQzFELEtBQUssZUFBZTtZQUN0QixPQUFPLE1BQU0sQ0FBQyw0Q0FBNEMsQ0FBQyxDQUFDO1FBQzFELEtBQUssc0JBQXNCO1lBQzdCLE9BQU8sTUFBTSxDQUFDLDRDQUE0QyxDQUFDLENBQUM7UUFDeEQ7WUFDSixPQUFPLFNBQVMsQ0FBQztJQUNmLENBQUM7QUFDSCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqXG4gKiBETyBOT1QgTUFOVUFMTFkgRURJVCBUSElTIEZJTEUuIFRISVMgRklMRSBJUyBBVVRPTUFUSUNBTExZIEdFTkVSQVRFRC5cbiAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqL1xuXG5leHBvcnQgaW50ZXJmYWNlIExpdmVFeGFtcGxlIHtcbiAgLyoqIFRpdGxlIG9mIHRoZSBleGFtcGxlLiAqL1xuICB0aXRsZTogc3RyaW5nO1xuICAvKiogTmFtZSBvZiB0aGUgZXhhbXBsZSBjb21wb25lbnQuICovXG4gIGNvbXBvbmVudE5hbWU6IHN0cmluZztcbiAgLyoqIFNlbGVjdG9yIHRvIG1hdGNoIHRoZSBjb21wb25lbnQgb2YgdGhpcyBleGFtcGxlLiAqL1xuICBzZWxlY3Rvcjogc3RyaW5nO1xuICAvKiogTmFtZSBvZiB0aGUgcHJpbWFyeSBmaWxlIG9mIHRoaXMgZXhhbXBsZS4gKi9cbiAgcHJpbWFyeUZpbGU6IHN0cmluZztcbiAgLyoqIExpc3Qgb2YgZmlsZXMgd2hpY2ggYXJlIHBhcnQgb2YgdGhlIGV4YW1wbGUuICovXG4gIGZpbGVzOiBzdHJpbmdbXTtcbiAgLyoqIFBhdGggdG8gdGhlIGRpcmVjdG9yeSBjb250YWluaW5nIHRoZSBleGFtcGxlLiAqL1xuICBwYWNrYWdlUGF0aDogc3RyaW5nO1xuICAvKiogTGlzdCBvZiBhZGRpdGlvbmFsIGNvbXBvbmVudHMgd2hpY2ggYXJlIHBhcnQgb2YgdGhlIGV4YW1wbGUuICovXG4gIGFkZGl0aW9uYWxDb21wb25lbnRzOiBzdHJpbmdbXTtcbiAgLyoqIFBhdGggZnJvbSB3aGljaCB0byBpbXBvcnQgdGhlIHhhbXBsZS4gKi9cbiAgaW1wb3J0UGF0aDogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgRVhBTVBMRV9DT01QT05FTlRTOiB7W2lkOiBzdHJpbmddOiBMaXZlRXhhbXBsZX0gPSB7XG4gIFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZmxleFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0L2Nkay1wb3BvdmVyLWVkaXQtY2RrLXRhYmxlLWZsZXhcIixcbiAgICBcInRpdGxlXCI6IFwiQ0RLIFBvcG92ZXIgRWRpdCBvbiBhIGZsZXggY2RrLXRhYmxlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1BvcG92ZXJFZGl0Q2RrVGFibGVGbGV4RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1mbGV4LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZmxleC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZmxleC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZmxleC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZmxleC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXRcIlxuICB9LFxuICBcImNkay1wb3BvdmVyLWVkaXQtY2RrLXRhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQvY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ0RLIFBvcG92ZXIgRWRpdCBvbiBhIENESyBkYXRhLXRhYmxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrUG9wb3ZlckVkaXRDZGtUYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1wb3BvdmVyLWVkaXQtY2RrLXRhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstcG9wb3Zlci1lZGl0LWNkay10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXRcIlxuICB9LFxuICBcImNkay1wb3BvdmVyLWVkaXQtY2VsbC1zcGFuLXZhbmlsbGEtdGFibGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGstZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdC9jZGstcG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi12YW5pbGxhLXRhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNESyBQb3BvdmVyIEVkaXQgc3Bhbm5pbmcgbXVsdGlwbGUgY29sdW1ucyBvbiBhbiBIVE1MIGRhdGEtdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtQb3BvdmVyRWRpdENlbGxTcGFuVmFuaWxsYVRhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi12YW5pbGxhLXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC1jZWxsLXNwYW4tdmFuaWxsYS10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC1jZWxsLXNwYW4tdmFuaWxsYS10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXBvcG92ZXItZWRpdC1jZWxsLXNwYW4tdmFuaWxsYS10YWJsZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXBvcG92ZXItZWRpdC1jZWxsLXNwYW4tdmFuaWxsYS10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXRcIlxuICB9LFxuICBcImNkay1wb3BvdmVyLWVkaXQtdGFiLW91dC12YW5pbGxhLXRhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQvY2RrLXBvcG92ZXItZWRpdC10YWItb3V0LXZhbmlsbGEtdGFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ0RLIFBvcG92ZXIgRWRpdCB3aXRoIHNwcmVhZHNoZWV0LWxpa2UgY29uZmlndXJhdGlvbiBvbiBhbiBIVE1MIGRhdGEtdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtQb3BvdmVyRWRpdFRhYk91dFZhbmlsbGFUYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC10YWItb3V0LXZhbmlsbGEtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LXRhYi1vdXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXBvcG92ZXItZWRpdC10YWItb3V0LXZhbmlsbGEtdGFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1wb3BvdmVyLWVkaXQtdGFiLW91dC12YW5pbGxhLXRhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstcG9wb3Zlci1lZGl0LXRhYi1vdXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXRcIlxuICB9LFxuICBcImNkay1wb3BvdmVyLWVkaXQtdmFuaWxsYS10YWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0L2Nkay1wb3BvdmVyLWVkaXQtdmFuaWxsYS10YWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJDREsgUG9wb3ZlciBFZGl0IG9uIGFuIEhUTUwgZGF0YS10YWJsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1BvcG92ZXJFZGl0VmFuaWxsYVRhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LXZhbmlsbGEtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstcG9wb3Zlci1lZGl0LXZhbmlsbGEtdGFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1wb3BvdmVyLWVkaXQtdmFuaWxsYS10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXBvcG92ZXItZWRpdC12YW5pbGxhLXRhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstcG9wb3Zlci1lZGl0LXZhbmlsbGEtdGFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgfSxcbiAgXCJjZGstc2VsZWN0aW9uLWNvbHVtblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvc2VsZWN0aW9uL2Nkay1zZWxlY3Rpb24tY29sdW1uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNESyBTZWxlY3Rpb24gQ29sdW1uIG9uIGEgQ0RLIHRhYmxlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1NlbGVjdGlvbkNvbHVtbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXNlbGVjdGlvbi1jb2x1bW4tZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXNlbGVjdGlvbi1jb2x1bW4tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1zZWxlY3Rpb24tY29sdW1uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrLWV4cGVyaW1lbnRhbC9zZWxlY3Rpb25cIlxuICB9LFxuICBcImNkay1zZWxlY3Rpb24tbGlzdFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvc2VsZWN0aW9uL2Nkay1zZWxlY3Rpb24tbGlzdFwiLFxuICAgIFwidGl0bGVcIjogXCJDREsgU2VsZWN0aW9uIG9uIGEgc2ltcGxlIGxpc3QuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrU2VsZWN0aW9uTGlzdEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXNlbGVjdGlvbi1saXN0LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXNlbGVjdGlvbi1saXN0LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXNlbGVjdGlvbi1saXN0LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstc2VsZWN0aW9uLWxpc3QtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay1leHBlcmltZW50YWwvc2VsZWN0aW9uXCJcbiAgfSxcbiAgXCJmb2N1cy1tb25pdG9yLWRpcmVjdGl2ZXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvYTExeS9mb2N1cy1tb25pdG9yLWRpcmVjdGl2ZXNcIixcbiAgICBcInRpdGxlXCI6IFwiTW9uaXRvcmluZyBmb2N1cyB3aXRoIEZvY3VzTW9uaXRvclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkZvY3VzTW9uaXRvckRpcmVjdGl2ZXNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvY3VzLW1vbml0b3ItZGlyZWN0aXZlcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvY3VzLW1vbml0b3ItZGlyZWN0aXZlcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9jdXMtbW9uaXRvci1kaXJlY3RpdmVzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb2N1cy1tb25pdG9yLWRpcmVjdGl2ZXMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvY3VzLW1vbml0b3ItZGlyZWN0aXZlcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2ExMXlcIlxuICB9LFxuICBcImZvY3VzLW1vbml0b3ItZm9jdXMtdmlhXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2ExMXkvZm9jdXMtbW9uaXRvci1mb2N1cy12aWFcIixcbiAgICBcInRpdGxlXCI6IFwiRm9jdXNpbmcgd2l0aCBhIHNwZWNpZmljIEZvY3VzT3JpZ2luXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9jdXNNb25pdG9yRm9jdXNWaWFFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvY3VzLW1vbml0b3ItZm9jdXMtdmlhLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZm9jdXMtbW9uaXRvci1mb2N1cy12aWEtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImZvY3VzLW1vbml0b3ItZm9jdXMtdmlhLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb2N1cy1tb25pdG9yLWZvY3VzLXZpYS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZm9jdXMtbW9uaXRvci1mb2N1cy12aWEtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9hMTF5XCJcbiAgfSxcbiAgXCJmb2N1cy1tb25pdG9yLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2ExMXkvZm9jdXMtbW9uaXRvci1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJNb25pdG9yaW5nIGZvY3VzIHdpdGggRm9jdXNNb25pdG9yXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9jdXNNb25pdG9yT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvY3VzLW1vbml0b3Itb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJmb2N1cy1tb25pdG9yLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJmb2N1cy1tb25pdG9yLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb2N1cy1tb25pdG9yLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJmb2N1cy1tb25pdG9yLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvYTExeVwiXG4gIH0sXG4gIFwiY2RrLWFjY29yZGlvbi1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9hY2NvcmRpb24vY2RrLWFjY29yZGlvbi1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJBY2NvcmRpb24gb3ZlcnZpZXdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtBY2NvcmRpb25PdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWFjY29yZGlvbi1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1hY2NvcmRpb24tb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1hY2NvcmRpb24tb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1hY2NvcmRpb24tb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1hY2NvcmRpb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9hY2NvcmRpb25cIlxuICB9LFxuICBcImNkay1jbGlwYm9hcmQtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvY2xpcGJvYXJkL2Nkay1jbGlwYm9hcmQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQ2xpcGJvYXJkIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrQ2xpcGJvYXJkT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1jbGlwYm9hcmQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstY2xpcGJvYXJkLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstY2xpcGJvYXJkLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstY2xpcGJvYXJkLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstY2xpcGJvYXJkLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvY2xpcGJvYXJkXCJcbiAgfSxcbiAgXCJjZGstZGlhbG9nLWRhdGFcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZGlhbG9nL2Nkay1kaWFsb2ctZGF0YVwiLFxuICAgIFwidGl0bGVcIjogXCJJbmplY3RpbmcgZGF0YSB3aGVuIG9wZW5pbmcgYSBkaWFsb2dcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEaWFsb2dEYXRhRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZGlhbG9nLWRhdGEtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZGlhbG9nLWRhdGEtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kaWFsb2ctZGF0YS1leGFtcGxlLWRpYWxvZy5odG1sXCIsXG4gICAgICBcIi4vY2RrLWRpYWxvZy1kYXRhLWV4YW1wbGUtZGlhbG9nLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRpYWxvZy1kYXRhLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQ2RrRGlhbG9nRGF0YUV4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kaWFsb2ctZGF0YS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RpYWxvZ1wiXG4gIH0sXG4gIFwiY2RrLWRpYWxvZy1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kaWFsb2cvY2RrLWRpYWxvZy1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJDREsgRGlhbG9nIE92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRGlhbG9nT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmh0bWxcIixcbiAgICAgIFwiY2RrLWRpYWxvZy1vdmVydmlldy1leGFtcGxlLWRpYWxvZy5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJDZGtEaWFsb2dPdmVydmlld0V4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kaWFsb2ctb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9kaWFsb2dcIlxuICB9LFxuICBcImNkay1kaWFsb2ctc3R5bGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kaWFsb2cvY2RrLWRpYWxvZy1zdHlsaW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNESyBEaWFsb2cgU3R5bGluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RpYWxvZ1N0eWxpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kaWFsb2ctc3R5bGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kaWFsb2ctc3R5bGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRpYWxvZy1zdHlsaW5nLWV4YW1wbGUtZGlhbG9nLmh0bWxcIixcbiAgICAgIFwiY2RrLWRpYWxvZy1zdHlsaW5nLWV4YW1wbGUtZGlhbG9nLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRpYWxvZy1zdHlsaW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQ2RrRGlhbG9nU3R5bGluZ0V4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kaWFsb2ctc3R5bGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RpYWxvZ1wiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1heGlzLWxvY2tcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtYXhpcy1sb2NrXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBwb3NpdGlvbiBsb2NraW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BBeGlzTG9ja0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1heGlzLWxvY2stZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWF4aXMtbG9jay1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1heGlzLWxvY2stZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3AtYXhpcy1sb2NrLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLWF4aXMtbG9jay1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1ib3VuZGFyeVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1ib3VuZGFyeVwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3AgYm91bmRhcnlcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcEJvdW5kYXJ5RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWJvdW5kYXJ5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1ib3VuZGFyeS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1ib3VuZGFyeS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1ib3VuZGFyeS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1ib3VuZGFyeS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1ncm91cFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1ncm91cFwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3AgY29ubmVjdGVkIHNvcnRpbmcgZ3JvdXBcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcENvbm5lY3RlZFNvcnRpbmdHcm91cEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1ncm91cC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmctZ3JvdXAtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmctZ3JvdXAtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmctZ3JvdXAtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmctZ3JvdXAtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9kcmFnLWRyb3BcIlxuICB9LFxuICBcImNkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmdcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIGNvbm5lY3RlZCBzb3J0aW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BDb25uZWN0ZWRTb3J0aW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWNvbm5lY3RlZC1zb3J0aW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1jb25uZWN0ZWQtc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcGxhY2Vob2xkZXJcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtY3VzdG9tLXBsYWNlaG9sZGVyXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBjdXN0b20gcGxhY2Vob2xkZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcEN1c3RvbVBsYWNlaG9sZGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWN1c3RvbS1wbGFjZWhvbGRlci1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXBsYWNlaG9sZGVyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWN1c3RvbS1wbGFjZWhvbGRlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcGxhY2Vob2xkZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXBsYWNlaG9sZGVyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWN1c3RvbS1wcmV2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLWN1c3RvbS1wcmV2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBjdXN0b20gcHJldmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wQ3VzdG9tUHJldmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1jdXN0b20tcHJldmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXByZXZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXByZXZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXByZXZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtY3VzdG9tLXByZXZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9kcmFnLWRyb3BcIlxuICB9LFxuICBcImNkay1kcmFnLWRyb3AtZGVsYXlcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtZGVsYXlcIixcbiAgICBcInRpdGxlXCI6IFwiRGVsYXllZCBkcmFnZ2luZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wRGVsYXlFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGVsYXktZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWRlbGF5LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWRlbGF5LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLWRlbGF5LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLWRlbGF5LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWRpc2FibGVkLXNvcnRpbmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtZGlzYWJsZWQtc29ydGluZ1wiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3AgZGlzYWJsZWQgc29ydGluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wRGlzYWJsZWRTb3J0aW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWRpc2FibGVkLXNvcnRpbmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWRpc2FibGVkLXNvcnRpbmctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtc29ydGluZy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1zb3J0aW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLWRpc2FibGVkLXNvcnRpbmctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9kcmFnLWRyb3BcIlxuICB9LFxuICBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtZGlzYWJsZWRcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIGRpc2FibGVkXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BEaXNhYmxlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1kaXNhYmxlZC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtZGlzYWJsZWQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9kcmFnLWRyb3BcIlxuICB9LFxuICBcImNkay1kcmFnLWRyb3AtZW50ZXItcHJlZGljYXRlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLWVudGVyLXByZWRpY2F0ZVwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3AgZW50ZXIgcHJlZGljYXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BFbnRlclByZWRpY2F0ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1lbnRlci1wcmVkaWNhdGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWVudGVyLXByZWRpY2F0ZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1lbnRlci1wcmVkaWNhdGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3AtZW50ZXItcHJlZGljYXRlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLWVudGVyLXByZWRpY2F0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1mcmVlLWRyYWctcG9zaXRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtZnJlZS1kcmFnLXBvc2l0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlByb2dyYW1tYXRpY2FsbHkgc2V0dGluZyB0aGUgZnJlZSBkcmFnIHBvc2l0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BGcmVlRHJhZ1Bvc2l0aW9uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWZyZWUtZHJhZy1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtZnJlZS1kcmFnLXBvc2l0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWZyZWUtZHJhZy1wb3NpdGlvbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1mcmVlLWRyYWctcG9zaXRpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtZnJlZS1kcmFnLXBvc2l0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLWhhbmRsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1oYW5kbGVcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIHdpdGggYSBoYW5kbGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcEhhbmRsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1oYW5kbGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWhhbmRsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1oYW5kbGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1kcmFnLWRyb3AtaGFuZGxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLWhhbmRsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1ob3Jpem9udGFsLXNvcnRpbmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3AtaG9yaXpvbnRhbC1zb3J0aW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRyYWcmRHJvcCBob3Jpem9udGFsIHNvcnRpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcEhvcml6b250YWxTb3J0aW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLWhvcml6b250YWwtc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3AtaG9yaXpvbnRhbC1zb3J0aW5nLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLWhvcml6b250YWwtc29ydGluZy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1ob3Jpem9udGFsLXNvcnRpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3AtaG9yaXpvbnRhbC1zb3J0aW5nLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIERyYWcmRHJvcFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3Atb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstZHJhZy1kcm9wLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstZHJhZy1kcm9wLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvZHJhZy1kcm9wXCJcbiAgfSxcbiAgXCJjZGstZHJhZy1kcm9wLXJvb3QtZWxlbWVudFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC1yb290LWVsZW1lbnRcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIHdpdGggYWx0ZXJuYXRlIHJvb3QgZWxlbWVudFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0RyYWdEcm9wUm9vdEVsZW1lbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3Atcm9vdC1lbGVtZW50LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1yb290LWVsZW1lbnQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3Atcm9vdC1lbGVtZW50LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLXJvb3QtZWxlbWVudC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1yb290LWVsZW1lbnQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9kcmFnLWRyb3BcIlxuICB9LFxuICBcImNkay1kcmFnLWRyb3Atc29ydC1wcmVkaWNhdGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvZHJhZy1kcm9wL2Nkay1kcmFnLWRyb3Atc29ydC1wcmVkaWNhdGVcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIHNvcnQgcHJlZGljYXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrRHJhZ0Ryb3BTb3J0UHJlZGljYXRlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLXNvcnQtcHJlZGljYXRlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1zb3J0LXByZWRpY2F0ZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1zb3J0LXByZWRpY2F0ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC1zb3J0LXByZWRpY2F0ZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC1zb3J0LXByZWRpY2F0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC1zb3J0aW5nXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2RyYWctZHJvcC9jZGstZHJhZy1kcm9wLXNvcnRpbmdcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhZyZEcm9wIHNvcnRpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcFNvcnRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1kcmFnLWRyb3Atc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1kcmFnLWRyb3Atc29ydGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC1zb3J0aW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstZHJhZy1kcm9wLXNvcnRpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1kcmFnLWRyb3Atc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiY2RrLWRyYWctZHJvcC10YWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9kcmFnLWRyb3AvY2RrLWRyYWctZHJvcC10YWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJEcmFnJkRyb3AgdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtEcmFnRHJvcFRhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstZHJhZy1kcm9wLXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWRyYWctZHJvcC10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWRyYWctZHJvcC10YWJsZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWRyYWctZHJvcC10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2RyYWctZHJvcFwiXG4gIH0sXG4gIFwiYnJlYWtwb2ludC1vYnNlcnZlci1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9sYXlvdXQvYnJlYWtwb2ludC1vYnNlcnZlci1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJSZXNwb25kIHRvIHZpZXdwb3J0IGNoYW5nZXMgd2l0aCBCcmVha3BvaW50T2JzZXJ2ZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCcmVha3BvaW50T2JzZXJ2ZXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnJlYWtwb2ludC1vYnNlcnZlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImJyZWFrcG9pbnQtb2JzZXJ2ZXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJyZWFrcG9pbnQtb2JzZXJ2ZXItb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJyZWFrcG9pbnQtb2JzZXJ2ZXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImJyZWFrcG9pbnQtb2JzZXJ2ZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9sYXlvdXRcIlxuICB9LFxuICBcImNkay1saXN0Ym94LWFjdGl2ZWRlc2NlbmRhbnRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvbGlzdGJveC9jZGstbGlzdGJveC1hY3RpdmVkZXNjZW5kYW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Rib3ggd2l0aCBhcmlhLWFjdGl2ZWRlc2NlbmRhbnQuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTGlzdGJveEFjdGl2ZWRlc2NlbmRhbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1saXN0Ym94LWFjdGl2ZWRlc2NlbmRhbnQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC1hY3RpdmVkZXNjZW5kYW50LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbGlzdGJveC1hY3RpdmVkZXNjZW5kYW50LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbGlzdGJveC1hY3RpdmVkZXNjZW5kYW50LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC1hY3RpdmVkZXNjZW5kYW50LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvbGlzdGJveFwiXG4gIH0sXG4gIFwiY2RrLWxpc3Rib3gtY29tcGFyZS13aXRoXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2xpc3Rib3gvY2RrLWxpc3Rib3gtY29tcGFyZS13aXRoXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Rib3ggd2l0aCBjb21wbGV4IG9iamVjdCBhcyB2YWx1ZXMuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTGlzdGJveENvbXBhcmVXaXRoRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbGlzdGJveC1jb21wYXJlLXdpdGgtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC1jb21wYXJlLXdpdGgtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1saXN0Ym94LWNvbXBhcmUtd2l0aC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWxpc3Rib3gtY29tcGFyZS13aXRoLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC1jb21wYXJlLXdpdGgtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9saXN0Ym94XCJcbiAgfSxcbiAgXCJjZGstbGlzdGJveC1jdXN0b20tbmF2aWdhdGlvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9saXN0Ym94L2Nkay1saXN0Ym94LWN1c3RvbS1uYXZpZ2F0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Rib3ggd2l0aCBjdXN0b20ga2V5Ym9hcmQgbmF2aWdhdGlvbiBvcHRpb25zLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0xpc3Rib3hDdXN0b21OYXZpZ2F0aW9uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbGlzdGJveC1jdXN0b20tbmF2aWdhdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1saXN0Ym94LWN1c3RvbS1uYXZpZ2F0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbGlzdGJveC1jdXN0b20tbmF2aWdhdGlvbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLWxpc3Rib3gtY3VzdG9tLW5hdmlnYXRpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1saXN0Ym94LWN1c3RvbS1uYXZpZ2F0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvbGlzdGJveFwiXG4gIH0sXG4gIFwiY2RrLWxpc3Rib3gtY3VzdG9tLXR5cGVhaGVhZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9saXN0Ym94L2Nkay1saXN0Ym94LWN1c3RvbS10eXBlYWhlYWRcIixcbiAgICBcInRpdGxlXCI6IFwiTGlzdGJveCB3aXRoIGN1c3RvbSB0eXBlYWhlYWQuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTGlzdGJveEN1c3RvbVR5cGVhaGVhZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWxpc3Rib3gtY3VzdG9tLXR5cGVhaGVhZC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1saXN0Ym94LWN1c3RvbS10eXBlYWhlYWQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1saXN0Ym94LWN1c3RvbS10eXBlYWhlYWQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1saXN0Ym94LWN1c3RvbS10eXBlYWhlYWQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1saXN0Ym94LWN1c3RvbS10eXBlYWhlYWQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9saXN0Ym94XCJcbiAgfSxcbiAgXCJjZGstbGlzdGJveC1kaXNhYmxlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9saXN0Ym94L2Nkay1saXN0Ym94LWRpc2FibGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Rib3ggd2l0aCBkaXNhYmxlZCBvcHRpb25zLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0xpc3Rib3hEaXNhYmxlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWxpc3Rib3gtZGlzYWJsZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC1kaXNhYmxlZC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWxpc3Rib3gtZGlzYWJsZWQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1saXN0Ym94LWRpc2FibGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC1kaXNhYmxlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2xpc3Rib3hcIlxuICB9LFxuICBcImNkay1saXN0Ym94LWZvcm1zLXZhbGlkYXRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvbGlzdGJveC9jZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Rib3ggd2l0aCBmb3JtcyB2YWxpZGF0aW9uLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0xpc3Rib3hGb3Jtc1ZhbGlkYXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1saXN0Ym94LWZvcm1zLXZhbGlkYXRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvbGlzdGJveFwiXG4gIH0sXG4gIFwiY2RrLWxpc3Rib3gtaG9yaXpvbnRhbFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9saXN0Ym94L2Nkay1saXN0Ym94LWhvcml6b250YWxcIixcbiAgICBcInRpdGxlXCI6IFwiSG9yaXpvbnRhbCBsaXN0Ym94XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTGlzdGJveEhvcml6b250YWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1saXN0Ym94LWhvcml6b250YWwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC1ob3Jpem9udGFsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbGlzdGJveC1ob3Jpem9udGFsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbGlzdGJveC1ob3Jpem9udGFsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC1ob3Jpem9udGFsLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvbGlzdGJveFwiXG4gIH0sXG4gIFwiY2RrLWxpc3Rib3gtbXVsdGlwbGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvbGlzdGJveC9jZGstbGlzdGJveC1tdWx0aXBsZVwiLFxuICAgIFwidGl0bGVcIjogXCJMaXN0Ym94IHdpdGggbXVsdGlwbGUgc2VsZWN0aW9uLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0xpc3Rib3hNdWx0aXBsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWxpc3Rib3gtbXVsdGlwbGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC1tdWx0aXBsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWxpc3Rib3gtbXVsdGlwbGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1saXN0Ym94LW11bHRpcGxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC1tdWx0aXBsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2xpc3Rib3hcIlxuICB9LFxuICBcImNkay1saXN0Ym94LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2xpc3Rib3gvY2RrLWxpc3Rib3gtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgbGlzdGJveC5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtMaXN0Ym94T3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1saXN0Ym94LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLWxpc3Rib3gtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1saXN0Ym94LW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbGlzdGJveC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWxpc3Rib3gtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9saXN0Ym94XCJcbiAgfSxcbiAgXCJjZGstbGlzdGJveC1yZWFjdGl2ZS1mb3Jtc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9saXN0Ym94L2Nkay1saXN0Ym94LXJlYWN0aXZlLWZvcm1zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Rib3ggd2l0aCByZWFjdGl2ZSBmb3Jtcy5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtMaXN0Ym94UmVhY3RpdmVGb3Jtc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWxpc3Rib3gtcmVhY3RpdmUtZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC1yZWFjdGl2ZS1mb3Jtcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWxpc3Rib3gtcmVhY3RpdmUtZm9ybXMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1saXN0Ym94LXJlYWN0aXZlLWZvcm1zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC1yZWFjdGl2ZS1mb3Jtcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2xpc3Rib3hcIlxuICB9LFxuICBcImNkay1saXN0Ym94LXRlbXBsYXRlLWZvcm1zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL2xpc3Rib3gvY2RrLWxpc3Rib3gtdGVtcGxhdGUtZm9ybXNcIixcbiAgICBcInRpdGxlXCI6IFwiTGlzdGJveCB3aXRoIHRlbXBsYXRlLWRyaXZlbiBmb3Jtcy5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtMaXN0Ym94VGVtcGxhdGVGb3Jtc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLWxpc3Rib3gtdGVtcGxhdGUtZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC10ZW1wbGF0ZS1mb3Jtcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLWxpc3Rib3gtdGVtcGxhdGUtZm9ybXMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1saXN0Ym94LXRlbXBsYXRlLWZvcm1zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC10ZW1wbGF0ZS1mb3Jtcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL2xpc3Rib3hcIlxuICB9LFxuICBcImNkay1saXN0Ym94LXZhbHVlLWJpbmRpbmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvbGlzdGJveC9jZGstbGlzdGJveC12YWx1ZS1iaW5kaW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Rib3ggd2l0aCB2YWx1ZSBiaW5kaW5nLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka0xpc3Rib3hWYWx1ZUJpbmRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1saXN0Ym94LXZhbHVlLWJpbmRpbmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbGlzdGJveC12YWx1ZS1iaW5kaW5nLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbGlzdGJveC12YWx1ZS1iaW5kaW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbGlzdGJveC12YWx1ZS1iaW5kaW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbGlzdGJveC12YWx1ZS1iaW5kaW5nLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvbGlzdGJveFwiXG4gIH0sXG4gIFwiY2RrLW1lbnUtY29udGV4dFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9tZW51L2Nkay1tZW51LWNvbnRleHRcIixcbiAgICBcInRpdGxlXCI6IFwiQ29udGV4dCBtZW51LlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka01lbnVDb250ZXh0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbWVudS1jb250ZXh0LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLW1lbnUtY29udGV4dC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLW1lbnUtY29udGV4dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLW1lbnUtY29udGV4dC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLW1lbnUtY29udGV4dC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL21lbnVcIlxuICB9LFxuICBcImNkay1tZW51LWlubGluZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9tZW51L2Nkay1tZW51LWlubGluZVwiLFxuICAgIFwidGl0bGVcIjogXCJHbWFpbCBpbmxpbmUgbWVudS5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtNZW51SW5saW5lRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbWVudS1pbmxpbmUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbWVudS1pbmxpbmUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1tZW51LWlubGluZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLW1lbnUtaW5saW5lLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbWVudS1pbmxpbmUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9tZW51XCJcbiAgfSxcbiAgXCJjZGstbWVudS1tZW51YmFyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL21lbnUvY2RrLW1lbnUtbWVudWJhclwiLFxuICAgIFwidGl0bGVcIjogXCJHb29nbGUgRG9jcyBNZW51IEJhci5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtNZW51TWVudWJhckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLW1lbnUtbWVudWJhci1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1tZW51LW1lbnViYXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1tZW51LW1lbnViYXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1tZW51LW1lbnViYXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1tZW51LW1lbnViYXItZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9tZW51XCJcbiAgfSxcbiAgXCJjZGstbWVudS1uZXN0ZWQtY29udGV4dFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9tZW51L2Nkay1tZW51LW5lc3RlZC1jb250ZXh0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIk5lc3RlZCBjb250ZXh0IG1lbnVzLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka01lbnVOZXN0ZWRDb250ZXh0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbWVudS1uZXN0ZWQtY29udGV4dC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1tZW51LW5lc3RlZC1jb250ZXh0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbWVudS1uZXN0ZWQtY29udGV4dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLW1lbnUtbmVzdGVkLWNvbnRleHQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1tZW51LW5lc3RlZC1jb250ZXh0LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvbWVudVwiXG4gIH0sXG4gIFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1tZW51XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL21lbnUvY2RrLW1lbnUtc3RhbmRhbG9uZS1tZW51XCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1lbnUgd2l0aCBTdGFuZGFsb25lIFRyaWdnZXIuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTWVudVN0YW5kYWxvbmVNZW51RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbWVudS1zdGFuZGFsb25lLW1lbnUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstbWVudS1zdGFuZGFsb25lLW1lbnUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay1tZW51LXN0YW5kYWxvbmUtbWVudS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1tZW51LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstbWVudS1zdGFuZGFsb25lLW1lbnUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9tZW51XCJcbiAgfSxcbiAgXCJjZGstbWVudS1zdGFuZGFsb25lLXN0YXRlZnVsLW1lbnVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvbWVudS9jZGstbWVudS1zdGFuZGFsb25lLXN0YXRlZnVsLW1lbnVcIixcbiAgICBcInRpdGxlXCI6IFwiU3RhdGVmdWwgTWVudSB3aXRoIFN0YW5kYWxvbmUgVHJpZ2dlci5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtNZW51U3RhbmRhbG9uZVN0YXRlZnVsTWVudUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1zdGF0ZWZ1bC1tZW51LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1zdGF0ZWZ1bC1tZW51LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstbWVudS1zdGFuZGFsb25lLXN0YXRlZnVsLW1lbnUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1tZW51LXN0YW5kYWxvbmUtc3RhdGVmdWwtbWVudS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLW1lbnUtc3RhbmRhbG9uZS1zdGF0ZWZ1bC1tZW51LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvbWVudVwiXG4gIH0sXG4gIFwiY2RrLW92ZXJsYXktYmFzaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvb3ZlcmxheS9jZGstb3ZlcmxheS1iYXNpY1wiLFxuICAgIFwidGl0bGVcIjogXCJPdmVybGF5IGJhc2ljIGV4YW1wbGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtPdmVybGF5QmFzaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1vdmVybGF5LWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi9jZGstb3ZlcmxheS1iYXNpYy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiLi9jZGstb3ZlcmxheS1iYXNpYy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLW92ZXJsYXktYmFzaWMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay1vdmVybGF5LWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvb3ZlcmxheVwiXG4gIH0sXG4gIFwiY2RrLXBsYXRmb3JtLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3BsYXRmb3JtL2Nkay1wbGF0Zm9ybS1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJQbGF0Zm9ybSBvdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1BsYXRmb3JtT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1wbGF0Zm9ybS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay1wbGF0Zm9ybS1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay1wbGF0Zm9ybS1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXBsYXRmb3JtLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvcGxhdGZvcm1cIlxuICB9LFxuICBcImNkay1wb3J0YWwtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvcG9ydGFsL2Nkay1wb3J0YWwtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiUG9ydGFsIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrUG9ydGFsT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1wb3J0YWwtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstcG9ydGFsLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstcG9ydGFsLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstcG9ydGFsLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQ29tcG9uZW50UG9ydGFsRXhhbXBsZVwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXBvcnRhbC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3BvcnRhbFwiXG4gIH0sXG4gIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWFwcGVuZC1vbmx5XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3Njcm9sbGluZy9jZGstdmlydHVhbC1zY3JvbGwtYXBwZW5kLW9ubHlcIixcbiAgICBcInRpdGxlXCI6IFwiVmlydHVhbCBzY3JvbGwgd2l0aCB2aWV3IHJlY3ljbGluZyBkaXNhYmxlZC5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsQXBwZW5kT25seUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWFwcGVuZC1vbmx5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWFwcGVuZC1vbmx5LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtYXBwZW5kLW9ubHktZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1hcHBlbmQtb25seS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWFwcGVuZC1vbmx5LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtY29udGV4dFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLWNvbnRleHRcIixcbiAgICBcInRpdGxlXCI6IFwiVmlydHVhbCBzY3JvbGwgY29udGV4dCB2YXJpYWJsZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsQ29udGV4dEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWNvbnRleHQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtY29udGV4dC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWNvbnRleHQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1jb250ZXh0LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtY29udGV4dC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3Njcm9sbGluZ1wiXG4gIH0sXG4gIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneVwiLFxuICAgIFwidGl0bGVcIjogXCJWaXJ0dWFsIHNjcm9sbCB3aXRoIGEgY3VzdG9tIHN0cmF0ZWd5XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVmlydHVhbFNjcm9sbEN1c3RvbVN0cmF0ZWd5RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtY3VzdG9tLXN0cmF0ZWd5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWN1c3RvbS1zdHJhdGVneS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3Njcm9sbGluZ1wiXG4gIH0sXG4gIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRhdGEtc291cmNlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3Njcm9sbGluZy9jZGstdmlydHVhbC1zY3JvbGwtZGF0YS1zb3VyY2VcIixcbiAgICBcInRpdGxlXCI6IFwiVmlydHVhbCBzY3JvbGwgd2l0aCBhIGN1c3RvbSBkYXRhIHNvdXJjZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1ZpcnR1YWxTY3JvbGxEYXRhU291cmNlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZGF0YS1zb3VyY2UtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZGF0YS1zb3VyY2UtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1kYXRhLXNvdXJjZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRhdGEtc291cmNlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtZGF0YS1zb3VyY2UtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay9zY3JvbGxpbmdcIlxuICB9LFxuICBcImNkay12aXJ0dWFsLXNjcm9sbC1kbFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLWRsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlZpcnR1YWwgc2Nyb2xsaW5nIGA8ZGw+YFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1ZpcnR1YWxTY3JvbGxEbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRsLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZGwtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1kbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWRsLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3Njcm9sbGluZy9jZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZpeGVkIHNpemUgdmlydHVhbCBzY3JvbGwgd2l0aCBjdXN0b20gYnVmZmVyIHBhcmFtZXRlcnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsRml4ZWRCdWZmZXJFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1maXhlZC1idWZmZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtZml4ZWQtYnVmZmVyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtaG9yaXpvbnRhbFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLWhvcml6b250YWxcIixcbiAgICBcInRpdGxlXCI6IFwiSG9yaXpvbnRhbCB2aXJ0dWFsIHNjcm9sbFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1ZpcnR1YWxTY3JvbGxIb3Jpem9udGFsRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtaG9yaXpvbnRhbC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1ob3Jpem9udGFsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtaG9yaXpvbnRhbC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLWhvcml6b250YWwtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1ob3Jpem9udGFsLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nL2Nkay12aXJ0dWFsLXNjcm9sbC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyB2aXJ0dWFsIHNjcm9sbFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1ZpcnR1YWxTY3JvbGxPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtcGFyZW50LXNjcm9sbGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLXBhcmVudC1zY3JvbGxpbmdcIixcbiAgICBcInRpdGxlXCI6IFwiVmlydHVhbCBzY3JvbGxpbmcgdmlld3BvcnQgcGFyZW50IGVsZW1lbnRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsUGFyZW50U2Nyb2xsaW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtcGFyZW50LXNjcm9sbGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay12aXJ0dWFsLXNjcm9sbC1wYXJlbnQtc2Nyb2xsaW5nLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtcGFyZW50LXNjcm9sbGluZy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXBhcmVudC1zY3JvbGxpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC1wYXJlbnQtc2Nyb2xsaW5nLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtdGVtcGxhdGUtY2FjaGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nL2Nkay12aXJ0dWFsLXNjcm9sbC10ZW1wbGF0ZS1jYWNoZVwiLFxuICAgIFwidGl0bGVcIjogXCJWaXJ0dWFsIHNjcm9sbCB3aXRoIG5vIHRlbXBsYXRlIGNhY2hpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtWaXJ0dWFsU2Nyb2xsVGVtcGxhdGVDYWNoZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXRlbXBsYXRlLWNhY2hlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXRlbXBsYXRlLWNhY2hlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtdGVtcGxhdGUtY2FjaGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC10ZW1wbGF0ZS1jYWNoZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXRlbXBsYXRlLWNhY2hlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvc2Nyb2xsaW5nXCJcbiAgfSxcbiAgXCJjZGstdmlydHVhbC1zY3JvbGwtd2luZG93LXNjcm9sbGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zY3JvbGxpbmcvY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmdcIixcbiAgICBcInRpdGxlXCI6IFwiVmlydHVhbCBzY3JvbGxpbmcgd2luZG93XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVmlydHVhbFNjcm9sbFdpbmRvd1Njcm9sbGluZ0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdmlydHVhbC1zY3JvbGwtd2luZG93LXNjcm9sbGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay12aXJ0dWFsLXNjcm9sbC13aW5kb3ctc2Nyb2xsaW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdmlydHVhbC1zY3JvbGwtd2luZG93LXNjcm9sbGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3Njcm9sbGluZ1wiXG4gIH0sXG4gIFwiY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay9zdGVwcGVyL2Nkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm1cIixcbiAgICBcInRpdGxlXCI6IFwiQSBjdXN0b20gQ0RLIHN0ZXBwZXIgd2l0aG91dCBhIGZvcm1cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtDdXN0b21TdGVwcGVyV2l0aG91dEZvcm1FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL2Nkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm0tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS1leGFtcGxlLmNzc1wiLFxuICAgICAgXCIuL2V4YW1wbGUtY3VzdG9tLXN0ZXBwZXIuaHRtbFwiLFxuICAgICAgXCIuL2V4YW1wbGUtY3VzdG9tLXN0ZXBwZXIuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstY3VzdG9tLXN0ZXBwZXItd2l0aG91dC1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQ3VzdG9tU3RlcHBlclwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWN1c3RvbS1zdGVwcGVyLXdpdGhvdXQtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3N0ZXBwZXJcIlxuICB9LFxuICBcImNkay1saW5lYXItc3RlcHBlci13aXRoLWZvcm1cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvc3RlcHBlci9jZGstbGluZWFyLXN0ZXBwZXItd2l0aC1mb3JtXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkEgY3VzdG9tIENESyBsaW5lYXIgc3RlcHBlciB3aXRoIGZvcm1zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrTGluZWFyU3RlcHBlcldpdGhGb3JtRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstbGluZWFyLXN0ZXBwZXItd2l0aC1mb3JtLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi9jZGstbGluZWFyLXN0ZXBwZXItd2l0aC1mb3JtLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCIuL2Nkay1saW5lYXItc3RlcHBlci13aXRoLWZvcm0tZXhhbXBsZS5jc3NcIixcbiAgICAgIFwiLi9leGFtcGxlLWN1c3RvbS1saW5lYXItc3RlcHBlci5odG1sXCIsXG4gICAgICBcIi4vZXhhbXBsZS1jdXN0b20tbGluZWFyLXN0ZXBwZXIuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstbGluZWFyLXN0ZXBwZXItd2l0aC1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQ3VzdG9tTGluZWFyU3RlcHBlclwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLWxpbmVhci1zdGVwcGVyLXdpdGgtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3N0ZXBwZXJcIlxuICB9LFxuICBcImNkay10YWJsZS1iYXNpY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90YWJsZS9jZGstdGFibGUtYmFzaWNcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgQ0RLIGRhdGEtdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtUYWJsZUJhc2ljRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdGFibGUtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdGFibGUtYmFzaWMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay10YWJsZS1iYXNpYy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXRhYmxlLWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdGFibGUtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay90YWJsZVwiXG4gIH0sXG4gIFwiY2RrLXRhYmxlLWZpeGVkLWxheW91dFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90YWJsZS9jZGstdGFibGUtZml4ZWQtbGF5b3V0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNESyB0YWJsZSB3aXRoIGEgZml4ZWQgbGF5b3V0LlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1RhYmxlRml4ZWRMYXlvdXRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNkay10YWJsZS1maXhlZC1sYXlvdXQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdGFibGUtZml4ZWQtbGF5b3V0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdGFibGUtZml4ZWQtbGF5b3V0LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjZGstdGFibGUtZml4ZWQtbGF5b3V0LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdGFibGUtZml4ZWQtbGF5b3V0LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvdGFibGVcIlxuICB9LFxuICBcImNkay10YWJsZS1mbGV4LWJhc2ljXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3RhYmxlL2Nkay10YWJsZS1mbGV4LWJhc2ljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHVzZSBvZiBgPGNkay10YWJsZT5gICh1c2VzIGRpc3BsYXkgZmxleClcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDZGtUYWJsZUZsZXhCYXNpY0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjZGstdGFibGUtZmxleC1iYXNpYy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay10YWJsZS1mbGV4LWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjZGstdGFibGUtZmxleC1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3RhYmxlXCJcbiAgfSxcbiAgXCJjZGstdGFibGUtcmVjeWNsZS1yb3dzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3RhYmxlL2Nkay10YWJsZS1yZWN5Y2xlLXJvd3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgdGhhdCB1c2VzIHRoZSByZWN5Y2xlIHZpZXcgcmVwZWF0ZXIgc3RyYXRlZ3kuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVGFibGVSZWN5Y2xlUm93c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXRhYmxlLXJlY3ljbGUtcm93cy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNkay10YWJsZS1yZWN5Y2xlLXJvd3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNkay10YWJsZS1yZWN5Y2xlLXJvd3MtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay10YWJsZS1yZWN5Y2xlLXJvd3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNkay10YWJsZS1yZWN5Y2xlLXJvd3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay90YWJsZVwiXG4gIH0sXG4gIFwidGV4dC1maWVsZC1hdXRvZmlsbC1kaXJlY3RpdmVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvdGV4dC1maWVsZC90ZXh0LWZpZWxkLWF1dG9maWxsLWRpcmVjdGl2ZVwiLFxuICAgIFwidGl0bGVcIjogXCJNb25pdG9yaW5nIGF1dG9maWxsIHN0YXRlIHdpdGggY2RrQXV0b2ZpbGxcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUZXh0RmllbGRBdXRvZmlsbERpcmVjdGl2ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGV4dC1maWVsZC1hdXRvZmlsbC1kaXJlY3RpdmUtZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL3RleHQtZmllbGQtYXV0b2ZpbGwtZGlyZWN0aXZlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCIuL3RleHQtZmllbGQtYXV0b2ZpbGwtZGlyZWN0aXZlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0ZXh0LWZpZWxkLWF1dG9maWxsLWRpcmVjdGl2ZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGV4dC1maWVsZC1hdXRvZmlsbC1kaXJlY3RpdmUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay90ZXh0LWZpZWxkXCJcbiAgfSxcbiAgXCJ0ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3JcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvdGV4dC1maWVsZC90ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3JcIixcbiAgICBcInRpdGxlXCI6IFwiTW9uaXRvcmluZyBhdXRvZmlsbCBzdGF0ZSB3aXRoIEF1dG9maWxsTW9uaXRvclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRleHRGaWVsZEF1dG9maWxsTW9uaXRvckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGV4dC1maWVsZC1hdXRvZmlsbC1tb25pdG9yLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi90ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3ItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vdGV4dC1maWVsZC1hdXRvZmlsbC1tb25pdG9yLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0ZXh0LWZpZWxkLWF1dG9maWxsLW1vbml0b3ItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRleHQtZmllbGQtYXV0b2ZpbGwtbW9uaXRvci1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3RleHQtZmllbGRcIlxuICB9LFxuICBcInRleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWFcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJjZGsvdGV4dC1maWVsZC90ZXh0LWZpZWxkLWF1dG9zaXplLXRleHRhcmVhXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkF1dG8tcmVzaXppbmcgdGV4dGFyZWFcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUZXh0RmllbGRBdXRvc2l6ZVRleHRhcmVhRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0ZXh0LWZpZWxkLWF1dG9zaXplLXRleHRhcmVhLWV4YW1wbGUudHNcIixcbiAgICAgIFwiLi90ZXh0LWZpZWxkLWF1dG9zaXplLXRleHRhcmVhLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCIuL3RleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWEtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWEtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWEtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcImNkay90ZXh0LWZpZWxkXCJcbiAgfSxcbiAgXCJjZGstdHJlZS1mbGF0XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwiY2RrL3RyZWUvY2RrLXRyZWUtZmxhdFwiLFxuICAgIFwidGl0bGVcIjogXCJUcmVlIHdpdGggZmxhdCBub2Rlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNka1RyZWVGbGF0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjZGstdHJlZS1mbGF0LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXRyZWUtZmxhdC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2RrLXRyZWUtZmxhdC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2RrLXRyZWUtZmxhdC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXRyZWUtZmxhdC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwiY2RrL3RyZWVcIlxuICB9LFxuICBcImNkay10cmVlLW5lc3RlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcImNkay90cmVlL2Nkay10cmVlLW5lc3RlZFwiLFxuICAgIFwidGl0bGVcIjogXCJUcmVlIHdpdGggbmVzdGVkIG5vZGVzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2RrVHJlZU5lc3RlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2RrLXRyZWUtbmVzdGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2RrLXRyZWUtbmVzdGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjZGstdHJlZS1uZXN0ZWQtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNkay10cmVlLW5lc3RlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2RrLXRyZWUtbmVzdGVkLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJjZGsvdHJlZVwiXG4gIH0sXG4gIFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplL2RlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWZsZXhcIixcbiAgICBcInRpdGxlXCI6IFwiRGVmYXVsdC1lbmFibGVkIGNvbHVtbiByZXNpemUgd2l0aCBhIGZsZXgtYmFzZWQgbWF0LXRhYmxlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRlZmF1bHRFbmFibGVkQ29sdW1uUmVzaXplRmxleEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleC1leGFtcGxlLnRzXCIsXG4gICAgICBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWZsZXgtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWZsZXgtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWZsZXgtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWZsZXgtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplXCJcbiAgfSxcbiAgXCJkZWZhdWx0LWVuYWJsZWQtY29sdW1uLXJlc2l6ZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplL2RlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRlZmF1bHQtZW5hYmxlZCBjb2x1bW4gcmVzaXplIHdpdGggYSB0YWJsZS1iYXNlZCBtYXQtdGFibGUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGVmYXVsdEVuYWJsZWRDb2x1bW5SZXNpemVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkZWZhdWx0LWVuYWJsZWQtY29sdW1uLXJlc2l6ZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplXCJcbiAgfSxcbiAgXCJvcHQtaW4tY29sdW1uLXJlc2l6ZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplL29wdC1pbi1jb2x1bW4tcmVzaXplXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk9wdC1pbiBjb2x1bW4gcmVzaXplIHdpdGggYSB0YWJsZS1iYXNlZCBtYXQtdGFibGUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiT3B0SW5Db2x1bW5SZXNpemVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcIm9wdC1pbi1jb2x1bW4tcmVzaXplLWV4YW1wbGUudHNcIixcbiAgICAgIFwib3B0LWluLWNvbHVtbi1yZXNpemUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIm9wdC1pbi1jb2x1bW4tcmVzaXplLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJvcHQtaW4tY29sdW1uLXJlc2l6ZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwib3B0LWluLWNvbHVtbi1yZXNpemUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplXCJcbiAgfSxcbiAgXCJwb3BvdmVyLWVkaXQtY2VsbC1zcGFuLW1hdC10YWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQvcG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi1tYXQtdGFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiTWF0ZXJpYWwgUG9wb3ZlciBFZGl0IHNwYW5uaW5nIG11bHRpcGxlIGNvbHVtbnMgb24gYSBNYXRlcmlhbCBkYXRhLXRhYmxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUG9wb3ZlckVkaXRDZWxsU3Bhbk1hdFRhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwb3BvdmVyLWVkaXQtY2VsbC1zcGFuLW1hdC10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInBvcG92ZXItZWRpdC1jZWxsLXNwYW4tbWF0LXRhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJwb3BvdmVyLWVkaXQtY2VsbC1zcGFuLW1hdC10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwicG9wb3Zlci1lZGl0LWNlbGwtc3Bhbi1tYXQtdGFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInBvcG92ZXItZWRpdC1jZWxsLXNwYW4tbWF0LXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgfSxcbiAgXCJwb3BvdmVyLWVkaXQtbWF0LXRhYmxlLWZsZXhcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0L3BvcG92ZXItZWRpdC1tYXQtdGFibGUtZmxleFwiLFxuICAgIFwidGl0bGVcIjogXCJNYXRlcmlhbCBQb3BvdmVyIEVkaXQgb24gYSBmbGV4IE1hdGVyaWFsIGRhdGEtdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQb3BvdmVyRWRpdE1hdFRhYmxlRmxleEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1mbGV4LWV4YW1wbGUudHNcIixcbiAgICAgIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1mbGV4LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJwb3BvdmVyLWVkaXQtbWF0LXRhYmxlLWZsZXgtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInBvcG92ZXItZWRpdC1tYXQtdGFibGUtZmxleC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1mbGV4LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0XCJcbiAgfSxcbiAgXCJwb3BvdmVyLWVkaXQtbWF0LXRhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdC9wb3BvdmVyLWVkaXQtbWF0LXRhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1hdGVyaWFsIFBvcG92ZXIgRWRpdCBvbiBhIE1hdGVyaWFsIGRhdGEtdGFibGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQb3BvdmVyRWRpdE1hdFRhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwb3BvdmVyLWVkaXQtbWF0LXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICAgIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicG9wb3Zlci1lZGl0LW1hdC10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdFwiXG4gIH0sXG4gIFwicG9wb3Zlci1lZGl0LXRhYi1vdXQtbWF0LXRhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdC9wb3BvdmVyLWVkaXQtdGFiLW91dC1tYXQtdGFibGVcIixcbiAgICBcInRpdGxlXCI6IFwiTWF0ZXJpYWwgUG9wb3ZlciBFZGl0IHdpdGggc3ByZWFkc2hlZXQtbGlrZSBjb25maWd1cmF0aW9uIG9uIGEgTWF0ZXJpYWwgZGF0YS10YWJsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlBvcG92ZXJFZGl0VGFiT3V0TWF0VGFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInBvcG92ZXItZWRpdC10YWItb3V0LW1hdC10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInBvcG92ZXItZWRpdC10YWItb3V0LW1hdC10YWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicG9wb3Zlci1lZGl0LXRhYi1vdXQtbWF0LXRhYmxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwb3BvdmVyLWVkaXQtdGFiLW91dC1tYXQtdGFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInBvcG92ZXItZWRpdC10YWItb3V0LW1hdC10YWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdFwiXG4gIH0sXG4gIFwibWF0LXNlbGVjdGlvbi1jb2x1bW5cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvc2VsZWN0aW9uL21hdC1zZWxlY3Rpb24tY29sdW1uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHRoYXQgdXNlcyBgbWF0U2VsZWN0aW9uQ29sdW1uYCB3aGljaCBhbGxvd3MgdXNlcnMgdG8gc2VsZWN0IHJvd3MuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTWF0U2VsZWN0aW9uQ29sdW1uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJtYXQtc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLnRzXCIsXG4gICAgICBcIm1hdC1zZWxlY3Rpb24tY29sdW1uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJtYXQtc2VsZWN0aW9uLWNvbHVtbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibWF0LXNlbGVjdGlvbi1jb2x1bW4tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcIm1hdC1zZWxlY3Rpb24tY29sdW1uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvc2VsZWN0aW9uXCJcbiAgfSxcbiAgXCJtYXQtc2VsZWN0aW9uLWxpc3RcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC1leHBlcmltZW50YWwvc2VsZWN0aW9uL21hdC1zZWxlY3Rpb24tbGlzdFwiLFxuICAgIFwidGl0bGVcIjogXCJNYXQgU2VsZWN0aW9uIG9uIGEgc2ltcGxlIGxpc3QuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTWF0U2VsZWN0aW9uTGlzdEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibWF0LXNlbGVjdGlvbi1saXN0LWV4YW1wbGUudHNcIixcbiAgICAgIFwibWF0LXNlbGVjdGlvbi1saXN0LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibWF0LXNlbGVjdGlvbi1saXN0LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJtYXQtc2VsZWN0aW9uLWxpc3QtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsLWV4cGVyaW1lbnRhbC9zZWxlY3Rpb25cIlxuICB9LFxuICBcImF1dG9jb21wbGV0ZS1hdXRvLWFjdGl2ZS1maXJzdC1vcHRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLWF1dG8tYWN0aXZlLWZpcnN0LW9wdGlvblwiLFxuICAgIFwidGl0bGVcIjogXCJIaWdobGlnaHQgdGhlIGZpcnN0IGF1dG9jb21wbGV0ZSBvcHRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJBdXRvY29tcGxldGVBdXRvQWN0aXZlRmlyc3RPcHRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1hdXRvLWFjdGl2ZS1maXJzdC1vcHRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJhdXRvY29tcGxldGUtYXV0by1hY3RpdmUtZmlyc3Qtb3B0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGVcIlxuICB9LFxuICBcImF1dG9jb21wbGV0ZS1kaXNwbGF5XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS1kaXNwbGF5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRpc3BsYXkgdmFsdWUgYXV0b2NvbXBsZXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQXV0b2NvbXBsZXRlRGlzcGxheUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYXV0b2NvbXBsZXRlLWRpc3BsYXktZXhhbXBsZS50c1wiLFxuICAgICAgXCJhdXRvY29tcGxldGUtZGlzcGxheS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLWRpc3BsYXktZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImF1dG9jb21wbGV0ZS1kaXNwbGF5LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJhdXRvY29tcGxldGUtZGlzcGxheS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgfSxcbiAgXCJhdXRvY29tcGxldGUtZmlsdGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS1maWx0ZXJcIixcbiAgICBcInRpdGxlXCI6IFwiRmlsdGVyIGF1dG9jb21wbGV0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkF1dG9jb21wbGV0ZUZpbHRlckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYXV0b2NvbXBsZXRlLWZpbHRlci1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1maWx0ZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1maWx0ZXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImF1dG9jb21wbGV0ZS1maWx0ZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImF1dG9jb21wbGV0ZS1maWx0ZXItZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2F1dG9jb21wbGV0ZVwiXG4gIH0sXG4gIFwiYXV0b2NvbXBsZXRlLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEF1dG9jb21wbGV0ZUhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJBdXRvY29tcGxldGVIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJhdXRvY29tcGxldGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJhdXRvY29tcGxldGUtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImF1dG9jb21wbGV0ZS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJhdXRvY29tcGxldGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgfSxcbiAgXCJhdXRvY29tcGxldGUtb3B0Z3JvdXBcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLW9wdGdyb3VwXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk9wdGlvbiBncm91cHMgYXV0b2NvbXBsZXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQXV0b2NvbXBsZXRlT3B0Z3JvdXBFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1vcHRncm91cC1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1vcHRncm91cC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImF1dG9jb21wbGV0ZS1vcHRncm91cC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYXV0b2NvbXBsZXRlLW9wdGdyb3VwLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGVcIlxuICB9LFxuICBcImF1dG9jb21wbGV0ZS1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQXV0b2NvbXBsZXRlIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQXV0b2NvbXBsZXRlT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImF1dG9jb21wbGV0ZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgfSxcbiAgXCJhdXRvY29tcGxldGUtcGxhaW4taW5wdXRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLXBsYWluLWlucHV0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlBsYWluIGlucHV0IGF1dG9jb21wbGV0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkF1dG9jb21wbGV0ZVBsYWluSW5wdXRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1wbGFpbi1pbnB1dC1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1wbGFpbi1pbnB1dC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLXBsYWluLWlucHV0LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtcGxhaW4taW5wdXQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImF1dG9jb21wbGV0ZS1wbGFpbi1pbnB1dC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgfSxcbiAgXCJhdXRvY29tcGxldGUtcmVxdWlyZS1zZWxlY3Rpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLXJlcXVpcmUtc2VsZWN0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlJlcXVpcmUgYW4gYXV0b2NvbXBsZXRlIG9wdGlvbiB0byBiZSBzZWxlY3RlZFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkF1dG9jb21wbGV0ZVJlcXVpcmVTZWxlY3Rpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImF1dG9jb21wbGV0ZS1yZXF1aXJlLXNlbGVjdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1yZXF1aXJlLXNlbGVjdGlvbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYXV0b2NvbXBsZXRlLXJlcXVpcmUtc2VsZWN0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJhdXRvY29tcGxldGUtcmVxdWlyZS1zZWxlY3Rpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImF1dG9jb21wbGV0ZS1yZXF1aXJlLXNlbGVjdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlXCJcbiAgfSxcbiAgXCJhdXRvY29tcGxldGUtc2ltcGxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYXV0b2NvbXBsZXRlL2F1dG9jb21wbGV0ZS1zaW1wbGVcIixcbiAgICBcInRpdGxlXCI6IFwiU2ltcGxlIGF1dG9jb21wbGV0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkF1dG9jb21wbGV0ZVNpbXBsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYXV0b2NvbXBsZXRlLXNpbXBsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1zaW1wbGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImF1dG9jb21wbGV0ZS1zaW1wbGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImF1dG9jb21wbGV0ZS1zaW1wbGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImF1dG9jb21wbGV0ZS1zaW1wbGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2F1dG9jb21wbGV0ZVwiXG4gIH0sXG4gIFwiYmFkZ2UtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2JhZGdlL2JhZGdlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEJhZGdlSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJhZGdlSGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYmFkZ2UtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImJhZGdlLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJhZGdlLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJiYWRnZS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJiYWRnZS1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9iYWRnZVwiXG4gIH0sXG4gIFwiYmFkZ2Utb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9iYWRnZS9iYWRnZS1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYWRnZSBvdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJhZGdlT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJhZGdlLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYmFkZ2Utb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJhZGdlLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJiYWRnZS1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYmFkZ2Utb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2JhZGdlXCJcbiAgfSxcbiAgXCJib3R0b20tc2hlZXQtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2JvdHRvbS1zaGVldC9ib3R0b20tc2hlZXQtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0Qm90dG9tU2hlZXRIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQm90dG9tU2hlZXRIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJib3R0b20tc2hlZXQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImJvdHRvbS1zaGVldC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJib3R0b20tc2hlZXQtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJvdHRvbS1zaGVldC1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJib3R0b20tc2hlZXQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYm90dG9tLXNoZWV0XCJcbiAgfSxcbiAgXCJib3R0b20tc2hlZXQtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9ib3R0b20tc2hlZXQvYm90dG9tLXNoZWV0LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJvdHRvbSBTaGVldCBPdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJvdHRvbVNoZWV0T3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJvdHRvbS1zaGVldC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImJvdHRvbS1zaGVldC1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYm90dG9tLXNoZWV0LW92ZXJ2aWV3LWV4YW1wbGUtc2hlZXQuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYm90dG9tLXNoZWV0LW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiQm90dG9tU2hlZXRPdmVydmlld0V4YW1wbGVTaGVldFwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYm90dG9tLXNoZWV0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9ib3R0b20tc2hlZXRcIlxuICB9LFxuICBcImJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2J1dHRvbi10b2dnbGUvYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJ1dHRvbiB0b2dnbGUgYXBwZWFyYW5jZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkJ1dHRvblRvZ2dsZUFwcGVhcmFuY2VFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJidXR0b24tdG9nZ2xlLWFwcGVhcmFuY2UtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImJ1dHRvbi10b2dnbGUtYXBwZWFyYW5jZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZVwiXG4gIH0sXG4gIFwiYnV0dG9uLXRvZ2dsZS1mb3Jtc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2J1dHRvbi10b2dnbGUvYnV0dG9uLXRvZ2dsZS1mb3Jtc1wiLFxuICAgIFwidGl0bGVcIjogXCJCdXR0b24tdG9nZ2xlcyB3aXRoIGZvcm1zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQnV0dG9uVG9nZ2xlRm9ybXNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImJ1dHRvbi10b2dnbGUtZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJidXR0b24tdG9nZ2xlLWZvcm1zLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYnV0dG9uLXRvZ2dsZS1mb3Jtcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLXRvZ2dsZS1mb3Jtcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZVwiXG4gIH0sXG4gIFwiYnV0dG9uLXRvZ2dsZS1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZS9idXR0b24tdG9nZ2xlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEJ1dHRvblRvZ2dsZUhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25Ub2dnbGVIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJidXR0b24tdG9nZ2xlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJidXR0b24tdG9nZ2xlLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJ1dHRvbi10b2dnbGUtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi10b2dnbGUtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLXRvZ2dsZS1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlXCJcbiAgfSxcbiAgXCJidXR0b24tdG9nZ2xlLW1vZGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlL2J1dHRvbi10b2dnbGUtbW9kZVwiLFxuICAgIFwidGl0bGVcIjogXCJCdXR0b24gdG9nZ2xlIHNlbGVjdGlvbiBtb2RlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQnV0dG9uVG9nZ2xlTW9kZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1tb2RlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1tb2RlLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYnV0dG9uLXRvZ2dsZS1tb2RlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJidXR0b24tdG9nZ2xlLW1vZGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2J1dHRvbi10b2dnbGVcIlxuICB9LFxuICBcImJ1dHRvbi10b2dnbGUtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlL2J1dHRvbi10b2dnbGUtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgYnV0dG9uLXRvZ2dsZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25Ub2dnbGVPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnV0dG9uLXRvZ2dsZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImJ1dHRvbi10b2dnbGUtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJidXR0b24tdG9nZ2xlLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJidXR0b24tdG9nZ2xlLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24tdG9nZ2xlXCJcbiAgfSxcbiAgXCJidXR0b24tZGlzYWJsZWQtaW50ZXJhY3RpdmVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24vYnV0dG9uLWRpc2FibGVkLWludGVyYWN0aXZlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkludGVyYWN0aXZlIGRpc2FibGVkIGJ1dHRvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25EaXNhYmxlZEludGVyYWN0aXZlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJidXR0b24tZGlzYWJsZWQtaW50ZXJhY3RpdmUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJidXR0b24tZGlzYWJsZWQtaW50ZXJhY3RpdmUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImJ1dHRvbi1kaXNhYmxlZC1pbnRlcmFjdGl2ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiYnV0dG9uLWRpc2FibGVkLWludGVyYWN0aXZlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJidXR0b24tZGlzYWJsZWQtaW50ZXJhY3RpdmUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2J1dHRvblwiXG4gIH0sXG4gIFwiYnV0dG9uLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24vYnV0dG9uLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEJ1dHRvbkhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25IYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJidXR0b24taGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImJ1dHRvbi1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJidXR0b24taGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJidXR0b24taGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvYnV0dG9uXCJcbiAgfSxcbiAgXCJidXR0b24tb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9idXR0b24vYnV0dG9uLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGJ1dHRvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJCdXR0b25PdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiYnV0dG9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiYnV0dG9uLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJidXR0b24tb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImJ1dHRvbi1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiYnV0dG9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9idXR0b25cIlxuICB9LFxuICBcImNhcmQtYWN0aW9uc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NhcmQvY2FyZC1hY3Rpb25zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNhcmQgd2l0aCBhY3Rpb25zIGFsaWdubWVudCBvcHRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDYXJkQWN0aW9uc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2FyZC1hY3Rpb25zLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2FyZC1hY3Rpb25zLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1hY3Rpb25zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjYXJkLWFjdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NhcmRcIlxuICB9LFxuICBcImNhcmQtZmFuY3lcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jYXJkL2NhcmQtZmFuY3lcIixcbiAgICBcInRpdGxlXCI6IFwiQ2FyZCB3aXRoIG11bHRpcGxlIHNlY3Rpb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2FyZEZhbmN5RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjYXJkLWZhbmN5LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2FyZC1mYW5jeS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2FyZC1mYW5jeS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1mYW5jeS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2FyZC1mYW5jeS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvY2FyZFwiXG4gIH0sXG4gIFwiY2FyZC1mb290ZXJcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jYXJkL2NhcmQtZm9vdGVyXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNhcmQgd2l0aCBmb290ZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDYXJkRm9vdGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjYXJkLWZvb3Rlci1leGFtcGxlLnRzXCIsXG4gICAgICBcImNhcmQtZm9vdGVyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjYXJkLWZvb3Rlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1mb290ZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNhcmQtZm9vdGVyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9jYXJkXCJcbiAgfSxcbiAgXCJjYXJkLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jYXJkL2NhcmQtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0Q2FyZEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDYXJkSGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2FyZC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2FyZC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjYXJkLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjYXJkLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNhcmQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvY2FyZFwiXG4gIH0sXG4gIFwiY2FyZC1tZWRpYS1zaXplXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2FyZC9jYXJkLW1lZGlhLXNpemVcIixcbiAgICBcInRpdGxlXCI6IFwiQ2FyZCB3aXRoIG1lZGlhIHNpemVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDYXJkTWVkaWFTaXplRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjYXJkLW1lZGlhLXNpemUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjYXJkLW1lZGlhLXNpemUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNhcmQtbWVkaWEtc2l6ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1tZWRpYS1zaXplLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjYXJkLW1lZGlhLXNpemUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NhcmRcIlxuICB9LFxuICBcImNhcmQtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jYXJkL2NhcmQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgY2FyZHNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDYXJkT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNhcmQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJjYXJkLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2FyZC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2FyZC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvY2FyZFwiXG4gIH0sXG4gIFwiY2hlY2tib3gtY29uZmlndXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hlY2tib3gvY2hlY2tib3gtY29uZmlndXJhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNvbmZpZ3VyYWJsZSBjaGVja2JveFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNoZWNrYm94Q29uZmlndXJhYmxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGVja2JveC1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjaGVja2JveC1jb25maWd1cmFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoZWNrYm94LWNvbmZpZ3VyYWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hlY2tib3gtY29uZmlndXJhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjaGVja2JveC1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NoZWNrYm94XCJcbiAgfSxcbiAgXCJjaGVja2JveC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hlY2tib3gvY2hlY2tib3gtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0Q2hlY2tib3hIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hlY2tib3hIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGVja2JveC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hlY2tib3gtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hlY2tib3gtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNoZWNrYm94LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoZWNrYm94LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NoZWNrYm94XCJcbiAgfSxcbiAgXCJjaGVja2JveC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NoZWNrYm94L2NoZWNrYm94LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGNoZWNrYm94ZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGVja2JveE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGVja2JveC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImNoZWNrYm94LW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjaGVja2JveC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hlY2tib3gtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoZWNrYm94LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9jaGVja2JveFwiXG4gIH0sXG4gIFwiY2hlY2tib3gtcmVhY3RpdmUtZm9ybXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGVja2JveC9jaGVja2JveC1yZWFjdGl2ZS1mb3Jtc1wiLFxuICAgIFwidGl0bGVcIjogXCJDaGVja2JveGVzIHdpdGggcmVhY3RpdmUgZm9ybXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGVja2JveFJlYWN0aXZlRm9ybXNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNoZWNrYm94LXJlYWN0aXZlLWZvcm1zLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hlY2tib3gtcmVhY3RpdmUtZm9ybXMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoZWNrYm94LXJlYWN0aXZlLWZvcm1zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjaGVja2JveC1yZWFjdGl2ZS1mb3Jtcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hlY2tib3gtcmVhY3RpdmUtZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NoZWNrYm94XCJcbiAgfSxcbiAgXCJjaGlwcy1hdXRvY29tcGxldGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGlwcy9jaGlwcy1hdXRvY29tcGxldGVcIixcbiAgICBcInRpdGxlXCI6IFwiQ2hpcHMgQXV0b2NvbXBsZXRlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hpcHNBdXRvY29tcGxldGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNoaXBzLWF1dG9jb21wbGV0ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImNoaXBzLWF1dG9jb21wbGV0ZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hpcHMtYXV0b2NvbXBsZXRlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjaGlwcy1hdXRvY29tcGxldGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoaXBzLWF1dG9jb21wbGV0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHNcIlxuICB9LFxuICBcImNoaXBzLWF2YXRhclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzL2NoaXBzLWF2YXRhclwiLFxuICAgIFwidGl0bGVcIjogXCJDaGlwcyBhdmF0YXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0F2YXRhckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiY2hpcHMtYXZhdGFyLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtYXZhdGFyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjaGlwcy1hdmF0YXItZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNoaXBzLWF2YXRhci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hpcHMtYXZhdGFyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9jaGlwc1wiXG4gIH0sXG4gIFwiY2hpcHMtZHJhZy1kcm9wXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHMvY2hpcHMtZHJhZy1kcm9wXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNoaXBzIERyYWcgYW5kIERyb3BcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0RyYWdEcm9wRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1kcmFnLWRyb3AtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjaGlwcy1kcmFnLWRyb3AtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoaXBzLWRyYWctZHJvcC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtZHJhZy1kcm9wLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjaGlwcy1kcmFnLWRyb3AtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzXCJcbiAgfSxcbiAgXCJjaGlwcy1mb3JtLWNvbnRyb2xcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGlwcy9jaGlwcy1mb3JtLWNvbnRyb2xcIixcbiAgICBcInRpdGxlXCI6IFwiQ2hpcHMgd2l0aCBmb3JtIGNvbnRyb2xcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0Zvcm1Db250cm9sRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1mb3JtLWNvbnRyb2wtZXhhbXBsZS50c1wiLFxuICAgICAgXCJjaGlwcy1mb3JtLWNvbnRyb2wtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImNoaXBzLWZvcm0tY29udHJvbC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtZm9ybS1jb250cm9sLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJjaGlwcy1mb3JtLWNvbnRyb2wtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzXCJcbiAgfSxcbiAgXCJjaGlwcy1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHMvY2hpcHMtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0Q2hpcHNIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hpcHNIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hpcHMtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImNoaXBzLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoaXBzLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzXCJcbiAgfSxcbiAgXCJjaGlwcy1pbnB1dFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzL2NoaXBzLWlucHV0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNoaXBzIHdpdGggaW5wdXRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJDaGlwc0lucHV0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1pbnB1dC1leGFtcGxlLnRzXCIsXG4gICAgICBcImNoaXBzLWlucHV0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJjaGlwcy1pbnB1dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtaW5wdXQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImNoaXBzLWlucHV0LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9jaGlwc1wiXG4gIH0sXG4gIFwiY2hpcHMtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9jaGlwcy9jaGlwcy1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBjaGlwc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkNoaXBzT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImNoaXBzLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJjaGlwcy1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hpcHMtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NoaXBzXCJcbiAgfSxcbiAgXCJjaGlwcy1zdGFja2VkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHMvY2hpcHMtc3RhY2tlZFwiLFxuICAgIFwidGl0bGVcIjogXCJTdGFja2VkIGNoaXBzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiQ2hpcHNTdGFja2VkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJjaGlwcy1zdGFja2VkLWV4YW1wbGUudHNcIixcbiAgICAgIFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiY2hpcHMtc3RhY2tlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvY2hpcHNcIlxuICB9LFxuICBcImVsZXZhdGlvbi1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NvcmUvZWxldmF0aW9uLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkVsZXZhdGlvbiBDU1MgY2xhc3Nlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkVsZXZhdGlvbk92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJlbGV2YXRpb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJlbGV2YXRpb24tb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImVsZXZhdGlvbi1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZWxldmF0aW9uLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJlbGV2YXRpb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NvcmVcIlxuICB9LFxuICBcInJpcHBsZS1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2NvcmUvcmlwcGxlLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1hdFJpcHBsZSBiYXNpYyB1c2FnZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlJpcHBsZU92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJyaXBwbGUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJyaXBwbGUtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInJpcHBsZS1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwicmlwcGxlLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJyaXBwbGUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2NvcmVcIlxuICB9LFxuICBcImRhdGUtcmFuZ2UtcGlja2VyLWNvbXBhcmlzb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGUtcmFuZ2UtcGlja2VyLWNvbXBhcmlzb25cIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZSByYW5nZSBwaWNrZXIgY29tcGFyaXNvbiByYW5nZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlUmFuZ2VQaWNrZXJDb21wYXJpc29uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlLXJhbmdlLXBpY2tlci1jb21wYXJpc29uLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItY29tcGFyaXNvbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItY29tcGFyaXNvbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZS1yYW5nZS1waWNrZXItY29tcGFyaXNvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZS1yYW5nZS1waWNrZXItY29tcGFyaXNvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gIH0sXG4gIFwiZGF0ZS1yYW5nZS1waWNrZXItZm9ybXNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGUtcmFuZ2UtcGlja2VyLWZvcm1zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGUgcmFuZ2UgcGlja2VyIGZvcm1zIGludGVncmF0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZVJhbmdlUGlja2VyRm9ybXNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGUtcmFuZ2UtcGlja2VyLWZvcm1zLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZS1yYW5nZS1waWNrZXItZm9ybXMtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlLXJhbmdlLXBpY2tlci1mb3Jtcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZS1yYW5nZS1waWNrZXItZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGUtcmFuZ2UtcGlja2VyLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlLXJhbmdlLXBpY2tlci1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBkYXRlIHJhbmdlIHBpY2tlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVSYW5nZVBpY2tlck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlLXJhbmdlLXBpY2tlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGUtcmFuZ2UtcGlja2VyLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZS1yYW5nZS1waWNrZXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGUtcmFuZ2UtcGlja2VyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgfSxcbiAgXCJkYXRlLXJhbmdlLXBpY2tlci1zZWxlY3Rpb24tc3RyYXRlZ3lcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGUtcmFuZ2UtcGlja2VyLXNlbGVjdGlvbi1zdHJhdGVneVwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlIHJhbmdlIHBpY2tlciB3aXRoIGN1c3RvbSBhIHNlbGVjdGlvbiBzdHJhdGVneVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVSYW5nZVBpY2tlclNlbGVjdGlvblN0cmF0ZWd5RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlLXJhbmdlLXBpY2tlci1zZWxlY3Rpb24tc3RyYXRlZ3ktZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlLXJhbmdlLXBpY2tlci1zZWxlY3Rpb24tc3RyYXRlZ3ktZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlLXJhbmdlLXBpY2tlci1zZWxlY3Rpb24tc3RyYXRlZ3ktZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGUtcmFuZ2UtcGlja2VyLXNlbGVjdGlvbi1zdHJhdGVneS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1hY3Rpb25zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWFjdGlvbnNcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciBhY3Rpb24gYnV0dG9uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJBY3Rpb25zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWFjdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWFjdGlvbnMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGVwaWNrZXItYWN0aW9ucy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1hY3Rpb25zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWFjdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItYXBpXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWFwaVwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIG9wZW4gbWV0aG9kXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlckFwaUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1hcGktZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWFwaS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1hcGktZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItYXBpLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWFwaS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1jdXN0b20taGVhZGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWN1c3RvbS1oZWFkZXJcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB3aXRoIGN1c3RvbSBjYWxlbmRhciBoZWFkZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyQ3VzdG9tSGVhZGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJFeGFtcGxlSGVhZGVyXCJcbiAgICBdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWN1c3RvbS1oZWFkZXItZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItY3VzdG9tLWljb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItY3VzdG9tLWljb25cIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB3aXRoIGN1c3RvbSBpY29uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlckN1c3RvbUljb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGVwaWNrZXItY3VzdG9tLWljb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWN1c3RvbS1pY29uLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1jdXN0b20taWNvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZXBpY2tlci1jdXN0b20taWNvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1kYXRlLWNsYXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWRhdGUtY2xhc3NcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB3aXRoIGN1c3RvbSBkYXRlIGNsYXNzZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyRGF0ZUNsYXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWRhdGUtY2xhc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLWRhdGUtY2xhc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGVwaWNrZXItZGF0ZS1jbGFzcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1kYXRlLWNsYXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWRhdGUtY2xhc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItZGlzYWJsZWRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItZGlzYWJsZWRcIixcbiAgICBcInRpdGxlXCI6IFwiRGlzYWJsZWQgZGF0ZXBpY2tlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJEaXNhYmxlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1kaXNhYmxlZC1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItZGlzYWJsZWQtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLWRpc2FibGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWRpc2FibGVkLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgfSxcbiAgXCJkYXRlcGlja2VyLWV2ZW50c1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1ldmVudHNcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciBpbnB1dCBhbmQgY2hhbmdlIGV2ZW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJFdmVudHNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGVwaWNrZXItZXZlbnRzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1ldmVudHMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGVwaWNrZXItZXZlbnRzLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLWV2ZW50cy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZXBpY2tlci1ldmVudHMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItZmlsdGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWZpbHRlclwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHdpdGggZmlsdGVyIHZhbGlkYXRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyRmlsdGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWZpbHRlci1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItZmlsdGVyLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1maWx0ZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItZmlsdGVyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgfSxcbiAgXCJkYXRlcGlja2VyLWZvcm1hdHNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItZm9ybWF0c1wiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHdpdGggY3VzdG9tIGZvcm1hdHNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyRm9ybWF0c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1mb3JtYXRzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1mb3JtYXRzLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1mb3JtYXRzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWZvcm1hdHMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXREYXRlcGlja2VySW5wdXRIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlckhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGVwaWNrZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItaW5saW5lLWNhbGVuZGFyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLWlubGluZS1jYWxlbmRhclwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIGlubGluZSBjYWxlbmRhciBleGFtcGxlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlcklubGluZUNhbGVuZGFyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWlubGluZS1jYWxlbmRhci1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItaW5saW5lLWNhbGVuZGFyLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkYXRlcGlja2VyLWlubGluZS1jYWxlbmRhci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1pbmxpbmUtY2FsZW5kYXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItaW5saW5lLWNhbGVuZGFyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgfSxcbiAgXCJkYXRlcGlja2VyLWxvY2FsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci1sb2NhbGVcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciB3aXRoIGRpZmZlcmVudCBsb2NhbGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyTG9jYWxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLWxvY2FsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItbG9jYWxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkYXRlcGlja2VyLWxvY2FsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGF0ZXBpY2tlci1sb2NhbGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItbG9jYWxlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgfSxcbiAgXCJkYXRlcGlja2VyLW1pbi1tYXhcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItbWluLW1heFwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHdpdGggbWluICYgbWF4IHZhbGlkYXRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyTWluTWF4RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLW1pbi1tYXgtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLW1pbi1tYXgtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLW1pbi1tYXgtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItbWluLW1heC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gIH0sXG4gIFwiZGF0ZXBpY2tlci1tb21lbnRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItbW9tZW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkRhdGVwaWNrZXIgdGhhdCB1c2VzIE1vbWVudC5qcyBkYXRlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJNb21lbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRhdGVwaWNrZXItbW9tZW50LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZXBpY2tlci1tb21lbnQtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLW1vbWVudC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGF0ZXBpY2tlci1tb21lbnQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgZGF0ZXBpY2tlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyXCJcbiAgfSxcbiAgXCJkYXRlcGlja2VyLXN0YXJ0LXZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItc3RhcnQtdmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHN0YXJ0IGRhdGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEYXRlcGlja2VyU3RhcnRWaWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLXN0YXJ0LXZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLXN0YXJ0LXZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkYXRlcGlja2VyLXN0YXJ0LXZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItc3RhcnQtdmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gIH0sXG4gIFwiZGF0ZXBpY2tlci10b3VjaFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXIvZGF0ZXBpY2tlci10b3VjaFwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIHRvdWNoIFVJXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGF0ZXBpY2tlclRvdWNoRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkYXRlcGlja2VyLXRvdWNoLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGF0ZXBpY2tlci10b3VjaC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItdG91Y2gtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItdG91Y2gtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItdmFsdWVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kYXRlcGlja2VyL2RhdGVwaWNrZXItdmFsdWVcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0ZXBpY2tlciBzZWxlY3RlZCB2YWx1ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJWYWx1ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci12YWx1ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRhdGVwaWNrZXItdmFsdWUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2RhdGVwaWNrZXJcIlxuICB9LFxuICBcImRhdGVwaWNrZXItdmlld3Mtc2VsZWN0aW9uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlci9kYXRlcGlja2VyLXZpZXdzLXNlbGVjdGlvblwiLFxuICAgIFwidGl0bGVcIjogXCJEYXRlcGlja2VyIGVtdWxhdGluZyBhIFllYXIgYW5kIG1vbnRoIHBpY2tlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRhdGVwaWNrZXJWaWV3c1NlbGVjdGlvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGF0ZXBpY2tlci12aWV3cy1zZWxlY3Rpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJkYXRlcGlja2VyLXZpZXdzLXNlbGVjdGlvbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGF0ZXBpY2tlci12aWV3cy1zZWxlY3Rpb24tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRhdGVwaWNrZXItdmlld3Mtc2VsZWN0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkYXRlcGlja2VyLXZpZXdzLXNlbGVjdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGF0ZXBpY2tlclwiXG4gIH0sXG4gIFwiZGlhbG9nLWFuaW1hdGlvbnNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2cvZGlhbG9nLWFuaW1hdGlvbnNcIixcbiAgICBcInRpdGxlXCI6IFwiRGlhbG9nIEFuaW1hdGlvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEaWFsb2dBbmltYXRpb25zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkaWFsb2ctYW5pbWF0aW9ucy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRpYWxvZy1hbmltYXRpb25zLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJkaWFsb2ctYW5pbWF0aW9ucy1leGFtcGxlLmNzc1wiLFxuICAgICAgXCJkaWFsb2ctYW5pbWF0aW9ucy1leGFtcGxlLWRpYWxvZy5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJkaWFsb2ctYW5pbWF0aW9ucy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIkRpYWxvZ0FuaW1hdGlvbnNFeGFtcGxlRGlhbG9nXCJcbiAgICBdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJkaWFsb2ctYW5pbWF0aW9ucy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGlhbG9nXCJcbiAgfSxcbiAgXCJkaWFsb2ctY29udGVudFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpYWxvZy9kaWFsb2ctY29udGVudFwiLFxuICAgIFwidGl0bGVcIjogXCJEaWFsb2cgd2l0aCBoZWFkZXIsIHNjcm9sbGFibGUgY29udGVudCBhbmQgYWN0aW9uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ0NvbnRlbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpYWxvZy1jb250ZW50LWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGlhbG9nLWNvbnRlbnQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1jb250ZW50LWV4YW1wbGUtZGlhbG9nLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRpYWxvZy1jb250ZW50LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiRGlhbG9nQ29udGVudEV4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpYWxvZy1jb250ZW50LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICB9LFxuICBcImRpYWxvZy1kYXRhXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGlhbG9nL2RpYWxvZy1kYXRhXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkluamVjdGluZyBkYXRhIHdoZW4gb3BlbmluZyBhIGRpYWxvZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ0RhdGFFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpYWxvZy1kYXRhLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGlhbG9nLWRhdGEtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1kYXRhLWV4YW1wbGUtZGlhbG9nLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRpYWxvZy1kYXRhLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiRGlhbG9nRGF0YUV4YW1wbGVEaWFsb2dcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpYWxvZy1kYXRhLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICB9LFxuICBcImRpYWxvZy1lbGVtZW50c1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpYWxvZy9kaWFsb2ctZWxlbWVudHNcIixcbiAgICBcInRpdGxlXCI6IFwiRGlhbG9nIGVsZW1lbnRzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGlhbG9nRWxlbWVudHNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpYWxvZy1lbGVtZW50cy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRpYWxvZy1lbGVtZW50cy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGlhbG9nLWVsZW1lbnRzLWV4YW1wbGUtZGlhbG9nLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRpYWxvZy1lbGVtZW50cy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIkRpYWxvZ0VsZW1lbnRzRXhhbXBsZURpYWxvZ1wiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGlhbG9nLWVsZW1lbnRzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICB9LFxuICBcImRpYWxvZy1mcm9tLW1lbnVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2cvZGlhbG9nLWZyb20tbWVudVwiLFxuICAgIFwidGl0bGVcIjogXCJEaWFsb2cgbGF1bmNoZWQgZnJvbSBhIG1lbnVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEaWFsb2dGcm9tTWVudUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZGlhbG9nLWZyb20tbWVudS1leGFtcGxlLnRzXCIsXG4gICAgICBcImRpYWxvZy1mcm9tLW1lbnUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1mcm9tLW1lbnUtZXhhbXBsZS1kaWFsb2cuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGlhbG9nLWZyb20tbWVudS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIkRpYWxvZ0Zyb21NZW51RXhhbXBsZURpYWxvZ1wiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGlhbG9nLWZyb20tbWVudS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGlhbG9nXCJcbiAgfSxcbiAgXCJkaWFsb2ctaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpYWxvZy9kaWFsb2ctaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0RGlhbG9nSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpYWxvZ0hhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpYWxvZy1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZGlhbG9nLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpYWxvZy1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGlhbG9nLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImRpYWxvZy1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICB9LFxuICBcImRpYWxvZy1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpYWxvZy9kaWFsb2ctb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiRGlhbG9nIE92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRGlhbG9nT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpYWxvZy1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImRpYWxvZy1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUtZGlhbG9nLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRpYWxvZy1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIkRpYWxvZ092ZXJ2aWV3RXhhbXBsZURpYWxvZ1wiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGlhbG9nLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kaWFsb2dcIlxuICB9LFxuICBcImRpdmlkZXItaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2RpdmlkZXIvZGl2aWRlci1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXREaXZpZGVySGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkRpdmlkZXJIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJkaXZpZGVyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJkaXZpZGVyLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImRpdmlkZXItaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImRpdmlkZXItaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGl2aWRlci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9kaXZpZGVyXCJcbiAgfSxcbiAgXCJkaXZpZGVyLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZGl2aWRlci9kaXZpZGVyLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGRpdmlkZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJEaXZpZGVyT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImRpdmlkZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJkaXZpZGVyLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZGl2aWRlci1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZGl2aWRlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZGl2aWRlclwiXG4gIH0sXG4gIFwiZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9leHBhbnNpb24vZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGxcIixcbiAgICBcInRpdGxlXCI6IFwiQWNjb3JkaW9uIHdpdGggZXhwYW5kL2NvbGxhcHNlIGFsbCB0b2dnbGVzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRXhwYW5zaW9uRXhwYW5kQ29sbGFwc2VBbGxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImV4cGFuc2lvbi1leHBhbmQtY29sbGFwc2UtYWxsLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImV4cGFuc2lvbi1leHBhbmQtY29sbGFwc2UtYWxsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJleHBhbnNpb24tZXhwYW5kLWNvbGxhcHNlLWFsbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZXhwYW5zaW9uLWV4cGFuZC1jb2xsYXBzZS1hbGwtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2V4cGFuc2lvblwiXG4gIH0sXG4gIFwiZXhwYW5zaW9uLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9leHBhbnNpb24vZXhwYW5zaW9uLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEV4cGFuc2lvblBhbmVsSGFybmVzcyBhbmQgTWF0QWNjb3JkaW9uSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkV4cGFuc2lvbkhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImV4cGFuc2lvbi1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZXhwYW5zaW9uLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImV4cGFuc2lvbi1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZXhwYW5zaW9uLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImV4cGFuc2lvbi1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9leHBhbnNpb25cIlxuICB9LFxuICBcImV4cGFuc2lvbi1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2V4cGFuc2lvbi9leHBhbnNpb24tb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgZXhwYW5zaW9uIHBhbmVsXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRXhwYW5zaW9uT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImV4cGFuc2lvbi1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImV4cGFuc2lvbi1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImV4cGFuc2lvbi1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZXhwYW5zaW9uLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9leHBhbnNpb25cIlxuICB9LFxuICBcImV4cGFuc2lvbi1zdGVwc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2V4cGFuc2lvbi9leHBhbnNpb24tc3RlcHNcIixcbiAgICBcInRpdGxlXCI6IFwiRXhwYW5zaW9uIHBhbmVsIGFzIGFjY29yZGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkV4cGFuc2lvblN0ZXBzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJleHBhbnNpb24tc3RlcHMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJleHBhbnNpb24tc3RlcHMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImV4cGFuc2lvbi1zdGVwcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZXhwYW5zaW9uLXN0ZXBzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJleHBhbnNpb24tc3RlcHMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2V4cGFuc2lvblwiXG4gIH0sXG4gIFwiZm9ybS1maWVsZC1hcHBlYXJhbmNlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZC9mb3JtLWZpZWxkLWFwcGVhcmFuY2VcIixcbiAgICBcInRpdGxlXCI6IFwiRm9ybSBmaWVsZCBhcHBlYXJhbmNlIHZhcmlhbnRzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9ybUZpZWxkQXBwZWFyYW5jZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZm9ybS1maWVsZC1hcHBlYXJhbmNlLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZm9ybS1maWVsZC1hcHBlYXJhbmNlLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZm9ybS1maWVsZC1hcHBlYXJhbmNlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJmb3JtLWZpZWxkLWFwcGVhcmFuY2UtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGRcIlxuICB9LFxuICBcImZvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2xcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkL2Zvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2xcIixcbiAgICBcInRpdGxlXCI6IFwiRm9ybSBmaWVsZCB3aXRoIGN1c3RvbSB0ZWxlcGhvbmUgbnVtYmVyIGlucHV0IGNvbnRyb2wuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9ybUZpZWxkQ3VzdG9tQ29udHJvbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZm9ybS1maWVsZC1jdXN0b20tY29udHJvbC1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2wtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImV4YW1wbGUtdGVsLWlucHV0LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJleGFtcGxlLXRlbC1pbnB1dC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZm9ybS1maWVsZC1jdXN0b20tY29udHJvbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXG4gICAgICBcIk15VGVsSW5wdXRcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtY3VzdG9tLWNvbnRyb2wtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGRcIlxuICB9LFxuICBcImZvcm0tZmllbGQtZXJyb3JcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkL2Zvcm0tZmllbGQtZXJyb3JcIixcbiAgICBcInRpdGxlXCI6IFwiRm9ybSBmaWVsZCB3aXRoIGVycm9yIG1lc3NhZ2VzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiRm9ybUZpZWxkRXJyb3JFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtZXJyb3ItZXhhbXBsZS50c1wiLFxuICAgICAgXCJmb3JtLWZpZWxkLWVycm9yLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJmb3JtLWZpZWxkLWVycm9yLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLWVycm9yLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJmb3JtLWZpZWxkLWVycm9yLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkXCJcbiAgfSxcbiAgXCJmb3JtLWZpZWxkLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkL2Zvcm0tZmllbGQtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0Rm9ybUZpZWxkSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkZvcm1GaWVsZEhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZm9ybS1maWVsZC1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJmb3JtLWZpZWxkLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGRcIlxuICB9LFxuICBcImZvcm0tZmllbGQtaGludFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC1oaW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZvcm0gZmllbGQgd2l0aCBoaW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkZvcm1GaWVsZEhpbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtaGludC1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtaGludC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC1oaW50LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLWhpbnQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtaGludC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gIH0sXG4gIFwiZm9ybS1maWVsZC1sYWJlbFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC1sYWJlbFwiLFxuICAgIFwidGl0bGVcIjogXCJGb3JtIGZpZWxkIHdpdGggbGFiZWxcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJGb3JtRmllbGRMYWJlbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZm9ybS1maWVsZC1sYWJlbC1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtbGFiZWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImZvcm0tZmllbGQtbGFiZWwtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImZvcm0tZmllbGQtbGFiZWwtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtbGFiZWwtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGRcIlxuICB9LFxuICBcImZvcm0tZmllbGQtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9mb3JtLWZpZWxkL2Zvcm0tZmllbGQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiU2ltcGxlIGZvcm0gZmllbGRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJGb3JtRmllbGRPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZm9ybS1maWVsZC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImZvcm0tZmllbGQtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImZvcm0tZmllbGQtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGRcIlxuICB9LFxuICBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2Zvcm0tZmllbGQvZm9ybS1maWVsZC1wcmVmaXgtc3VmZml4XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZvcm0gZmllbGQgd2l0aCBwcmVmaXggJiBzdWZmaXhcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJGb3JtRmllbGRQcmVmaXhTdWZmaXhFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLnRzXCIsXG4gICAgICBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZm9ybS1maWVsZC1wcmVmaXgtc3VmZml4LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJmb3JtLWZpZWxkLXByZWZpeC1zdWZmaXgtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImZvcm0tZmllbGQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvZm9ybS1maWVsZFwiXG4gIH0sXG4gIFwiZ3JpZC1saXN0LWR5bmFtaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9ncmlkLWxpc3QvZ3JpZC1saXN0LWR5bmFtaWNcIixcbiAgICBcInRpdGxlXCI6IFwiRHluYW1pYyBncmlkLWxpc3RcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJHcmlkTGlzdER5bmFtaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImdyaWQtbGlzdC1keW5hbWljLWV4YW1wbGUudHNcIixcbiAgICAgIFwiZ3JpZC1saXN0LWR5bmFtaWMtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJncmlkLWxpc3QtZHluYW1pYy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZ3JpZC1saXN0LWR5bmFtaWMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2dyaWQtbGlzdFwiXG4gIH0sXG4gIFwiZ3JpZC1saXN0LWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9ncmlkLWxpc3QvZ3JpZC1saXN0LWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEdyaWRMaXN0SGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkdyaWRMaXN0SGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiZ3JpZC1saXN0LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJncmlkLWxpc3QtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiZ3JpZC1saXN0LWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJncmlkLWxpc3QtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiZ3JpZC1saXN0LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2dyaWQtbGlzdFwiXG4gIH0sXG4gIFwiZ3JpZC1saXN0LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvZ3JpZC1saXN0L2dyaWQtbGlzdC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBncmlkLWxpc3RcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJHcmlkTGlzdE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJncmlkLWxpc3Qtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJncmlkLWxpc3Qtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImdyaWQtbGlzdC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiZ3JpZC1saXN0LW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJncmlkLWxpc3Qtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2dyaWQtbGlzdFwiXG4gIH0sXG4gIFwiaWNvbi1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvaWNvbi9pY29uLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdEljb25IYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSWNvbkhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImljb24taGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcImljb24taGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiaWNvbi1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiaWNvbi1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJpY29uLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2ljb25cIlxuICB9LFxuICBcImljb24tb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9pY29uL2ljb24tb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgaWNvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJJY29uT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImljb24tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJpY29uLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiaWNvbi1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaWNvbi1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvaWNvblwiXG4gIH0sXG4gIFwiaWNvbi1zdmdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9pY29uL2ljb24tc3ZnXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNWRyBpY29uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkljb25TdmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImljb24tc3ZnLWV4YW1wbGUudHNcIixcbiAgICAgIFwiaWNvbi1zdmctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJpY29uLXN2Zy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaWNvbi1zdmctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2ljb25cIlxuICB9LFxuICBcImlucHV0LWNsZWFyYWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0L2lucHV0LWNsZWFyYWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJJbnB1dCB3aXRoIGEgY2xlYXIgYnV0dG9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSW5wdXRDbGVhcmFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImlucHV0LWNsZWFyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcIi4vaW5wdXQtY2xlYXJhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCIuL2lucHV0LWNsZWFyYWJsZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiaW5wdXQtY2xlYXJhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJpbnB1dC1jbGVhcmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0XCJcbiAgfSxcbiAgXCJpbnB1dC1lcnJvci1zdGF0ZS1tYXRjaGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXQvaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlclwiLFxuICAgIFwidGl0bGVcIjogXCJJbnB1dCB3aXRoIGEgY3VzdG9tIEVycm9yU3RhdGVNYXRjaGVyXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSW5wdXRFcnJvclN0YXRlTWF0Y2hlckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlLnRzXCIsXG4gICAgICBcIi4vaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiLi9pbnB1dC1lcnJvci1zdGF0ZS1tYXRjaGVyLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJpbnB1dC1lcnJvci1zdGF0ZS1tYXRjaGVyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJpbnB1dC1lcnJvci1zdGF0ZS1tYXRjaGVyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9pbnB1dFwiXG4gIH0sXG4gIFwiaW5wdXQtZXJyb3JzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXQvaW5wdXQtZXJyb3JzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIklucHV0IHdpdGggZXJyb3IgbWVzc2FnZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJJbnB1dEVycm9yc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaW5wdXQtZXJyb3JzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiaW5wdXQtZXJyb3JzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJpbnB1dC1lcnJvcnMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImlucHV0LWVycm9ycy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaW5wdXQtZXJyb3JzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9pbnB1dFwiXG4gIH0sXG4gIFwiaW5wdXQtZm9ybVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0L2lucHV0LWZvcm1cIixcbiAgICBcInRpdGxlXCI6IFwiSW5wdXRzIGluIGEgZm9ybVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIklucHV0Rm9ybUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaW5wdXQtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgICBcImlucHV0LWZvcm0tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImlucHV0LWZvcm0tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImlucHV0LWZvcm0tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImlucHV0LWZvcm0tZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0XCJcbiAgfSxcbiAgXCJpbnB1dC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXQvaW5wdXQtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0SW5wdXRIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSW5wdXRIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJpbnB1dC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwiaW5wdXQtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiaW5wdXQtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImlucHV0LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcImlucHV0LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2lucHV0XCJcbiAgfSxcbiAgXCJpbnB1dC1oaW50XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXQvaW5wdXQtaGludFwiLFxuICAgIFwidGl0bGVcIjogXCJJbnB1dCB3aXRoIGhpbnRzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSW5wdXRIaW50RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJpbnB1dC1oaW50LWV4YW1wbGUudHNcIixcbiAgICAgIFwiaW5wdXQtaGludC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiaW5wdXQtaGludC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiaW5wdXQtaGludC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaW5wdXQtaGludC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXRcIlxuICB9LFxuICBcImlucHV0LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXQvaW5wdXQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgSW5wdXRzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiSW5wdXRPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwiaW5wdXQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJpbnB1dC1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiaW5wdXQtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImlucHV0LW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJpbnB1dC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXRcIlxuICB9LFxuICBcImlucHV0LXByZWZpeC1zdWZmaXhcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9pbnB1dC9pbnB1dC1wcmVmaXgtc3VmZml4XCIsXG4gICAgXCJ0aXRsZVwiOiBcIklucHV0cyB3aXRoIHByZWZpeGVzIGFuZCBzdWZmaXhlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIklucHV0UHJlZml4U3VmZml4RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJpbnB1dC1wcmVmaXgtc3VmZml4LWV4YW1wbGUudHNcIixcbiAgICAgIFwiaW5wdXQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwiaW5wdXQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwiaW5wdXQtcHJlZml4LXN1ZmZpeC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwiaW5wdXQtcHJlZml4LXN1ZmZpeC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvaW5wdXRcIlxuICB9LFxuICBcImxpc3QtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2xpc3QvbGlzdC1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRMaXN0SGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkxpc3RIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJsaXN0LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJsaXN0LWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcImxpc3QtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcImxpc3QtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibGlzdC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9saXN0XCJcbiAgfSxcbiAgXCJsaXN0LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbGlzdC9saXN0LW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIGxpc3RcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJMaXN0T3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImxpc3Qtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJsaXN0LW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibGlzdC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibGlzdC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvbGlzdFwiXG4gIH0sXG4gIFwibGlzdC1zZWN0aW9uc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2xpc3QvbGlzdC1zZWN0aW9uc1wiLFxuICAgIFwidGl0bGVcIjogXCJMaXN0IHdpdGggc2VjdGlvbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJMaXN0U2VjdGlvbnNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImxpc3Qtc2VjdGlvbnMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJsaXN0LXNlY3Rpb25zLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJsaXN0LXNlY3Rpb25zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJsaXN0LXNlY3Rpb25zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJsaXN0LXNlY3Rpb25zLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9saXN0XCJcbiAgfSxcbiAgXCJsaXN0LXNlbGVjdGlvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2xpc3QvbGlzdC1zZWxlY3Rpb25cIixcbiAgICBcInRpdGxlXCI6IFwiTGlzdCB3aXRoIHNlbGVjdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkxpc3RTZWxlY3Rpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcImxpc3Qtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICAgIFwibGlzdC1zZWxlY3Rpb24tZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJsaXN0LXNlbGVjdGlvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibGlzdC1zZWxlY3Rpb24tZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2xpc3RcIlxuICB9LFxuICBcImxpc3Qtc2luZ2xlLXNlbGVjdGlvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL2xpc3QvbGlzdC1zaW5nbGUtc2VsZWN0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkxpc3Qgd2l0aCBzaW5nbGUgc2VsZWN0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTGlzdFNpbmdsZVNlbGVjdGlvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICAgIFwibGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJsaXN0LXNpbmdsZS1zZWxlY3Rpb24tZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL2xpc3RcIlxuICB9LFxuICBcImxpc3QtdmFyaWFudHNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9saXN0L2xpc3QtdmFyaWFudHNcIixcbiAgICBcInRpdGxlXCI6IFwiTGlzdCB2YXJpYW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIkxpc3RWYXJpYW50c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibGlzdC12YXJpYW50cy1leGFtcGxlLnRzXCIsXG4gICAgICBcImxpc3QtdmFyaWFudHMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcIi4vbGlzdC12YXJpYW50cy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibGlzdC12YXJpYW50cy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibGlzdC12YXJpYW50cy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvbGlzdFwiXG4gIH0sXG4gIFwibWVudS1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbWVudS9tZW51LWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdE1lbnVIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTWVudUhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcIm1lbnUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcIm1lbnUtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwibWVudS1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibWVudS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJtZW51LWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL21lbnVcIlxuICB9LFxuICBcIm1lbnUtaWNvbnNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9tZW51L21lbnUtaWNvbnNcIixcbiAgICBcInRpdGxlXCI6IFwiTWVudSB3aXRoIGljb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiTWVudUljb25zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJtZW51LWljb25zLWV4YW1wbGUudHNcIixcbiAgICAgIFwibWVudS1pY29ucy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcIm1lbnUtaWNvbnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcIm1lbnUtaWNvbnMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL21lbnVcIlxuICB9LFxuICBcIm1lbnUtbmVzdGVkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbWVudS9tZW51LW5lc3RlZFwiLFxuICAgIFwidGl0bGVcIjogXCJOZXN0ZWQgbWVudVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIk1lbnVOZXN0ZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcIm1lbnUtbmVzdGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwibWVudS1uZXN0ZWQtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJtZW51LW5lc3RlZC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibWVudS1uZXN0ZWQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL21lbnVcIlxuICB9LFxuICBcIm1lbnUtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9tZW51L21lbnUtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgbWVudVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIk1lbnVPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwibWVudS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcIm1lbnUtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJtZW51LW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJtZW51LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9tZW51XCJcbiAgfSxcbiAgXCJtZW51LXBvc2l0aW9uXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvbWVudS9tZW51LXBvc2l0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIk1lbnUgcG9zaXRpb25pbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJNZW51UG9zaXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcIm1lbnUtcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJtZW51LXBvc2l0aW9uLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwibWVudS1wb3NpdGlvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwibWVudS1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvbWVudVwiXG4gIH0sXG4gIFwicGFnaW5hdG9yLWNvbmZpZ3VyYWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3BhZ2luYXRvci9wYWdpbmF0b3ItY29uZmlndXJhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNvbmZpZ3VyYWJsZSBwYWdpbmF0b3JcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQYWdpbmF0b3JDb25maWd1cmFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInBhZ2luYXRvci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwYWdpbmF0b3ItY29uZmlndXJhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJwYWdpbmF0b3ItY29uZmlndXJhYmxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwYWdpbmF0b3ItY29uZmlndXJhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwYWdpbmF0b3ItY29uZmlndXJhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9wYWdpbmF0b3JcIlxuICB9LFxuICBcInBhZ2luYXRvci1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcGFnaW5hdG9yL3BhZ2luYXRvci1oYXJuZXNzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRlc3Rpbmcgd2l0aCBNYXRQYWdpbmF0b3JIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUGFnaW5hdG9ySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicGFnaW5hdG9yLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwYWdpbmF0b3ItaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicGFnaW5hdG9yLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwYWdpbmF0b3ItaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicGFnaW5hdG9yLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3BhZ2luYXRvclwiXG4gIH0sXG4gIFwicGFnaW5hdG9yLWludGxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9wYWdpbmF0b3IvcGFnaW5hdG9yLWludGxcIixcbiAgICBcInRpdGxlXCI6IFwiUGFnaW5hdG9yIGludGVybmF0aW9uYWxpemF0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUGFnaW5hdG9ySW50bEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicGFnaW5hdG9yLWludGwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwYWdpbmF0b3ItaW50bC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInBhZ2luYXRvci1pbnRsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwYWdpbmF0b3ItaW50bC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvcGFnaW5hdG9yXCJcbiAgfSxcbiAgXCJwYWdpbmF0b3Itb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9wYWdpbmF0b3IvcGFnaW5hdG9yLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlBhZ2luYXRvclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlBhZ2luYXRvck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwYWdpbmF0b3Itb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJwYWdpbmF0b3Itb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwYWdpbmF0b3Itb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInBhZ2luYXRvci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvcGFnaW5hdG9yXCJcbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItYnVmZmVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci1idWZmZXJcIixcbiAgICBcInRpdGxlXCI6IFwiQnVmZmVyIHByb2dyZXNzLWJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzQmFyQnVmZmVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1iYXItYnVmZmVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwicHJvZ3Jlc3MtYmFyLWJ1ZmZlci1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1idWZmZXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLWJhci1idWZmZXItZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhclwiXG4gIH0sXG4gIFwicHJvZ3Jlc3MtYmFyLWNvbmZpZ3VyYWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXItY29uZmlndXJhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNvbmZpZ3VyYWJsZSBwcm9ncmVzcy1iYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQcm9ncmVzc0JhckNvbmZpZ3VyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3MtYmFyLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLWJhci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhclwiXG4gIH0sXG4gIFwicHJvZ3Jlc3MtYmFyLWRldGVybWluYXRlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci1kZXRlcm1pbmF0ZVwiLFxuICAgIFwidGl0bGVcIjogXCJEZXRlcm1pbmF0ZSBwcm9ncmVzcy1iYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQcm9ncmVzc0JhckRldGVybWluYXRlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1iYXItZGV0ZXJtaW5hdGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwcm9ncmVzcy1iYXItZGV0ZXJtaW5hdGUtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwcm9ncmVzcy1iYXItZGV0ZXJtaW5hdGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInByb2dyZXNzLWJhci1kZXRlcm1pbmF0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyXCJcbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXItaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0UHJvZ3Jlc3NCYXJIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUHJvZ3Jlc3NCYXJIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1iYXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJwcm9ncmVzcy1iYXItaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwcm9ncmVzcy1iYXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyXCJcbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZVwiLFxuICAgIFwidGl0bGVcIjogXCJJbmRldGVybWluYXRlIHByb2dyZXNzLWJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzQmFySW5kZXRlcm1pbmF0ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3MtYmFyLWluZGV0ZXJtaW5hdGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1pbmRldGVybWluYXRlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyXCJcbiAgfSxcbiAgXCJwcm9ncmVzcy1iYXItcXVlcnlcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1iYXIvcHJvZ3Jlc3MtYmFyLXF1ZXJ5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlF1ZXJ5IHByb2dyZXNzLWJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzQmFyUXVlcnlFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInByb2dyZXNzLWJhci1xdWVyeS1leGFtcGxlLnRzXCIsXG4gICAgICBcInByb2dyZXNzLWJhci1xdWVyeS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLWJhci1xdWVyeS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicHJvZ3Jlc3MtYmFyLXF1ZXJ5LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1iYXJcIlxuICB9LFxuICBcInByb2dyZXNzLXNwaW5uZXItY29uZmlndXJhYmxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci9wcm9ncmVzcy1zcGlubmVyLWNvbmZpZ3VyYWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJDb25maWd1cmFibGUgcHJvZ3Jlc3Mgc3Bpbm5lclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlByb2dyZXNzU3Bpbm5lckNvbmZpZ3VyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwcm9ncmVzcy1zcGlubmVyLWNvbmZpZ3VyYWJsZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1jb25maWd1cmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLXNwaW5uZXItY29uZmlndXJhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwcm9ncmVzcy1zcGlubmVyLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lclwiXG4gIH0sXG4gIFwicHJvZ3Jlc3Mtc3Bpbm5lci1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci9wcm9ncmVzcy1zcGlubmVyLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFByb2dyZXNzU3Bpbm5lckhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQcm9ncmVzc1NwaW5uZXJIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJwcm9ncmVzcy1zcGlubmVyLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJwcm9ncmVzcy1zcGlubmVyLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInByb2dyZXNzLXNwaW5uZXItaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInByb2dyZXNzLXNwaW5uZXItaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicHJvZ3Jlc3Mtc3Bpbm5lci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1zcGlubmVyXCJcbiAgfSxcbiAgXCJwcm9ncmVzcy1zcGlubmVyLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcHJvZ3Jlc3Mtc3Bpbm5lci9wcm9ncmVzcy1zcGlubmVyLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHByb2dyZXNzLXNwaW5uZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJQcm9ncmVzc1NwaW5uZXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwicHJvZ3Jlc3Mtc3Bpbm5lci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInByb2dyZXNzLXNwaW5uZXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJwcm9ncmVzcy1zcGlubmVyLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJwcm9ncmVzcy1zcGlubmVyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9wcm9ncmVzcy1zcGlubmVyXCJcbiAgfSxcbiAgXCJyYWRpby1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvcmFkaW8vcmFkaW8taGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0UmFkaW9IYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiUmFkaW9IYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJyYWRpby1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwicmFkaW8taGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwicmFkaW8taGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInJhZGlvLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInJhZGlvLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3JhZGlvXCJcbiAgfSxcbiAgXCJyYWRpby1uZy1tb2RlbFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3JhZGlvL3JhZGlvLW5nLW1vZGVsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlJhZGlvcyB3aXRoIG5nTW9kZWxcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJSYWRpb05nTW9kZWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInJhZGlvLW5nLW1vZGVsLWV4YW1wbGUudHNcIixcbiAgICAgIFwicmFkaW8tbmctbW9kZWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInJhZGlvLW5nLW1vZGVsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJyYWRpby1uZy1tb2RlbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicmFkaW8tbmctbW9kZWwtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3JhZGlvXCJcbiAgfSxcbiAgXCJyYWRpby1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3JhZGlvL3JhZGlvLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHJhZGlvc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlJhZGlvT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInJhZGlvLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwicmFkaW8tb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInJhZGlvLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJyYWRpby1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwicmFkaW8tb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3JhZGlvXCJcbiAgfSxcbiAgXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXJcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LWN1c3RvbS10cmlnZ2VyXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNlbGVjdCB3aXRoIGN1c3RvbSB0cmlnZ2VyIHRleHRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RDdXN0b21UcmlnZ2VyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXItZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNlbGVjdC1jdXN0b20tdHJpZ2dlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LWN1c3RvbS10cmlnZ2VyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtY3VzdG9tLXRyaWdnZXItZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gIH0sXG4gIFwic2VsZWN0LWRpc2FibGVkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1kaXNhYmxlZFwiLFxuICAgIFwidGl0bGVcIjogXCJEaXNhYmxlZCBzZWxlY3RcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3REaXNhYmxlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LWRpc2FibGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2VsZWN0LWRpc2FibGVkLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LWRpc2FibGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtZGlzYWJsZWQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gIH0sXG4gIFwic2VsZWN0LWVycm9yLXN0YXRlLW1hdGNoZXJcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LWVycm9yLXN0YXRlLW1hdGNoZXJcIixcbiAgICBcInRpdGxlXCI6IFwiU2VsZWN0IHdpdGggYSBjdXN0b20gRXJyb3JTdGF0ZU1hdGNoZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RFcnJvclN0YXRlTWF0Y2hlckV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LWVycm9yLXN0YXRlLW1hdGNoZXItZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1lcnJvci1zdGF0ZS1tYXRjaGVyLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtZXJyb3Itc3RhdGUtbWF0Y2hlci1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgfSxcbiAgXCJzZWxlY3QtZm9ybVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3QtZm9ybVwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3QgaW4gYSBmb3JtXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0Rm9ybUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtZm9ybS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgfSxcbiAgXCJzZWxlY3QtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3QtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0U2VsZWN0SGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdEhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2VsZWN0LWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNlbGVjdC1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3RcIlxuICB9LFxuICBcInNlbGVjdC1oaW50LWVycm9yXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1oaW50LWVycm9yXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNlbGVjdCB3aXRoIGZvcm0gZmllbGQgZmVhdHVyZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RIaW50RXJyb3JFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1oaW50LWVycm9yLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2VsZWN0LWhpbnQtZXJyb3ItZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzZWxlY3QtaGludC1lcnJvci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2VsZWN0LWhpbnQtZXJyb3ItZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gIH0sXG4gIFwic2VsZWN0LWluaXRpYWwtdmFsdWVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LWluaXRpYWwtdmFsdWVcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgc2VsZWN0IHdpdGggaW5pdGlhbCB2YWx1ZSBhbmQgbm8gZm9ybVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdEluaXRpYWxWYWx1ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LWluaXRpYWwtdmFsdWUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtaW5pdGlhbC12YWx1ZS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1pbml0aWFsLXZhbHVlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtaW5pdGlhbC12YWx1ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgfSxcbiAgXCJzZWxlY3QtbXVsdGlwbGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LW11bHRpcGxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNlbGVjdCB3aXRoIG11bHRpcGxlIHNlbGVjdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdE11bHRpcGxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtbXVsdGlwbGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtbXVsdGlwbGUtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzZWxlY3QtbXVsdGlwbGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC1tdWx0aXBsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgfSxcbiAgXCJzZWxlY3Qtbm8tcmlwcGxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1uby1yaXBwbGVcIixcbiAgICBcInRpdGxlXCI6IFwiU2VsZWN0IHdpdGggbm8gb3B0aW9uIHJpcHBsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdE5vUmlwcGxlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3Qtbm8tcmlwcGxlLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2VsZWN0LW5vLXJpcHBsZS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1uby1yaXBwbGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC1uby1yaXBwbGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gIH0sXG4gIFwic2VsZWN0LW9wdGdyb3VwXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0L3NlbGVjdC1vcHRncm91cFwiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCBvcHRpb24gZ3JvdXBzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0T3B0Z3JvdXBFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1vcHRncm91cC1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC1vcHRncm91cC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1vcHRncm91cC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2VsZWN0LW9wdGdyb3VwLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3RcIlxuICB9LFxuICBcInNlbGVjdC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3Qtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgc2VsZWN0XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0T3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNlbGVjdC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC1vdmVydmlldy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2VsZWN0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3RcIlxuICB9LFxuICBcInNlbGVjdC1wYW5lbC1jbGFzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3QtcGFuZWwtY2xhc3NcIixcbiAgICBcInRpdGxlXCI6IFwiU2VsZWN0IHdpdGggY3VzdG9tIHBhbmVsIHN0eWxpbmdcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTZWxlY3RQYW5lbENsYXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtcGFuZWwtY2xhc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtcGFuZWwtY2xhc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNlbGVjdC1wYW5lbC1jbGFzcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LXBhbmVsLWNsYXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtcGFuZWwtY2xhc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdFwiXG4gIH0sXG4gIFwic2VsZWN0LXJlYWN0aXZlLWZvcm1cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LXJlYWN0aXZlLWZvcm1cIixcbiAgICBcInRpdGxlXCI6IFwiU2VsZWN0IGluIGEgcmVhY3RpdmUgZm9ybVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdFJlYWN0aXZlRm9ybUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2VsZWN0LXJlYWN0aXZlLWZvcm0tZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtcmVhY3RpdmUtZm9ybS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNlbGVjdC1yZWFjdGl2ZS1mb3JtLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzZWxlY3QtcmVhY3RpdmUtZm9ybS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgfSxcbiAgXCJzZWxlY3QtcmVzZXRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3Qvc2VsZWN0LXJlc2V0XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNlbGVjdCB3aXRoIHJlc2V0IG9wdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNlbGVjdFJlc2V0RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtcmVzZXQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzZWxlY3QtcmVzZXQtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzZWxlY3QtcmVzZXQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC1yZXNldC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2VsZWN0XCJcbiAgfSxcbiAgXCJzZWxlY3QtdmFsdWUtYmluZGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NlbGVjdC9zZWxlY3QtdmFsdWUtYmluZGluZ1wiLFxuICAgIFwidGl0bGVcIjogXCJTZWxlY3Qgd2l0aCAyLXdheSB2YWx1ZSBiaW5kaW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2VsZWN0VmFsdWVCaW5kaW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzZWxlY3QtdmFsdWUtYmluZGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNlbGVjdC12YWx1ZS1iaW5kaW5nLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2VsZWN0LXZhbHVlLWJpbmRpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNlbGVjdC12YWx1ZS1iaW5kaW5nLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zZWxlY3RcIlxuICB9LFxuICBcInNpZGVuYXYtYXV0b3NpemVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtYXV0b3NpemVcIixcbiAgICBcInRpdGxlXCI6IFwiQXV0b3NpemUgc2lkZW5hdlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZBdXRvc2l6ZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1hdXRvc2l6ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtYXV0b3NpemUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICB9LFxuICBcInNpZGVuYXYtYmFja2Ryb3BcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtYmFja2Ryb3BcIixcbiAgICBcInRpdGxlXCI6IFwiRHJhd2VyIHdpdGggZXhwbGljaXQgYmFja2Ryb3Agc2V0dGluZ1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZCYWNrZHJvcEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1iYWNrZHJvcC1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtYmFja2Ryb3AtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtYmFja2Ryb3AtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtYmFja2Ryb3AtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtYmFja2Ryb3AtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICB9LFxuICBcInNpZGVuYXYtY29uZmlndXJhYmxlLWZvY3VzLXRyYXBcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtY29uZmlndXJhYmxlLWZvY3VzLXRyYXBcIixcbiAgICBcInRpdGxlXCI6IFwiU2lkZW5hdiB1c2luZyBpbmplY3RlZCBDb25maWd1cmFibGVGb2N1c1RyYXBcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTaWRlbmF2Q29uZmlndXJhYmxlRm9jdXNUcmFwRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2lkZW5hdi1jb25maWd1cmFibGUtZm9jdXMtdHJhcC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdlwiXG4gIH0sXG4gIFwic2lkZW5hdi1kaXNhYmxlLWNsb3NlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LWRpc2FibGUtY2xvc2VcIixcbiAgICBcInRpdGxlXCI6IFwiU2lkZW5hdiB3aXRoIGN1c3RvbSBlc2NhcGUgYW5kIGJhY2tkcm9wIGNsaWNrIGJlaGF2aW9yXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdkRpc2FibGVDbG9zZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1kaXNhYmxlLWNsb3NlLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2lkZW5hdi1kaXNhYmxlLWNsb3NlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzaWRlbmF2LWRpc2FibGUtY2xvc2UtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtZGlzYWJsZS1jbG9zZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2lkZW5hdi1kaXNhYmxlLWNsb3NlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgfSxcbiAgXCJzaWRlbmF2LWRyYXdlci1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXYvc2lkZW5hdi1kcmF3ZXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgZHJhd2VyXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdkRyYXdlck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LWRyYXdlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtZHJhd2VyLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzaWRlbmF2LWRyYXdlci1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1kcmF3ZXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtZHJhd2VyLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgfSxcbiAgXCJzaWRlbmF2LWZpeGVkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LWZpeGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZpeGVkIHNpZGVuYXZcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTaWRlbmF2Rml4ZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNpZGVuYXYtZml4ZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzaWRlbmF2LWZpeGVkLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2XCJcbiAgfSxcbiAgXCJzaWRlbmF2LWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0U2lkZW5hdkhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTaWRlbmF2SGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2lkZW5hdi1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzaWRlbmF2LWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzaWRlbmF2LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdlwiXG4gIH0sXG4gIFwic2lkZW5hdi1tb2RlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LW1vZGVcIixcbiAgICBcInRpdGxlXCI6IFwiU2lkZW5hdiB3aXRoIGNvbmZpZ3VyYWJsZSBtb2RlXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdk1vZGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNpZGVuYXYtbW9kZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtbW9kZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1tb2RlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzaWRlbmF2LW1vZGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtbW9kZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdlwiXG4gIH0sXG4gIFwic2lkZW5hdi1vcGVuLWNsb3NlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LW9wZW4tY2xvc2VcIixcbiAgICBcInRpdGxlXCI6IFwiU2lkZW5hdiBvcGVuICYgY2xvc2UgYmVoYXZpb3JcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTaWRlbmF2T3BlbkNsb3NlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtb3Blbi1jbG9zZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1vcGVuLWNsb3NlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzaWRlbmF2LW9wZW4tY2xvc2UtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICB9LFxuICBcInNpZGVuYXYtb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgc2lkZW5hdlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNpZGVuYXZPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2lkZW5hdi1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNpZGVuYXYtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNpZGVuYXYtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NpZGVuYXZcIlxuICB9LFxuICBcInNpZGVuYXYtcG9zaXRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zaWRlbmF2L3NpZGVuYXYtcG9zaXRpb25cIixcbiAgICBcInRpdGxlXCI6IFwiSW1wbGljaXQgbWFpbiBjb250ZW50IHdpdGggdHdvIHNpZGVuYXZzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdlBvc2l0aW9uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzaWRlbmF2LXBvc2l0aW9uLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2lkZW5hdi1wb3NpdGlvbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1wb3NpdGlvbi1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2lkZW5hdi1wb3NpdGlvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2lkZW5hdi1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdlwiXG4gIH0sXG4gIFwic2lkZW5hdi1yZXNwb25zaXZlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdi9zaWRlbmF2LXJlc3BvbnNpdmVcIixcbiAgICBcInRpdGxlXCI6IFwiUmVzcG9uc2l2ZSBzaWRlbmF2XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2lkZW5hdlJlc3BvbnNpdmVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNpZGVuYXYtcmVzcG9uc2l2ZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInNpZGVuYXYtcmVzcG9uc2l2ZS1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2lkZW5hdi1yZXNwb25zaXZlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzaWRlbmF2LXJlc3BvbnNpdmUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNpZGVuYXYtcmVzcG9uc2l2ZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2lkZW5hdlwiXG4gIH0sXG4gIFwic2xpZGUtdG9nZ2xlLWNvbmZpZ3VyYWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlLXRvZ2dsZS9zbGlkZS10b2dnbGUtY29uZmlndXJhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNvbmZpZ3VyYWJsZSBzbGlkZS10b2dnbGVcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTbGlkZVRvZ2dsZUNvbmZpZ3VyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2xpZGUtdG9nZ2xlLWNvbmZpZ3VyYWJsZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInNsaWRlLXRvZ2dsZS1jb25maWd1cmFibGUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNsaWRlLXRvZ2dsZS1jb25maWd1cmFibGUtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNsaWRlLXRvZ2dsZS1jb25maWd1cmFibGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNsaWRlLXRvZ2dsZS1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlLXRvZ2dsZVwiXG4gIH0sXG4gIFwic2xpZGUtdG9nZ2xlLWZvcm1zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGUtdG9nZ2xlL3NsaWRlLXRvZ2dsZS1mb3Jtc1wiLFxuICAgIFwidGl0bGVcIjogXCJTbGlkZS10b2dnbGUgd2l0aCBmb3Jtc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNsaWRlVG9nZ2xlRm9ybXNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNsaWRlLXRvZ2dsZS1mb3Jtcy1leGFtcGxlLnRzXCIsXG4gICAgICBcIi4vc2xpZGUtdG9nZ2xlLWZvcm1zLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCIuL3NsaWRlLXRvZ2dsZS1mb3Jtcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2xpZGUtdG9nZ2xlLWZvcm1zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbGlkZS10b2dnbGUtZm9ybXMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlLXRvZ2dsZVwiXG4gIH0sXG4gIFwic2xpZGUtdG9nZ2xlLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbGlkZS10b2dnbGUvc2xpZGUtdG9nZ2xlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFNsaWRlVG9nZ2xlSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNsaWRlVG9nZ2xlSGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2xpZGUtdG9nZ2xlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbGlkZS10b2dnbGUtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic2xpZGUtdG9nZ2xlLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZS10b2dnbGUtaGFybmVzcy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2xpZGUtdG9nZ2xlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlLXRvZ2dsZVwiXG4gIH0sXG4gIFwic2xpZGUtdG9nZ2xlLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGUtdG9nZ2xlL3NsaWRlLXRvZ2dsZS1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyBzbGlkZS10b2dnbGVzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU2xpZGVUb2dnbGVPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2xpZGUtdG9nZ2xlLW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwic2xpZGUtdG9nZ2xlLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2xpZGUtdG9nZ2xlLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbGlkZS10b2dnbGUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlLXRvZ2dsZVwiXG4gIH0sXG4gIFwic2xpZGVyLWNvbmZpZ3VyYWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlci9zbGlkZXItY29uZmlndXJhYmxlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkNvbmZpZ3VyYWJsZSBzbGlkZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTbGlkZXJDb25maWd1cmFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNsaWRlci1jb25maWd1cmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbGlkZXItY29uZmlndXJhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzbGlkZXItY29uZmlndXJhYmxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZXItY29uZmlndXJhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbGlkZXItY29uZmlndXJhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zbGlkZXJcIlxuICB9LFxuICBcInNsaWRlci1mb3JtYXR0aW5nXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGVyL3NsaWRlci1mb3JtYXR0aW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNsaWRlciB3aXRoIGN1c3RvbSB0aHVtYiBsYWJlbCBmb3JtYXR0aW5nLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNsaWRlckZvcm1hdHRpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNsaWRlci1mb3JtYXR0aW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2xpZGVyLWZvcm1hdHRpbmctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNsaWRlci1mb3JtYXR0aW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbGlkZXItZm9ybWF0dGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2xpZGVyLWZvcm1hdHRpbmctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlclwiXG4gIH0sXG4gIFwic2xpZGVyLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbGlkZXIvc2xpZGVyLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFNsaWRlckhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTbGlkZXJIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbGlkZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNsaWRlci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzbGlkZXItaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNsaWRlci1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbGlkZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGVyXCJcbiAgfSxcbiAgXCJzbGlkZXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbGlkZXIvc2xpZGVyLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHNsaWRlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNsaWRlck92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbGlkZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbGlkZXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNsaWRlci1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic2xpZGVyLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbGlkZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3NsaWRlclwiXG4gIH0sXG4gIFwic2xpZGVyLXJhbmdlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc2xpZGVyL3NsaWRlci1yYW5nZVwiLFxuICAgIFwidGl0bGVcIjogXCJSYW5nZSBzbGlkZXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTbGlkZXJSYW5nZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic2xpZGVyLXJhbmdlLWV4YW1wbGUudHNcIixcbiAgICAgIFwic2xpZGVyLXJhbmdlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzbGlkZXItcmFuZ2UtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNsaWRlci1yYW5nZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic2xpZGVyLXJhbmdlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zbGlkZXJcIlxuICB9LFxuICBcInNuYWNrLWJhci1hbm5vdGF0ZWQtY29tcG9uZW50XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyL3NuYWNrLWJhci1hbm5vdGF0ZWQtY29tcG9uZW50XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNuYWNrLWJhciB3aXRoIGFuIGFubm90YXRlZCBjdXN0b20gY29tcG9uZW50XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU25hY2tCYXJBbm5vdGF0ZWRDb21wb25lbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNuYWNrLWJhci1hbm5vdGF0ZWQtY29tcG9uZW50LWV4YW1wbGUudHNcIixcbiAgICAgIFwic25hY2stYmFyLWFubm90YXRlZC1jb21wb25lbnQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInNuYWNrLWJhci1hbm5vdGF0ZWQtY29tcG9uZW50LWV4YW1wbGUuY3NzXCIsXG4gICAgICBcInNuYWNrLWJhci1hbm5vdGF0ZWQtY29tcG9uZW50LWV4YW1wbGUtc25hY2suaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic25hY2stYmFyLWFubm90YXRlZC1jb21wb25lbnQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJQaXp6YVBhcnR5QW5ub3RhdGVkQ29tcG9uZW50XCJcbiAgICBdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbmFjay1iYXItYW5ub3RhdGVkLWNvbXBvbmVudC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgfSxcbiAgXCJzbmFjay1iYXItY29tcG9uZW50XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyL3NuYWNrLWJhci1jb21wb25lbnRcIixcbiAgICBcInRpdGxlXCI6IFwiU25hY2stYmFyIHdpdGggYSBjdXN0b20gY29tcG9uZW50XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU25hY2tCYXJDb21wb25lbnRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNuYWNrLWJhci1jb21wb25lbnQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzbmFjay1iYXItY29tcG9uZW50LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzbmFjay1iYXItY29tcG9uZW50LWV4YW1wbGUuY3NzXCIsXG4gICAgICBcInNuYWNrLWJhci1jb21wb25lbnQtZXhhbXBsZS1zbmFjay5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbmFjay1iYXItY29tcG9uZW50LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtcbiAgICAgIFwiUGl6emFQYXJ0eUNvbXBvbmVudFwiXG4gICAgXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic25hY2stYmFyLWNvbXBvbmVudC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgfSxcbiAgXCJzbmFjay1iYXItaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NuYWNrLWJhci9zbmFjay1iYXItaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0U25hY2tCYXJIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU25hY2tCYXJIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzbmFjay1iYXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNuYWNrLWJhci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzbmFjay1iYXItaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInNuYWNrLWJhci1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzbmFjay1iYXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgfSxcbiAgXCJzbmFjay1iYXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbmFjay1iYXIvc25hY2stYmFyLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHNuYWNrLWJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNuYWNrQmFyT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNuYWNrLWJhci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInNuYWNrLWJhci1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic25hY2stYmFyLW92ZXJ2aWV3LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbmFjay1iYXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNuYWNrLWJhci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgfSxcbiAgXCJzbmFjay1iYXItcG9zaXRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zbmFjay1iYXIvc25hY2stYmFyLXBvc2l0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlNuYWNrLWJhciB3aXRoIGNvbmZpZ3VyYWJsZSBwb3NpdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlNuYWNrQmFyUG9zaXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInNuYWNrLWJhci1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcInNuYWNrLWJhci1wb3NpdGlvbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic25hY2stYmFyLXBvc2l0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzbmFjay1iYXItcG9zaXRpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNuYWNrLWJhci1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc25hY2stYmFyXCJcbiAgfSxcbiAgXCJzb3J0LWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zb3J0L3NvcnQtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0U29ydEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTb3J0SGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic29ydC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwic29ydC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzb3J0LWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzb3J0LWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInNvcnQtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc29ydFwiXG4gIH0sXG4gIFwic29ydC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3NvcnQvc29ydC1vdmVydmlld1wiLFxuICAgIFwidGl0bGVcIjogXCJTb3J0aW5nIG92ZXJ2aWV3XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU29ydE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzb3J0LW92ZXJ2aWV3LWV4YW1wbGUudHNcIixcbiAgICAgIFwic29ydC1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic29ydC1vdmVydmlldy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic29ydC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwic29ydC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc29ydFwiXG4gIH0sXG4gIFwic3RlcHBlci1hbmltYXRpb25zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLWFuaW1hdGlvbnNcIixcbiAgICBcInRpdGxlXCI6IFwiU3RlcHBlciBhbmltYXRpb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU3RlcHBlckFuaW1hdGlvbnNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInN0ZXBwZXItYW5pbWF0aW9ucy1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItYW5pbWF0aW9ucy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwic3RlcHBlci1hbmltYXRpb25zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzdGVwcGVyLWFuaW1hdGlvbnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItYW5pbWF0aW9ucy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlclwiXG4gIH0sXG4gIFwic3RlcHBlci1lZGl0YWJsZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXIvc3RlcHBlci1lZGl0YWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIHdpdGggZWRpdGFibGUgc3RlcHNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVyRWRpdGFibGVFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInN0ZXBwZXItZWRpdGFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzdGVwcGVyLWVkaXRhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLWVkaXRhYmxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzdGVwcGVyLWVkaXRhYmxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzdGVwcGVyLWVkaXRhYmxlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgfSxcbiAgXCJzdGVwcGVyLWVycm9yc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXIvc3RlcHBlci1lcnJvcnNcIixcbiAgICBcInRpdGxlXCI6IFwiU3RlcHBlciB0aGF0IGRpc3BsYXlzIGVycm9ycyBpbiB0aGUgc3RlcHNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVyRXJyb3JzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLWVycm9ycy1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItZXJyb3JzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLWVycm9ycy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1lcnJvcnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItZXJyb3JzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgfSxcbiAgXCJzdGVwcGVyLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0U3RlcHBlckhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwic3RlcHBlci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzdGVwcGVyLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlclwiXG4gIH0sXG4gIFwic3RlcHBlci1oZWFkZXItcG9zaXRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItaGVhZGVyLXBvc2l0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgaGVhZGVyIHBvc2l0aW9uXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU3RlcHBlckhlYWRlclBvc2l0aW9uRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLWhlYWRlci1wb3NpdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItaGVhZGVyLXBvc2l0aW9uLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1oZWFkZXItcG9zaXRpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItaGVhZGVyLXBvc2l0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgfSxcbiAgXCJzdGVwcGVyLWludGxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItaW50bFwiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIHRoYXQgdXNlcyB0aGUgTWF0U3RlcHBlckludGwgc2VydmljZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJJbnRsRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLWludGwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzdGVwcGVyLWludGwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItaW50bC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1pbnRsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzdGVwcGVyLWludGwtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICB9LFxuICBcInN0ZXBwZXItbGFiZWwtcG9zaXRpb24tYm90dG9tXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLWxhYmVsLXBvc2l0aW9uLWJvdHRvbVwiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIGxhYmVsIGJvdHRvbSBwb3NpdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJMYWJlbFBvc2l0aW9uQm90dG9tRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLWxhYmVsLXBvc2l0aW9uLWJvdHRvbS1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItbGFiZWwtcG9zaXRpb24tYm90dG9tLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLWxhYmVsLXBvc2l0aW9uLWJvdHRvbS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1sYWJlbC1wb3NpdGlvbi1ib3R0b20tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItbGFiZWwtcG9zaXRpb24tYm90dG9tLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgfSxcbiAgXCJzdGVwcGVyLWxhenktY29udGVudFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXIvc3RlcHBlci1sYXp5LWNvbnRlbnRcIixcbiAgICBcInRpdGxlXCI6IFwiU3RlcHBlciBsYXp5IGNvbnRlbnQgcmVuZGVyaW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiU3RlcHBlckxhenlDb250ZW50RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLWxhenktY29udGVudC1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItbGF6eS1jb250ZW50LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1sYXp5LWNvbnRlbnQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItbGF6eS1jb250ZW50LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgfSxcbiAgXCJzdGVwcGVyLW9wdGlvbmFsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLW9wdGlvbmFsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgd2l0aCBvcHRpb25hbCBzdGVwc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJPcHRpb25hbEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1vcHRpb25hbC1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItb3B0aW9uYWwtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICB9LFxuICBcInN0ZXBwZXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyL3N0ZXBwZXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiU3RlcHBlciBvdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwic3RlcHBlci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInN0ZXBwZXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICB9LFxuICBcInN0ZXBwZXItcmVzcG9uc2l2ZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXIvc3RlcHBlci1yZXNwb25zaXZlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgcmVzcG9uc2l2ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlN0ZXBwZXJSZXNwb25zaXZlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLXJlc3BvbnNpdmUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzdGVwcGVyLXJlc3BvbnNpdmUtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInN0ZXBwZXItcmVzcG9uc2l2ZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1yZXNwb25zaXZlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzdGVwcGVyLXJlc3BvbnNpdmUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3N0ZXBwZXJcIlxuICB9LFxuICBcInN0ZXBwZXItc3RhdGVzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLXN0YXRlc1wiLFxuICAgIFwidGl0bGVcIjogXCJTdGVwcGVyIHdpdGggY3VzdG9taXplZCBzdGF0ZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVyU3RhdGVzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJzdGVwcGVyLXN0YXRlcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInN0ZXBwZXItc3RhdGVzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLXN0YXRlcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwic3RlcHBlci1zdGF0ZXMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInN0ZXBwZXItc3RhdGVzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgfSxcbiAgXCJzdGVwcGVyLXZlcnRpY2FsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvc3RlcHBlci9zdGVwcGVyLXZlcnRpY2FsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlN0ZXBwZXIgdmVydGljYWxcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJTdGVwcGVyVmVydGljYWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInN0ZXBwZXItdmVydGljYWwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJzdGVwcGVyLXZlcnRpY2FsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJzdGVwcGVyLXZlcnRpY2FsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJzdGVwcGVyLXZlcnRpY2FsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJzdGVwcGVyLXZlcnRpY2FsLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC9zdGVwcGVyXCJcbiAgfSxcbiAgXCJ0YWJsZS1iYXNpY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWJhc2ljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHVzZSBvZiBgPHRhYmxlIG1hdC10YWJsZT5gXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVCYXNpY0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1iYXNpYy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtYmFzaWMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLWNvbHVtbi1zdHlsaW5nXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtY29sdW1uLXN0eWxpbmdcIixcbiAgICBcInRpdGxlXCI6IFwiU3R5bGluZyBjb2x1bW5zIHVzaW5nIHRoZWlyIGF1dG8tZ2VuZXJhdGVkIGNvbHVtbiBuYW1lc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlQ29sdW1uU3R5bGluZ0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtY29sdW1uLXN0eWxpbmctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1jb2x1bW4tc3R5bGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtY29sdW1uLXN0eWxpbmctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWNvbHVtbi1zdHlsaW5nLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1jb2x1bW4tc3R5bGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLWR5bmFtaWMtYXJyYXktZGF0YVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWR5bmFtaWMtYXJyYXktZGF0YVwiLFxuICAgIFwidGl0bGVcIjogXCJBZGRpbmcgYW5kIHJlbW92aW5nIGRhdGEgd2hlbiB1c2luZyBhbiBhcnJheS1iYXNlZCBkYXRhc291cmNlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRHluYW1pY0FycmF5RGF0YUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtZHluYW1pYy1hcnJheS1kYXRhLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtZHluYW1pYy1hcnJheS1kYXRhLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1keW5hbWljLWFycmF5LWRhdGEtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWR5bmFtaWMtYXJyYXktZGF0YS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtZHluYW1pYy1hcnJheS1kYXRhLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtZHluYW1pYy1jb2x1bW5zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtZHluYW1pYy1jb2x1bW5zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIGR5bmFtaWNhbGx5IGNoYW5naW5nIHRoZSBjb2x1bW5zIGRpc3BsYXllZFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRHluYW1pY0NvbHVtbnNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWR5bmFtaWMtY29sdW1ucy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWR5bmFtaWMtY29sdW1ucy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZHluYW1pYy1jb2x1bW5zLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1keW5hbWljLWNvbHVtbnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWR5bmFtaWMtY29sdW1ucy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLWR5bmFtaWMtb2JzZXJ2YWJsZS1kYXRhXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtZHluYW1pYy1vYnNlcnZhYmxlLWRhdGFcIixcbiAgICBcInRpdGxlXCI6IFwiQWRkaW5nIGFuZCByZW1vdmluZyBkYXRhIHdoZW4gdXNpbmcgYW4gb2JzZXJ2YWJsZS1iYXNlZCBkYXRhc291cmNlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRHluYW1pY09ic2VydmFibGVEYXRhRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1keW5hbWljLW9ic2VydmFibGUtZGF0YS1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWR5bmFtaWMtb2JzZXJ2YWJsZS1kYXRhLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1keW5hbWljLW9ic2VydmFibGUtZGF0YS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtZHluYW1pYy1vYnNlcnZhYmxlLWRhdGEtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWR5bmFtaWMtb2JzZXJ2YWJsZS1kYXRhLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtZXhwYW5kYWJsZS1yb3dzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtZXhwYW5kYWJsZS1yb3dzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHdpdGggZXhwYW5kYWJsZSByb3dzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVFeHBhbmRhYmxlUm93c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtZXhwYW5kYWJsZS1yb3dzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtZXhwYW5kYWJsZS1yb3dzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1leHBhbmRhYmxlLXJvd3MtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWV4cGFuZGFibGUtcm93cy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtZXhwYW5kYWJsZS1yb3dzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtZmlsdGVyaW5nXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtZmlsdGVyaW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHdpdGggZmlsdGVyaW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVGaWx0ZXJpbmdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLWZpbHRlcmluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWZpbHRlcmluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZmlsdGVyaW5nLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1maWx0ZXJpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWZpbHRlcmluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLWZsZXgtYmFzaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1mbGV4LWJhc2ljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHVzZSBvZiBgPG1hdC10YWJsZT5gICh1c2VzIGRpc3BsYXkgZmxleClcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZUZsZXhCYXNpY0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtZmxleC1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWZsZXgtYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgfSxcbiAgXCJ0YWJsZS1mbGV4LWxhcmdlLXJvd1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWZsZXgtbGFyZ2Utcm93XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZsZXggdGFibGUgd2hlcmUgb25lIGNvbHVtbidzIGNlbGxzIGhhcyBhIGdyZWF0ZXIgaGVpZ2h0IHRoYW4gb3RoZXJzLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRmxleExhcmdlUm93RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1mbGV4LWxhcmdlLXJvdy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWZsZXgtbGFyZ2Utcm93LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1mbGV4LWxhcmdlLXJvdy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtZmxleC1sYXJnZS1yb3ctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWZsZXgtbGFyZ2Utcm93LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtZm9vdGVyLXJvd1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWZvb3Rlci1yb3dcIixcbiAgICBcInRpdGxlXCI6IFwiRm9vdGVyIHJvdyB0YWJsZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlRm9vdGVyUm93RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1mb290ZXItcm93LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtZm9vdGVyLXJvdy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLWdlbmVyYXRlZC1jb2x1bW5zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtZ2VuZXJhdGVkLWNvbHVtbnNcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCBjb2x1bW5zIGRlZmluZWQgdXNpbmcgYSBmb3IgbG9vcCBpbnN0ZWFkIG9mIHN0YXRpY2FsbHkgd3JpdHRlbiBpbiB0aGUgdGVtcGxhdGUuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVHZW5lcmF0ZWRDb2x1bW5zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1nZW5lcmF0ZWQtY29sdW1ucy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWdlbmVyYXRlZC1jb2x1bW5zLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1nZW5lcmF0ZWQtY29sdW1ucy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtZ2VuZXJhdGVkLWNvbHVtbnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWdlbmVyYXRlZC1jb2x1bW5zLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtaGFybmVzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFRhYmxlSGFybmVzc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlSGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWhhcm5lc3MtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtaHR0cFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLWh0dHBcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgcmV0cmlldmluZyBkYXRhIHRocm91Z2ggSFRUUFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlSHR0cEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtaHR0cC1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLWh0dHAtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLWh0dHAtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLWh0dHAtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLWh0dHAtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgfSxcbiAgXCJ0YWJsZS1tdWx0aXBsZS1oZWFkZXItZm9vdGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3RlclwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB3aXRoIG11bHRpcGxlIGhlYWRlciBhbmQgZm9vdGVyIHJvd3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZU11bHRpcGxlSGVhZGVyRm9vdGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1tdWx0aXBsZS1oZWFkZXItZm9vdGVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlci1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiRGF0YSB0YWJsZSB3aXRoIHNvcnRpbmcsIHBhZ2luYXRpb24sIGFuZCBmaWx0ZXJpbmcuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLXBhZ2luYXRpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1wYWdpbmF0aW9uXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHdpdGggcGFnaW5hdGlvblwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlUGFnaW5hdGlvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtcGFnaW5hdGlvbi1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXBhZ2luYXRpb24tZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXBhZ2luYXRpb24tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXBhZ2luYXRpb24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXBhZ2luYXRpb24tZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgfSxcbiAgXCJ0YWJsZS1yZWN5Y2xlLXJvd3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1yZWN5Y2xlLXJvd3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgdGhhdCB1c2VzIHRoZSByZWN5Y2xlIHZpZXcgcmVwZWF0ZXIgc3RyYXRlZ3kuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVSZWN5Y2xlUm93c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1yZWN5Y2xlLXJvd3MtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXJlY3ljbGUtcm93cy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtcmVjeWNsZS1yb3dzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtcmVvcmRlcmFibGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1yZW9yZGVyYWJsZVwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB3aXRoIHJlLW9yZGVyYWJsZSBjb2x1bW5zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVSZW9yZGVyYWJsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtcmVvcmRlcmFibGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCIuL3RhYmxlLXJlb3JkZXJhYmxlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCIuL3RhYmxlLXJlb3JkZXJhYmxlLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1yZW9yZGVyYWJsZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtcmVvcmRlcmFibGUtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgfSxcbiAgXCJ0YWJsZS1yb3ctYmluZGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLXJvdy1iaW5kaW5nXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJpbmRpbmcgZXZlbnQgaGFuZGxlcnMgYW5kIHByb3BlcnRpZXMgdG8gdGhlIHRhYmxlIHJvd3MuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVSb3dCaW5kaW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1yb3ctYmluZGluZy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXJvdy1iaW5kaW5nLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1yb3ctYmluZGluZy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtcm93LWJpbmRpbmctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXJvdy1iaW5kaW5nLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtcm93LWNvbnRleHRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1yb3ctY29udGV4dFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSBzaG93aW5nIGVhY2ggcm93IGNvbnRleHQgcHJvcGVydGllcy5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVJvd0NvbnRleHRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXJvdy1jb250ZXh0LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtcm93LWNvbnRleHQtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXJvdy1jb250ZXh0LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1yb3ctY29udGV4dC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtcm93LWNvbnRleHQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgfSxcbiAgXCJ0YWJsZS1zZWxlY3Rpb25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1zZWxlY3Rpb25cIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCBzZWxlY3Rpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVNlbGVjdGlvbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtc2VsZWN0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1zZWxlY3Rpb24tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXNlbGVjdGlvbi1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtc2VsZWN0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtc29ydGluZ1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLXNvcnRpbmdcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCBzb3J0aW5nXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVTb3J0aW5nRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1zb3J0aW5nLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtc29ydGluZy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtc29ydGluZy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtc29ydGluZy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtc29ydGluZy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLXN0aWNreS1jb2x1bW5zXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtc3RpY2t5LWNvbHVtbnNcIixcbiAgICBcInRpdGxlXCI6IFwiVGFibGUgd2l0aCBzdGlja3kgY29sdW1uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlU3RpY2t5Q29sdW1uc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtc3RpY2t5LWNvbHVtbnMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1zdGlja3ktY29sdW1ucy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWNvbHVtbnMtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXN0aWNreS1jb2x1bW5zLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1zdGlja3ktY29sdW1ucy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLXN0aWNreS1jb21wbGV4LWZsZXhcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1zdGlja3ktY29tcGxleC1mbGV4XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkZsZXgtbGF5b3V0IHRhYmxlcyB3aXRoIHRvZ2dsZS1hYmxlIHN0aWNreSBoZWFkZXJzLCBmb290ZXJzLCBhbmQgY29sdW1uc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlU3RpY2t5Q29tcGxleEZsZXhFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXN0aWNreS1jb21wbGV4LWZsZXgtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS1zdGlja3ktY29tcGxleC1mbGV4LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS1zdGlja3ktY29tcGxleC1mbGV4LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1zdGlja3ktY29tcGxleC1mbGV4LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS1zdGlja3ktY29tcGxleC1mbGV4LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtc3RpY2t5LWNvbXBsZXhcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1zdGlja3ktY29tcGxleFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZXMgd2l0aCB0b2dnbGUtYWJsZSBzdGlja3kgaGVhZGVycywgZm9vdGVycywgYW5kIGNvbHVtbnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVN0aWNreUNvbXBsZXhFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYmxlLXN0aWNreS1jb21wbGV4LWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWNvbXBsZXgtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYmxlLXN0aWNreS1jb21wbGV4LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS1zdGlja3ktY29tcGxleC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtc3RpY2t5LWNvbXBsZXgtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgfSxcbiAgXCJ0YWJsZS1zdGlja3ktZm9vdGVyXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtc3RpY2t5LWZvb3RlclwiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZSB3aXRoIGEgc3RpY2t5IGZvb3RlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlU3RpY2t5Rm9vdGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1zdGlja3ktZm9vdGVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWZvb3Rlci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWZvb3Rlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtc3RpY2t5LWZvb3Rlci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtc3RpY2t5LWZvb3Rlci1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLXN0aWNreS1oZWFkZXJcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS1zdGlja3ktaGVhZGVyXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIHdpdGggc3RpY2t5IGhlYWRlclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlU3RpY2t5SGVhZGVyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS1zdGlja3ktaGVhZGVyLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWhlYWRlci1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtc3RpY2t5LWhlYWRlci1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtc3RpY2t5LWhlYWRlci1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFibGUtc3RpY2t5LWhlYWRlci1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLXRleHQtY29sdW1uLWFkdmFuY2VkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGUvdGFibGUtdGV4dC1jb2x1bW4tYWR2YW5jZWRcIixcbiAgICBcInRpdGxlXCI6IFwiVXNlIG9mICdtYXQtdGV4dC1jb2x1bW4nIHdpdGggdmFyaW91cyBjb25maWd1cmF0aW9ucyBvZiB0aGUgaW50ZXJmYWNlLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlVGV4dENvbHVtbkFkdmFuY2VkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS10ZXh0LWNvbHVtbi1hZHZhbmNlZC1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYmxlLXRleHQtY29sdW1uLWFkdmFuY2VkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWJsZS10ZXh0LWNvbHVtbi1hZHZhbmNlZC1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFibGUtdGV4dC1jb2x1bW4tYWR2YW5jZWQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXRleHQtY29sdW1uLWFkdmFuY2VkLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJsZVwiXG4gIH0sXG4gIFwidGFibGUtdGV4dC1jb2x1bW5cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS10ZXh0LWNvbHVtblwiLFxuICAgIFwidGl0bGVcIjogXCJVc2Ugb2YgYG1hdC10ZXh0LWNvbHVtbmAgd2hpY2ggY2FuIGJlIHVzZWQgZm9yIHNpbXBsZSBjb2x1bW5zIHRoYXQgb25seSBuZWVkIHRvIGRpc3BsYXlcXG5hIHRleHQgdmFsdWUgZm9yIHRoZSBoZWFkZXIgYW5kIGNlbGxzLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYmxlVGV4dENvbHVtbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFibGUtdGV4dC1jb2x1bW4tZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS10ZXh0LWNvbHVtbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtdGV4dC1jb2x1bW4tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXRleHQtY29sdW1uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWJsZS10ZXh0LWNvbHVtbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLXdpdGgtcmlwcGxlc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlL3RhYmxlLXdpdGgtcmlwcGxlc1wiLFxuICAgIFwidGl0bGVcIjogXCJUYWJsZXMgd2l0aCBNYXRlcmlhbCBEZXNpZ24gcmlwcGxlcy5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJsZVdpdGhSaXBwbGVzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS13aXRoLXJpcHBsZXMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWJsZS13aXRoLXJpcHBsZXMtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWJsZS13aXRoLXJpcHBsZXMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXdpdGgtcmlwcGxlcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFibGVcIlxuICB9LFxuICBcInRhYmxlLXdyYXBwZWRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJsZS90YWJsZS13cmFwcGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYmxlIGV4YW1wbGUgdGhhdCBzaG93cyBob3cgdG8gd3JhcCBhIHRhYmxlIGNvbXBvbmVudCBmb3IgZGVmaW5pdGlvbiBhbmQgYmVoYXZpb3IgcmV1c2UuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFibGVXcmFwcGVkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWJsZS13cmFwcGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFibGUtd3JhcHBlZC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFibGUtd3JhcHBlZC1leGFtcGxlLmNzc1wiLFxuICAgICAgXCJ3cmFwcGVyLXRhYmxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYmxlLXdyYXBwZWQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW1xuICAgICAgXCJXcmFwcGVyVGFibGVcIlxuICAgIF0sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYmxlLXdyYXBwZWQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYmxlXCJcbiAgfSxcbiAgXCJ0YWItZ3JvdXAtYWxpZ25cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1hbGlnblwiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCBhbGlnbmVkIGxhYmVsc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwQWxpZ25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1hbGlnbi1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1hbGlnbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFiLWdyb3VwLWFsaWduLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtYWxpZ24tZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1hbGlnbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gIH0sXG4gIFwidGFiLWdyb3VwLWFuaW1hdGlvbnNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1hbmltYXRpb25zXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCBhbmltYXRpb25zXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBBbmltYXRpb25zRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItZ3JvdXAtYW5pbWF0aW9ucy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1hbmltYXRpb25zLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtYW5pbWF0aW9ucy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLWdyb3VwLWFuaW1hdGlvbnMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1hbmltYXRpb25zLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0YWItZ3JvdXAtYXN5bmNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1hc3luY1wiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCBhc3luY2hyb25vdXNseSBsb2FkaW5nIHRhYiBjb250ZW50c1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwQXN5bmNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1hc3luYy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1hc3luYy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1hc3luYy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFiLWdyb3VwLWFzeW5jLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0YWItZ3JvdXAtYmFzaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1iYXNpY1wiLFxuICAgIFwidGl0bGVcIjogXCJCYXNpYyB1c2Ugb2YgdGhlIHRhYiBncm91cFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwQmFzaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1iYXNpYy1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1iYXNpYy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFiLWdyb3VwLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0YWItZ3JvdXAtY3VzdG9tLWxhYmVsXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFicy90YWItZ3JvdXAtY3VzdG9tLWxhYmVsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlVzaW5nIHRhYnMgd2l0aCBhIGN1c3RvbSBsYWJlbCB0ZW1wbGF0ZVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwQ3VzdG9tTGFiZWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1jdXN0b20tbGFiZWwtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItZ3JvdXAtY3VzdG9tLWxhYmVsLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtY3VzdG9tLWxhYmVsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtY3VzdG9tLWxhYmVsLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtY3VzdG9tLWxhYmVsLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0YWItZ3JvdXAtZHluYW1pYy1oZWlnaHRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1keW5hbWljLWhlaWdodFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCBkeW5hbWljIGhlaWdodCBiYXNlZCBvbiB0YWIgY29udGVudHNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJHcm91cER5bmFtaWNIZWlnaHRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1keW5hbWljLWhlaWdodC1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1keW5hbWljLWhlaWdodC1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidGFiLWdyb3VwLWR5bmFtaWMtaGVpZ2h0LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtZHluYW1pYy1oZWlnaHQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1keW5hbWljLWhlaWdodC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gIH0sXG4gIFwidGFiLWdyb3VwLWR5bmFtaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1keW5hbWljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCB3aXRoIGR5bmFtaWNhbGx5IGNoYW5naW5nIHRhYnNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJHcm91cER5bmFtaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1keW5hbWljLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWR5bmFtaWMtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRhYi1ncm91cC1keW5hbWljLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtZHluYW1pYy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidGFiLWdyb3VwLWR5bmFtaWMtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICB9LFxuICBcInRhYi1ncm91cC1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFicy90YWItZ3JvdXAtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0VGFiR3JvdXBIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBIYXJuZXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItZ3JvdXAtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtaGFybmVzcy1leGFtcGxlLnNwZWMudHNcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gIH0sXG4gIFwidGFiLWdyb3VwLWhlYWRlci1iZWxvd1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWhlYWRlci1iZWxvd1wiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCB0aGUgaGVhZGVycyBvbiB0aGUgYm90dG9tXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBIZWFkZXJCZWxvd0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWhlYWRlci1iZWxvdy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1oZWFkZXItYmVsb3ctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtaGVhZGVyLWJlbG93LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtaGVhZGVyLWJlbG93LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0YWItZ3JvdXAtaW5rLWJhclwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWluay1iYXJcIixcbiAgICBcInRpdGxlXCI6IFwiVGFiIGdyb3VwIHdpdGggaW5rIGJhciBmaXQgdG8gY29udGVudFwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwSW5rQmFyRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItZ3JvdXAtaW5rLWJhci1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1ncm91cC1pbmstYmFyLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLWdyb3VwLWluay1iYXItZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1pbmstYmFyLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0YWItZ3JvdXAtaW52ZXJ0ZWRcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90YWJzL3RhYi1ncm91cC1pbnZlcnRlZFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCBpbnZlcnRlZCB0YWJzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBJbnZlcnRlZEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLWludmVydGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLWludmVydGVkLWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLWdyb3VwLWludmVydGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtaW52ZXJ0ZWQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICB9LFxuICBcInRhYi1ncm91cC1sYXp5LWxvYWRlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLWxhenktbG9hZGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRhYiBncm91cCB3aGVyZSB0aGUgdGFiIGNvbnRlbnQgaXMgbG9hZGVkIGxhemlseSAod2hlbiBhY3RpdmF0ZWQpXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBMYXp5TG9hZGVkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItZ3JvdXAtbGF6eS1sb2FkZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItZ3JvdXAtbGF6eS1sb2FkZWQtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtbGF6eS1sb2FkZWQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1sYXp5LWxvYWRlZC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gIH0sXG4gIFwidGFiLWdyb3VwLXBhZ2luYXRlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLXBhZ2luYXRlZFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCBwYWdpbmF0ZWQgdGFic1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYkdyb3VwUGFnaW5hdGVkRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItZ3JvdXAtcGFnaW5hdGVkLWV4YW1wbGUudHNcIixcbiAgICAgIFwidGFiLWdyb3VwLXBhZ2luYXRlZC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1wYWdpbmF0ZWQtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1ncm91cC1wYWdpbmF0ZWQtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RhYnNcIlxuICB9LFxuICBcInRhYi1ncm91cC1wcmVzZXJ2ZS1jb250ZW50XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdGFicy90YWItZ3JvdXAtcHJlc2VydmUtY29udGVudFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgdGhhdCBrZWVwcyBpdHMgY29udGVudCBpbnNpZGUgdGhlIERPTSB3aGVuIGl0J3Mgb2ZmLXNjcmVlbi5cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUYWJHcm91cFByZXNlcnZlQ29udGVudEV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidGFiLWdyb3VwLXByZXNlcnZlLWNvbnRlbnQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItZ3JvdXAtcHJlc2VydmUtY29udGVudC1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRhYi1ncm91cC1wcmVzZXJ2ZS1jb250ZW50LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtcHJlc2VydmUtY29udGVudC1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdGFic1wiXG4gIH0sXG4gIFwidGFiLWdyb3VwLXN0cmV0Y2hlZFwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLWdyb3VwLXN0cmV0Y2hlZFwiLFxuICAgIFwidGl0bGVcIjogXCJUYWIgZ3JvdXAgd2l0aCBzdHJldGNoZWQgbGFiZWxzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVGFiR3JvdXBTdHJldGNoZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRhYi1ncm91cC1zdHJldGNoZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0YWItZ3JvdXAtc3RyZXRjaGVkLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0YWItbmF2LWJhci1iYXNpY1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RhYnMvdGFiLW5hdi1iYXItYmFzaWNcIixcbiAgICBcInRpdGxlXCI6IFwiQmFzaWMgdXNlIG9mIHRoZSB0YWIgbmF2IGJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRhYk5hdkJhckJhc2ljRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0YWItbmF2LWJhci1iYXNpYy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRhYi1uYXYtYmFyLWJhc2ljLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0YWItbmF2LWJhci1iYXNpYy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidGFiLW5hdi1iYXItYmFzaWMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRhYi1uYXYtYmFyLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90YWJzXCJcbiAgfSxcbiAgXCJ0b29sYmFyLWJhc2ljXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbGJhci90b29sYmFyLWJhc2ljXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHRvb2xiYXJcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sYmFyQmFzaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2xiYXItYmFzaWMtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sYmFyLWJhc2ljLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sYmFyXCJcbiAgfSxcbiAgXCJ0b29sYmFyLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sYmFyL3Rvb2xiYXItaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0VG9vbGJhckhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sYmFySGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbGJhci1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbGJhci1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sYmFyLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sYmFyLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2xiYXItaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbGJhclwiXG4gIH0sXG4gIFwidG9vbGJhci1tdWx0aXJvd1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2xiYXIvdG9vbGJhci1tdWx0aXJvd1wiLFxuICAgIFwidGl0bGVcIjogXCJNdWx0aS1yb3cgdG9vbGJhclwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRvb2xiYXJNdWx0aXJvd0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbGJhci1tdWx0aXJvdy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2xiYXItbXVsdGlyb3ctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRvb2xiYXItbXVsdGlyb3ctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2xiYXItbXVsdGlyb3ctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2xiYXItbXVsdGlyb3ctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2xiYXJcIlxuICB9LFxuICBcInRvb2xiYXItb3ZlcnZpZXdcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sYmFyL3Rvb2xiYXItb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiVG9vbGJhciBvdmVydmlld1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRvb2xiYXJPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbGJhci1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2xiYXItb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2xiYXJcIlxuICB9LFxuICBcInRvb2xiYXItc2ltcGxlXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbGJhci90b29sYmFyLXNpbXBsZVwiLFxuICAgIFwidGl0bGVcIjogXCJUb29sYmFyIHdpdGgganVzdCB0ZXh0XCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVG9vbGJhclNpbXBsZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbGJhci1zaW1wbGUtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sYmFyLXNpbXBsZS1leGFtcGxlLmh0bWxcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2xiYXItc2ltcGxlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sYmFyLXNpbXBsZS1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbGJhclwiXG4gIH0sXG4gIFwidG9vbHRpcC1hdXRvLWhpZGVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwL3Rvb2x0aXAtYXV0by1oaWRlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgdGhhdCBkZW1vbnN0cmF0ZXMgYXV0by1oaWRpbmcgd2hlbiBpdCBjbGlwcyBvdXQgb2YgaXRzIHNjcm9sbGluZyBjb250YWluZXIuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVG9vbHRpcEF1dG9IaWRlRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLWF1dG8taGlkZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2x0aXAtYXV0by1oaWRlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLWF1dG8taGlkZS1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidG9vbHRpcC1hdXRvLWhpZGUtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2x0aXAtYXV0by1oaWRlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgfSxcbiAgXCJ0b29sdGlwLWN1c3RvbS1jbGFzc1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1jdXN0b20tY2xhc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVG9vbHRpcCB0aGF0IGNhbiBoYXZlIGEgY3VzdG9tIGNsYXNzIGFwcGxpZWQuXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVG9vbHRpcEN1c3RvbUNsYXNzRXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0b29sdGlwLWN1c3RvbS1jbGFzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2x0aXAtY3VzdG9tLWNsYXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLWN1c3RvbS1jbGFzcy1leGFtcGxlLmNzc1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidG9vbHRpcC1jdXN0b20tY2xhc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2x0aXAtY3VzdG9tLWNsYXNzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgfSxcbiAgXCJ0b29sdGlwLWRlbGF5XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcC90b29sdGlwLWRlbGF5XCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgd2l0aCBhIHNob3cgYW5kIGhpZGUgZGVsYXlcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwRGVsYXlFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtZGVsYXktZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLWRlbGF5LWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLWRlbGF5LWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLWRlbGF5LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sdGlwLWRlbGF5LWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgfSxcbiAgXCJ0b29sdGlwLWRpc2FibGVkXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcC90b29sdGlwLWRpc2FibGVkXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgdGhhdCBjYW4gYmUgZGlzYWJsZWRcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwRGlzYWJsZWRFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtZGlzYWJsZWQtZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sdGlwLWRpc2FibGVkLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgfSxcbiAgXCJ0b29sdGlwLWhhcm5lc3NcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwL3Rvb2x0aXAtaGFybmVzc1wiLFxuICAgIFwidGl0bGVcIjogXCJUZXN0aW5nIHdpdGggTWF0VG9vbHRpcEhhcm5lc3NcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwSGFybmVzc0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbHRpcC1oYXJuZXNzLWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1oYXJuZXNzLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLWhhcm5lc3MtZXhhbXBsZS5zcGVjLnRzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLWhhcm5lc3MtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRvb2x0aXAtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gIH0sXG4gIFwidG9vbHRpcC1tYW51YWxcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwL3Rvb2x0aXAtbWFudWFsXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgdGhhdCBjYW4gYmUgbWFudWFsbHkgc2hvd24vaGlkZGVuLlwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRvb2x0aXBNYW51YWxFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtbWFudWFsLWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1tYW51YWwtZXhhbXBsZS5odG1sXCIsXG4gICAgICBcInRvb2x0aXAtbWFudWFsLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLW1hbnVhbC1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbHRpcC1tYW51YWwtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXBcIlxuICB9LFxuICBcInRvb2x0aXAtbWVzc2FnZVwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1tZXNzYWdlXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgd2l0aCBhIGNoYW5naW5nIG1lc3NhZ2VcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwTWVzc2FnZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbHRpcC1tZXNzYWdlLWV4YW1wbGUudHNcIixcbiAgICAgIFwidG9vbHRpcC1tZXNzYWdlLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLW1lc3NhZ2UtZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2x0aXAtbWVzc2FnZS1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbHRpcC1tZXNzYWdlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgfSxcbiAgXCJ0b29sdGlwLW1vZGlmaWVkLWRlZmF1bHRzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcC90b29sdGlwLW1vZGlmaWVkLWRlZmF1bHRzXCIsXG4gICAgXCJ0aXRsZVwiOiBcIlRvb2x0aXAgd2l0aCBhIHNob3cgYW5kIGhpZGUgZGVsYXlcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwTW9kaWZpZWREZWZhdWx0c0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbHRpcC1tb2RpZmllZC1kZWZhdWx0cy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRvb2x0aXAtbW9kaWZpZWQtZGVmYXVsdHMtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLW1vZGlmaWVkLWRlZmF1bHRzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sdGlwLW1vZGlmaWVkLWRlZmF1bHRzLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgfSxcbiAgXCJ0b29sdGlwLW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcC90b29sdGlwLW92ZXJ2aWV3XCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHRvb2x0aXBcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwT3ZlcnZpZXdFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLW92ZXJ2aWV3LWV4YW1wbGUuaHRtbFwiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidG9vbHRpcC1vdmVydmlldy1leGFtcGxlXCIsXG4gICAgXCJhZGRpdGlvbmFsQ29tcG9uZW50c1wiOiBbXSxcbiAgICBcInByaW1hcnlGaWxlXCI6IFwidG9vbHRpcC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gIH0sXG4gIFwidG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW5cIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwL3Rvb2x0aXAtcG9zaXRpb24tYXQtb3JpZ2luXCIsXG4gICAgXCJ0aXRsZVwiOiBcIkJhc2ljIHRvb2x0aXBcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwUG9zaXRpb25BdE9yaWdpbkV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4tZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLXBvc2l0aW9uLWF0LW9yaWdpbi1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4tZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRvb2x0aXAtcG9zaXRpb24tYXQtb3JpZ2luLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sdGlwLXBvc2l0aW9uLWF0LW9yaWdpbi1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdG9vbHRpcFwiXG4gIH0sXG4gIFwidG9vbHRpcC1wb3NpdGlvblwiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3Rvb2x0aXAvdG9vbHRpcC1wb3NpdGlvblwiLFxuICAgIFwidGl0bGVcIjogXCJUb29sdGlwIHdpdGggYSBjdXN0b20gcG9zaXRpb25cIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUb29sdGlwUG9zaXRpb25FeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRvb2x0aXAtcG9zaXRpb24tZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGUuaHRtbFwiLFxuICAgICAgXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0b29sdGlwLXBvc2l0aW9uLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90b29sdGlwXCJcbiAgfSxcbiAgXCJ0cmVlLWR5bmFtaWNcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90cmVlL3RyZWUtZHluYW1pY1wiLFxuICAgIFwidGl0bGVcIjogXCJUcmVlIHdpdGggZHluYW1pYyBkYXRhXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVHJlZUR5bmFtaWNFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRyZWUtZHluYW1pYy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRyZWUtZHluYW1pYy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidHJlZS1keW5hbWljLWV4YW1wbGUuY3NzXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0cmVlLWR5bmFtaWMtZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRyZWUtZHluYW1pYy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZVwiXG4gIH0sXG4gIFwidHJlZS1mbGF0LW92ZXJ2aWV3XCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZS90cmVlLWZsYXQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiVHJlZSB3aXRoIGZsYXQgbm9kZXNcIixcbiAgICBcImNvbXBvbmVudE5hbWVcIjogXCJUcmVlRmxhdE92ZXJ2aWV3RXhhbXBsZVwiLFxuICAgIFwiZmlsZXNcIjogW1xuICAgICAgXCJ0cmVlLWZsYXQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0cmVlLWZsYXQtb3ZlcnZpZXctZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0cmVlLWZsYXQtb3ZlcnZpZXctZXhhbXBsZVwiLFxuICAgIFwiYWRkaXRpb25hbENvbXBvbmVudHNcIjogW10sXG4gICAgXCJwcmltYXJ5RmlsZVwiOiBcInRyZWUtZmxhdC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZVwiXG4gIH0sXG4gIFwidHJlZS1oYXJuZXNzXCI6IHtcbiAgICBcInBhY2thZ2VQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZS90cmVlLWhhcm5lc3NcIixcbiAgICBcInRpdGxlXCI6IFwiVGVzdGluZyB3aXRoIE1hdFRyZWVIYXJuZXNzXCIsXG4gICAgXCJjb21wb25lbnROYW1lXCI6IFwiVHJlZUhhcm5lc3NFeGFtcGxlXCIsXG4gICAgXCJmaWxlc1wiOiBbXG4gICAgICBcInRyZWUtaGFybmVzcy1leGFtcGxlLnRzXCIsXG4gICAgICBcInRyZWUtaGFybmVzcy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidHJlZS1oYXJuZXNzLWV4YW1wbGUuc3BlYy50c1wiXG4gICAgXSxcbiAgICBcInNlbGVjdG9yXCI6IFwidHJlZS1oYXJuZXNzLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0cmVlLWhhcm5lc3MtZXhhbXBsZS50c1wiLFxuICAgIFwiaW1wb3J0UGF0aFwiOiBcIm1hdGVyaWFsL3RyZWVcIlxuICB9LFxuICBcInRyZWUtbG9hZG1vcmVcIjoge1xuICAgIFwicGFja2FnZVBhdGhcIjogXCJtYXRlcmlhbC90cmVlL3RyZWUtbG9hZG1vcmVcIixcbiAgICBcInRpdGxlXCI6IFwiVHJlZSB3aXRoIHBhcnRpYWxseSBsb2FkZWQgZGF0YVwiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRyZWVMb2FkbW9yZUV4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidHJlZS1sb2FkbW9yZS1leGFtcGxlLnRzXCIsXG4gICAgICBcInRyZWUtbG9hZG1vcmUtZXhhbXBsZS5odG1sXCJcbiAgICBdLFxuICAgIFwic2VsZWN0b3JcIjogXCJ0cmVlLWxvYWRtb3JlLWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0cmVlLWxvYWRtb3JlLWV4YW1wbGUudHNcIixcbiAgICBcImltcG9ydFBhdGhcIjogXCJtYXRlcmlhbC90cmVlXCJcbiAgfSxcbiAgXCJ0cmVlLW5lc3RlZC1vdmVydmlld1wiOiB7XG4gICAgXCJwYWNrYWdlUGF0aFwiOiBcIm1hdGVyaWFsL3RyZWUvdHJlZS1uZXN0ZWQtb3ZlcnZpZXdcIixcbiAgICBcInRpdGxlXCI6IFwiVHJlZSB3aXRoIG5lc3RlZCBub2Rlc1wiLFxuICAgIFwiY29tcG9uZW50TmFtZVwiOiBcIlRyZWVOZXN0ZWRPdmVydmlld0V4YW1wbGVcIixcbiAgICBcImZpbGVzXCI6IFtcbiAgICAgIFwidHJlZS1uZXN0ZWQtb3ZlcnZpZXctZXhhbXBsZS50c1wiLFxuICAgICAgXCJ0cmVlLW5lc3RlZC1vdmVydmlldy1leGFtcGxlLmh0bWxcIixcbiAgICAgIFwidHJlZS1uZXN0ZWQtb3ZlcnZpZXctZXhhbXBsZS5jc3NcIlxuICAgIF0sXG4gICAgXCJzZWxlY3RvclwiOiBcInRyZWUtbmVzdGVkLW92ZXJ2aWV3LWV4YW1wbGVcIixcbiAgICBcImFkZGl0aW9uYWxDb21wb25lbnRzXCI6IFtdLFxuICAgIFwicHJpbWFyeUZpbGVcIjogXCJ0cmVlLW5lc3RlZC1vdmVydmlldy1leGFtcGxlLnRzXCIsXG4gICAgXCJpbXBvcnRQYXRoXCI6IFwibWF0ZXJpYWwvdHJlZVwiXG4gIH1cbn07XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZEV4YW1wbGUoaWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gIHN3aXRjaCAoaWQpIHtcbiAgY2FzZSAnY2RrLXBvcG92ZXItZWRpdC1jZGstdGFibGUtZmxleCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0Jyk7XG4gIGNhc2UgJ2Nkay1wb3BvdmVyLWVkaXQtY2RrLXRhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQnKTtcbiAgY2FzZSAnY2RrLXBvcG92ZXItZWRpdC1jZWxsLXNwYW4tdmFuaWxsYS10YWJsZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0Jyk7XG4gIGNhc2UgJ2Nkay1wb3BvdmVyLWVkaXQtdGFiLW91dC12YW5pbGxhLXRhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQnKTtcbiAgY2FzZSAnY2RrLXBvcG92ZXItZWRpdC12YW5pbGxhLXRhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQnKTtcbiAgY2FzZSAnY2RrLXNlbGVjdGlvbi1jb2x1bW4nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGstZXhwZXJpbWVudGFsL3NlbGVjdGlvbicpO1xuICBjYXNlICdjZGstc2VsZWN0aW9uLWxpc3QnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGstZXhwZXJpbWVudGFsL3NlbGVjdGlvbicpO1xuICBjYXNlICdmb2N1cy1tb25pdG9yLWRpcmVjdGl2ZXMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvYTExeScpO1xuICBjYXNlICdmb2N1cy1tb25pdG9yLWZvY3VzLXZpYSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9hMTF5Jyk7XG4gIGNhc2UgJ2ZvY3VzLW1vbml0b3Itb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvYTExeScpO1xuICBjYXNlICdjZGstYWNjb3JkaW9uLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2FjY29yZGlvbicpO1xuICBjYXNlICdjZGstY2xpcGJvYXJkLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2NsaXBib2FyZCcpO1xuICBjYXNlICdjZGstZGlhbG9nLWRhdGEnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZGlhbG9nJyk7XG4gIGNhc2UgJ2Nkay1kaWFsb2ctb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZGlhbG9nJyk7XG4gIGNhc2UgJ2Nkay1kaWFsb2ctc3R5bGluZyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9kaWFsb2cnKTtcbiAgY2FzZSAnY2RrLWRyYWctZHJvcC1heGlzLWxvY2snOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZHJhZy1kcm9wJyk7XG4gIGNhc2UgJ2Nkay1kcmFnLWRyb3AtYm91bmRhcnknOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZHJhZy1kcm9wJyk7XG4gIGNhc2UgJ2Nkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmctZ3JvdXAnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZHJhZy1kcm9wJyk7XG4gIGNhc2UgJ2Nkay1kcmFnLWRyb3AtY29ubmVjdGVkLXNvcnRpbmcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZHJhZy1kcm9wJyk7XG4gIGNhc2UgJ2Nkay1kcmFnLWRyb3AtY3VzdG9tLXBsYWNlaG9sZGVyJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdjZGstZHJhZy1kcm9wLWN1c3RvbS1wcmV2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdjZGstZHJhZy1kcm9wLWRlbGF5JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdjZGstZHJhZy1kcm9wLWRpc2FibGVkLXNvcnRpbmcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZHJhZy1kcm9wJyk7XG4gIGNhc2UgJ2Nkay1kcmFnLWRyb3AtZGlzYWJsZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZHJhZy1kcm9wJyk7XG4gIGNhc2UgJ2Nkay1kcmFnLWRyb3AtZW50ZXItcHJlZGljYXRlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdjZGstZHJhZy1kcm9wLWZyZWUtZHJhZy1wb3NpdGlvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9kcmFnLWRyb3AnKTtcbiAgY2FzZSAnY2RrLWRyYWctZHJvcC1oYW5kbGUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvZHJhZy1kcm9wJyk7XG4gIGNhc2UgJ2Nkay1kcmFnLWRyb3AtaG9yaXpvbnRhbC1zb3J0aW5nJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdjZGstZHJhZy1kcm9wLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdjZGstZHJhZy1kcm9wLXJvb3QtZWxlbWVudCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9kcmFnLWRyb3AnKTtcbiAgY2FzZSAnY2RrLWRyYWctZHJvcC1zb3J0LXByZWRpY2F0ZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9kcmFnLWRyb3AnKTtcbiAgY2FzZSAnY2RrLWRyYWctZHJvcC1zb3J0aW5nJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdjZGstZHJhZy1kcm9wLXRhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2RyYWctZHJvcCcpO1xuICBjYXNlICdicmVha3BvaW50LW9ic2VydmVyLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xheW91dCcpO1xuICBjYXNlICdjZGstbGlzdGJveC1hY3RpdmVkZXNjZW5kYW50JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xpc3Rib3gnKTtcbiAgY2FzZSAnY2RrLWxpc3Rib3gtY29tcGFyZS13aXRoJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xpc3Rib3gnKTtcbiAgY2FzZSAnY2RrLWxpc3Rib3gtY3VzdG9tLW5hdmlnYXRpb24nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbGlzdGJveCcpO1xuICBjYXNlICdjZGstbGlzdGJveC1jdXN0b20tdHlwZWFoZWFkJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xpc3Rib3gnKTtcbiAgY2FzZSAnY2RrLWxpc3Rib3gtZGlzYWJsZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbGlzdGJveCcpO1xuICBjYXNlICdjZGstbGlzdGJveC1mb3Jtcy12YWxpZGF0aW9uJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xpc3Rib3gnKTtcbiAgY2FzZSAnY2RrLWxpc3Rib3gtaG9yaXpvbnRhbCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9saXN0Ym94Jyk7XG4gIGNhc2UgJ2Nkay1saXN0Ym94LW11bHRpcGxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xpc3Rib3gnKTtcbiAgY2FzZSAnY2RrLWxpc3Rib3gtb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbGlzdGJveCcpO1xuICBjYXNlICdjZGstbGlzdGJveC1yZWFjdGl2ZS1mb3Jtcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9saXN0Ym94Jyk7XG4gIGNhc2UgJ2Nkay1saXN0Ym94LXRlbXBsYXRlLWZvcm1zJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL2xpc3Rib3gnKTtcbiAgY2FzZSAnY2RrLWxpc3Rib3gtdmFsdWUtYmluZGluZyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9saXN0Ym94Jyk7XG4gIGNhc2UgJ2Nkay1tZW51LWNvbnRleHQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbWVudScpO1xuICBjYXNlICdjZGstbWVudS1pbmxpbmUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbWVudScpO1xuICBjYXNlICdjZGstbWVudS1tZW51YmFyJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL21lbnUnKTtcbiAgY2FzZSAnY2RrLW1lbnUtbmVzdGVkLWNvbnRleHQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbWVudScpO1xuICBjYXNlICdjZGstbWVudS1zdGFuZGFsb25lLW1lbnUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbWVudScpO1xuICBjYXNlICdjZGstbWVudS1zdGFuZGFsb25lLXN0YXRlZnVsLW1lbnUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvbWVudScpO1xuICBjYXNlICdjZGstb3ZlcmxheS1iYXNpYyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9vdmVybGF5Jyk7XG4gIGNhc2UgJ2Nkay1wbGF0Zm9ybS1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9wbGF0Zm9ybScpO1xuICBjYXNlICdjZGstcG9ydGFsLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3BvcnRhbCcpO1xuICBjYXNlICdjZGstdmlydHVhbC1zY3JvbGwtYXBwZW5kLW9ubHknOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvc2Nyb2xsaW5nJyk7XG4gIGNhc2UgJ2Nkay12aXJ0dWFsLXNjcm9sbC1jb250ZXh0JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3Njcm9sbGluZycpO1xuICBjYXNlICdjZGstdmlydHVhbC1zY3JvbGwtY3VzdG9tLXN0cmF0ZWd5JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3Njcm9sbGluZycpO1xuICBjYXNlICdjZGstdmlydHVhbC1zY3JvbGwtZGF0YS1zb3VyY2UnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvc2Nyb2xsaW5nJyk7XG4gIGNhc2UgJ2Nkay12aXJ0dWFsLXNjcm9sbC1kbCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9zY3JvbGxpbmcnKTtcbiAgY2FzZSAnY2RrLXZpcnR1YWwtc2Nyb2xsLWZpeGVkLWJ1ZmZlcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9zY3JvbGxpbmcnKTtcbiAgY2FzZSAnY2RrLXZpcnR1YWwtc2Nyb2xsLWhvcml6b250YWwnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvc2Nyb2xsaW5nJyk7XG4gIGNhc2UgJ2Nkay12aXJ0dWFsLXNjcm9sbC1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9zY3JvbGxpbmcnKTtcbiAgY2FzZSAnY2RrLXZpcnR1YWwtc2Nyb2xsLXBhcmVudC1zY3JvbGxpbmcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvc2Nyb2xsaW5nJyk7XG4gIGNhc2UgJ2Nkay12aXJ0dWFsLXNjcm9sbC10ZW1wbGF0ZS1jYWNoZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay9zY3JvbGxpbmcnKTtcbiAgY2FzZSAnY2RrLXZpcnR1YWwtc2Nyb2xsLXdpbmRvdy1zY3JvbGxpbmcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvc2Nyb2xsaW5nJyk7XG4gIGNhc2UgJ2Nkay1jdXN0b20tc3RlcHBlci13aXRob3V0LWZvcm0nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvc3RlcHBlcicpO1xuICBjYXNlICdjZGstbGluZWFyLXN0ZXBwZXItd2l0aC1mb3JtJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3N0ZXBwZXInKTtcbiAgY2FzZSAnY2RrLXRhYmxlLWJhc2ljJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3RhYmxlJyk7XG4gIGNhc2UgJ2Nkay10YWJsZS1maXhlZC1sYXlvdXQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvdGFibGUnKTtcbiAgY2FzZSAnY2RrLXRhYmxlLWZsZXgtYmFzaWMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvdGFibGUnKTtcbiAgY2FzZSAnY2RrLXRhYmxlLXJlY3ljbGUtcm93cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay90YWJsZScpO1xuICBjYXNlICd0ZXh0LWZpZWxkLWF1dG9maWxsLWRpcmVjdGl2ZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay90ZXh0LWZpZWxkJyk7XG4gIGNhc2UgJ3RleHQtZmllbGQtYXV0b2ZpbGwtbW9uaXRvcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL2Nkay90ZXh0LWZpZWxkJyk7XG4gIGNhc2UgJ3RleHQtZmllbGQtYXV0b3NpemUtdGV4dGFyZWEnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9jZGsvdGV4dC1maWVsZCcpO1xuICBjYXNlICdjZGstdHJlZS1mbGF0JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3RyZWUnKTtcbiAgY2FzZSAnY2RrLXRyZWUtbmVzdGVkJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvY2RrL3RyZWUnKTtcbiAgY2FzZSAnZGVmYXVsdC1lbmFibGVkLWNvbHVtbi1yZXNpemUtZmxleCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsLWV4cGVyaW1lbnRhbC9jb2x1bW4tcmVzaXplJyk7XG4gIGNhc2UgJ2RlZmF1bHQtZW5hYmxlZC1jb2x1bW4tcmVzaXplJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwtZXhwZXJpbWVudGFsL2NvbHVtbi1yZXNpemUnKTtcbiAgY2FzZSAnb3B0LWluLWNvbHVtbi1yZXNpemUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC1leHBlcmltZW50YWwvY29sdW1uLXJlc2l6ZScpO1xuICBjYXNlICdwb3BvdmVyLWVkaXQtY2VsbC1zcGFuLW1hdC10YWJsZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsLWV4cGVyaW1lbnRhbC9wb3BvdmVyLWVkaXQnKTtcbiAgY2FzZSAncG9wb3Zlci1lZGl0LW1hdC10YWJsZS1mbGV4JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdCcpO1xuICBjYXNlICdwb3BvdmVyLWVkaXQtbWF0LXRhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwtZXhwZXJpbWVudGFsL3BvcG92ZXItZWRpdCcpO1xuICBjYXNlICdwb3BvdmVyLWVkaXQtdGFiLW91dC1tYXQtdGFibGUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC1leHBlcmltZW50YWwvcG9wb3Zlci1lZGl0Jyk7XG4gIGNhc2UgJ21hdC1zZWxlY3Rpb24tY29sdW1uJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwtZXhwZXJpbWVudGFsL3NlbGVjdGlvbicpO1xuICBjYXNlICdtYXQtc2VsZWN0aW9uLWxpc3QnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC1leHBlcmltZW50YWwvc2VsZWN0aW9uJyk7XG4gIGNhc2UgJ2F1dG9jb21wbGV0ZS1hdXRvLWFjdGl2ZS1maXJzdC1vcHRpb24nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9hdXRvY29tcGxldGUnKTtcbiAgY2FzZSAnYXV0b2NvbXBsZXRlLWRpc3BsYXknOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9hdXRvY29tcGxldGUnKTtcbiAgY2FzZSAnYXV0b2NvbXBsZXRlLWZpbHRlcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2F1dG9jb21wbGV0ZScpO1xuICBjYXNlICdhdXRvY29tcGxldGUtaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2F1dG9jb21wbGV0ZScpO1xuICBjYXNlICdhdXRvY29tcGxldGUtb3B0Z3JvdXAnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9hdXRvY29tcGxldGUnKTtcbiAgY2FzZSAnYXV0b2NvbXBsZXRlLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvYXV0b2NvbXBsZXRlJyk7XG4gIGNhc2UgJ2F1dG9jb21wbGV0ZS1wbGFpbi1pbnB1dCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2F1dG9jb21wbGV0ZScpO1xuICBjYXNlICdhdXRvY29tcGxldGUtcmVxdWlyZS1zZWxlY3Rpb24nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9hdXRvY29tcGxldGUnKTtcbiAgY2FzZSAnYXV0b2NvbXBsZXRlLXNpbXBsZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2F1dG9jb21wbGV0ZScpO1xuICBjYXNlICdiYWRnZS1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvYmFkZ2UnKTtcbiAgY2FzZSAnYmFkZ2Utb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9iYWRnZScpO1xuICBjYXNlICdib3R0b20tc2hlZXQtaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2JvdHRvbS1zaGVldCcpO1xuICBjYXNlICdib3R0b20tc2hlZXQtb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9ib3R0b20tc2hlZXQnKTtcbiAgY2FzZSAnYnV0dG9uLXRvZ2dsZS1hcHBlYXJhbmNlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZScpO1xuICBjYXNlICdidXR0b24tdG9nZ2xlLWZvcm1zJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvYnV0dG9uLXRvZ2dsZScpO1xuICBjYXNlICdidXR0b24tdG9nZ2xlLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9idXR0b24tdG9nZ2xlJyk7XG4gIGNhc2UgJ2J1dHRvbi10b2dnbGUtbW9kZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2J1dHRvbi10b2dnbGUnKTtcbiAgY2FzZSAnYnV0dG9uLXRvZ2dsZS1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2J1dHRvbi10b2dnbGUnKTtcbiAgY2FzZSAnYnV0dG9uLWRpc2FibGVkLWludGVyYWN0aXZlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvYnV0dG9uJyk7XG4gIGNhc2UgJ2J1dHRvbi1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvYnV0dG9uJyk7XG4gIGNhc2UgJ2J1dHRvbi1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2J1dHRvbicpO1xuICBjYXNlICdjYXJkLWFjdGlvbnMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jYXJkJyk7XG4gIGNhc2UgJ2NhcmQtZmFuY3knOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jYXJkJyk7XG4gIGNhc2UgJ2NhcmQtZm9vdGVyJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvY2FyZCcpO1xuICBjYXNlICdjYXJkLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jYXJkJyk7XG4gIGNhc2UgJ2NhcmQtbWVkaWEtc2l6ZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2NhcmQnKTtcbiAgY2FzZSAnY2FyZC1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2NhcmQnKTtcbiAgY2FzZSAnY2hlY2tib3gtY29uZmlndXJhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvY2hlY2tib3gnKTtcbiAgY2FzZSAnY2hlY2tib3gtaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2NoZWNrYm94Jyk7XG4gIGNhc2UgJ2NoZWNrYm94LW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvY2hlY2tib3gnKTtcbiAgY2FzZSAnY2hlY2tib3gtcmVhY3RpdmUtZm9ybXMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGVja2JveCcpO1xuICBjYXNlICdjaGlwcy1hdXRvY29tcGxldGUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGlwcycpO1xuICBjYXNlICdjaGlwcy1hdmF0YXInOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGlwcycpO1xuICBjYXNlICdjaGlwcy1kcmFnLWRyb3AnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGlwcycpO1xuICBjYXNlICdjaGlwcy1mb3JtLWNvbnRyb2wnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGlwcycpO1xuICBjYXNlICdjaGlwcy1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvY2hpcHMnKTtcbiAgY2FzZSAnY2hpcHMtaW5wdXQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGlwcycpO1xuICBjYXNlICdjaGlwcy1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2NoaXBzJyk7XG4gIGNhc2UgJ2NoaXBzLXN0YWNrZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jaGlwcycpO1xuICBjYXNlICdlbGV2YXRpb24tb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9jb3JlJyk7XG4gIGNhc2UgJ3JpcHBsZS1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2NvcmUnKTtcbiAgY2FzZSAnZGF0ZS1yYW5nZS1waWNrZXItY29tcGFyaXNvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZS1yYW5nZS1waWNrZXItZm9ybXMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RhdGUtcmFuZ2UtcGlja2VyLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGF0ZXBpY2tlcicpO1xuICBjYXNlICdkYXRlLXJhbmdlLXBpY2tlci1zZWxlY3Rpb24tc3RyYXRlZ3knOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RhdGVwaWNrZXItYWN0aW9ucyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci1hcGknOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RhdGVwaWNrZXItY3VzdG9tLWhlYWRlcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci1jdXN0b20taWNvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci1kYXRlLWNsYXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGF0ZXBpY2tlcicpO1xuICBjYXNlICdkYXRlcGlja2VyLWRpc2FibGVkJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGF0ZXBpY2tlcicpO1xuICBjYXNlICdkYXRlcGlja2VyLWV2ZW50cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci1maWx0ZXInOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RhdGVwaWNrZXItZm9ybWF0cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGF0ZXBpY2tlcicpO1xuICBjYXNlICdkYXRlcGlja2VyLWlubGluZS1jYWxlbmRhcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci1sb2NhbGUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RhdGVwaWNrZXItbWluLW1heCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci1tb21lbnQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RhdGVwaWNrZXItb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RhdGVwaWNrZXItc3RhcnQtdmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci10b3VjaCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci12YWx1ZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RhdGVwaWNrZXInKTtcbiAgY2FzZSAnZGF0ZXBpY2tlci12aWV3cy1zZWxlY3Rpb24nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kYXRlcGlja2VyJyk7XG4gIGNhc2UgJ2RpYWxvZy1hbmltYXRpb25zJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGlhbG9nJyk7XG4gIGNhc2UgJ2RpYWxvZy1jb250ZW50JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGlhbG9nJyk7XG4gIGNhc2UgJ2RpYWxvZy1kYXRhJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGlhbG9nJyk7XG4gIGNhc2UgJ2RpYWxvZy1lbGVtZW50cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RpYWxvZycpO1xuICBjYXNlICdkaWFsb2ctZnJvbS1tZW51JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGlhbG9nJyk7XG4gIGNhc2UgJ2RpYWxvZy1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZGlhbG9nJyk7XG4gIGNhc2UgJ2RpYWxvZy1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2RpYWxvZycpO1xuICBjYXNlICdkaXZpZGVyLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kaXZpZGVyJyk7XG4gIGNhc2UgJ2RpdmlkZXItb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9kaXZpZGVyJyk7XG4gIGNhc2UgJ2V4cGFuc2lvbi1leHBhbmQtY29sbGFwc2UtYWxsJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZXhwYW5zaW9uJyk7XG4gIGNhc2UgJ2V4cGFuc2lvbi1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZXhwYW5zaW9uJyk7XG4gIGNhc2UgJ2V4cGFuc2lvbi1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2V4cGFuc2lvbicpO1xuICBjYXNlICdleHBhbnNpb24tc3RlcHMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9leHBhbnNpb24nKTtcbiAgY2FzZSAnZm9ybS1maWVsZC1hcHBlYXJhbmNlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZm9ybS1maWVsZCcpO1xuICBjYXNlICdmb3JtLWZpZWxkLWN1c3RvbS1jb250cm9sJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZm9ybS1maWVsZCcpO1xuICBjYXNlICdmb3JtLWZpZWxkLWVycm9yJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZm9ybS1maWVsZCcpO1xuICBjYXNlICdmb3JtLWZpZWxkLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9mb3JtLWZpZWxkJyk7XG4gIGNhc2UgJ2Zvcm0tZmllbGQtaGludCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2Zvcm0tZmllbGQnKTtcbiAgY2FzZSAnZm9ybS1maWVsZC1sYWJlbCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2Zvcm0tZmllbGQnKTtcbiAgY2FzZSAnZm9ybS1maWVsZC1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2Zvcm0tZmllbGQnKTtcbiAgY2FzZSAnZm9ybS1maWVsZC1wcmVmaXgtc3VmZml4JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvZm9ybS1maWVsZCcpO1xuICBjYXNlICdncmlkLWxpc3QtZHluYW1pYyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2dyaWQtbGlzdCcpO1xuICBjYXNlICdncmlkLWxpc3QtaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2dyaWQtbGlzdCcpO1xuICBjYXNlICdncmlkLWxpc3Qtb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9ncmlkLWxpc3QnKTtcbiAgY2FzZSAnaWNvbi1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvaWNvbicpO1xuICBjYXNlICdpY29uLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvaWNvbicpO1xuICBjYXNlICdpY29uLXN2Zyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2ljb24nKTtcbiAgY2FzZSAnaW5wdXQtY2xlYXJhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvaW5wdXQnKTtcbiAgY2FzZSAnaW5wdXQtZXJyb3Itc3RhdGUtbWF0Y2hlcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2lucHV0Jyk7XG4gIGNhc2UgJ2lucHV0LWVycm9ycyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2lucHV0Jyk7XG4gIGNhc2UgJ2lucHV0LWZvcm0nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9pbnB1dCcpO1xuICBjYXNlICdpbnB1dC1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvaW5wdXQnKTtcbiAgY2FzZSAnaW5wdXQtaGludCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2lucHV0Jyk7XG4gIGNhc2UgJ2lucHV0LW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvaW5wdXQnKTtcbiAgY2FzZSAnaW5wdXQtcHJlZml4LXN1ZmZpeCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2lucHV0Jyk7XG4gIGNhc2UgJ2xpc3QtaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2xpc3QnKTtcbiAgY2FzZSAnbGlzdC1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2xpc3QnKTtcbiAgY2FzZSAnbGlzdC1zZWN0aW9ucyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2xpc3QnKTtcbiAgY2FzZSAnbGlzdC1zZWxlY3Rpb24nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9saXN0Jyk7XG4gIGNhc2UgJ2xpc3Qtc2luZ2xlLXNlbGVjdGlvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2xpc3QnKTtcbiAgY2FzZSAnbGlzdC12YXJpYW50cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2xpc3QnKTtcbiAgY2FzZSAnbWVudS1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvbWVudScpO1xuICBjYXNlICdtZW51LWljb25zJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvbWVudScpO1xuICBjYXNlICdtZW51LW5lc3RlZCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL21lbnUnKTtcbiAgY2FzZSAnbWVudS1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL21lbnUnKTtcbiAgY2FzZSAnbWVudS1wb3NpdGlvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL21lbnUnKTtcbiAgY2FzZSAncGFnaW5hdG9yLWNvbmZpZ3VyYWJsZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3BhZ2luYXRvcicpO1xuICBjYXNlICdwYWdpbmF0b3ItaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3BhZ2luYXRvcicpO1xuICBjYXNlICdwYWdpbmF0b3ItaW50bCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3BhZ2luYXRvcicpO1xuICBjYXNlICdwYWdpbmF0b3Itb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9wYWdpbmF0b3InKTtcbiAgY2FzZSAncHJvZ3Jlc3MtYmFyLWJ1ZmZlcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Byb2dyZXNzLWJhcicpO1xuICBjYXNlICdwcm9ncmVzcy1iYXItY29uZmlndXJhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyJyk7XG4gIGNhc2UgJ3Byb2dyZXNzLWJhci1kZXRlcm1pbmF0ZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Byb2dyZXNzLWJhcicpO1xuICBjYXNlICdwcm9ncmVzcy1iYXItaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Byb2dyZXNzLWJhcicpO1xuICBjYXNlICdwcm9ncmVzcy1iYXItaW5kZXRlcm1pbmF0ZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Byb2dyZXNzLWJhcicpO1xuICBjYXNlICdwcm9ncmVzcy1iYXItcXVlcnknOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9wcm9ncmVzcy1iYXInKTtcbiAgY2FzZSAncHJvZ3Jlc3Mtc3Bpbm5lci1jb25maWd1cmFibGUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9wcm9ncmVzcy1zcGlubmVyJyk7XG4gIGNhc2UgJ3Byb2dyZXNzLXNwaW5uZXItaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXInKTtcbiAgY2FzZSAncHJvZ3Jlc3Mtc3Bpbm5lci1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Byb2dyZXNzLXNwaW5uZXInKTtcbiAgY2FzZSAncmFkaW8taGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3JhZGlvJyk7XG4gIGNhc2UgJ3JhZGlvLW5nLW1vZGVsJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvcmFkaW8nKTtcbiAgY2FzZSAncmFkaW8tb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9yYWRpbycpO1xuICBjYXNlICdzZWxlY3QtY3VzdG9tLXRyaWdnZXInOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zZWxlY3QnKTtcbiAgY2FzZSAnc2VsZWN0LWRpc2FibGVkJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1lcnJvci1zdGF0ZS1tYXRjaGVyJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1mb3JtJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1oaW50LWVycm9yJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1pbml0aWFsLXZhbHVlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1tdWx0aXBsZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NlbGVjdCcpO1xuICBjYXNlICdzZWxlY3Qtbm8tcmlwcGxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1vcHRncm91cCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NlbGVjdCcpO1xuICBjYXNlICdzZWxlY3Qtb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zZWxlY3QnKTtcbiAgY2FzZSAnc2VsZWN0LXBhbmVsLWNsYXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1yZWFjdGl2ZS1mb3JtJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2VsZWN0Jyk7XG4gIGNhc2UgJ3NlbGVjdC1yZXNldCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NlbGVjdCcpO1xuICBjYXNlICdzZWxlY3QtdmFsdWUtYmluZGluZyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NlbGVjdCcpO1xuICBjYXNlICdzaWRlbmF2LWF1dG9zaXplJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LWJhY2tkcm9wJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LWNvbmZpZ3VyYWJsZS1mb2N1cy10cmFwJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LWRpc2FibGUtY2xvc2UnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zaWRlbmF2Jyk7XG4gIGNhc2UgJ3NpZGVuYXYtZHJhd2VyLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LWZpeGVkJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zaWRlbmF2Jyk7XG4gIGNhc2UgJ3NpZGVuYXYtbW9kZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NpZGVuYXYnKTtcbiAgY2FzZSAnc2lkZW5hdi1vcGVuLWNsb3NlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LXBvc2l0aW9uJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2lkZW5hdicpO1xuICBjYXNlICdzaWRlbmF2LXJlc3BvbnNpdmUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zaWRlbmF2Jyk7XG4gIGNhc2UgJ3NsaWRlLXRvZ2dsZS1jb25maWd1cmFibGUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zbGlkZS10b2dnbGUnKTtcbiAgY2FzZSAnc2xpZGUtdG9nZ2xlLWZvcm1zJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2xpZGUtdG9nZ2xlJyk7XG4gIGNhc2UgJ3NsaWRlLXRvZ2dsZS1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2xpZGUtdG9nZ2xlJyk7XG4gIGNhc2UgJ3NsaWRlLXRvZ2dsZS1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NsaWRlLXRvZ2dsZScpO1xuICBjYXNlICdzbGlkZXItY29uZmlndXJhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2xpZGVyJyk7XG4gIGNhc2UgJ3NsaWRlci1mb3JtYXR0aW5nJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2xpZGVyJyk7XG4gIGNhc2UgJ3NsaWRlci1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc2xpZGVyJyk7XG4gIGNhc2UgJ3NsaWRlci1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NsaWRlcicpO1xuICBjYXNlICdzbGlkZXItcmFuZ2UnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zbGlkZXInKTtcbiAgY2FzZSAnc25hY2stYmFyLWFubm90YXRlZC1jb21wb25lbnQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zbmFjay1iYXInKTtcbiAgY2FzZSAnc25hY2stYmFyLWNvbXBvbmVudCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NuYWNrLWJhcicpO1xuICBjYXNlICdzbmFjay1iYXItaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NuYWNrLWJhcicpO1xuICBjYXNlICdzbmFjay1iYXItb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zbmFjay1iYXInKTtcbiAgY2FzZSAnc25hY2stYmFyLXBvc2l0aW9uJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc25hY2stYmFyJyk7XG4gIGNhc2UgJ3NvcnQtaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NvcnQnKTtcbiAgY2FzZSAnc29ydC1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3NvcnQnKTtcbiAgY2FzZSAnc3RlcHBlci1hbmltYXRpb25zJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc3RlcHBlcicpO1xuICBjYXNlICdzdGVwcGVyLWVkaXRhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc3RlcHBlcicpO1xuICBjYXNlICdzdGVwcGVyLWVycm9ycyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3N0ZXBwZXInKTtcbiAgY2FzZSAnc3RlcHBlci1oYXJuZXNzJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc3RlcHBlcicpO1xuICBjYXNlICdzdGVwcGVyLWhlYWRlci1wb3NpdGlvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3N0ZXBwZXInKTtcbiAgY2FzZSAnc3RlcHBlci1pbnRsJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvc3RlcHBlcicpO1xuICBjYXNlICdzdGVwcGVyLWxhYmVsLXBvc2l0aW9uLWJvdHRvbSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3N0ZXBwZXInKTtcbiAgY2FzZSAnc3RlcHBlci1sYXp5LWNvbnRlbnQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zdGVwcGVyJyk7XG4gIGNhc2UgJ3N0ZXBwZXItb3B0aW9uYWwnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zdGVwcGVyJyk7XG4gIGNhc2UgJ3N0ZXBwZXItb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zdGVwcGVyJyk7XG4gIGNhc2UgJ3N0ZXBwZXItcmVzcG9uc2l2ZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3N0ZXBwZXInKTtcbiAgY2FzZSAnc3RlcHBlci1zdGF0ZXMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zdGVwcGVyJyk7XG4gIGNhc2UgJ3N0ZXBwZXItdmVydGljYWwnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9zdGVwcGVyJyk7XG4gIGNhc2UgJ3RhYmxlLWJhc2ljJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFibGUnKTtcbiAgY2FzZSAndGFibGUtY29sdW1uLXN0eWxpbmcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1keW5hbWljLWFycmF5LWRhdGEnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1keW5hbWljLWNvbHVtbnMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1keW5hbWljLW9ic2VydmFibGUtZGF0YSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLWV4cGFuZGFibGUtcm93cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLWZpbHRlcmluZyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLWZsZXgtYmFzaWMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1mbGV4LWxhcmdlLXJvdyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLWZvb3Rlci1yb3cnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1nZW5lcmF0ZWQtY29sdW1ucyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1odHRwJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFibGUnKTtcbiAgY2FzZSAndGFibGUtbXVsdGlwbGUtaGVhZGVyLWZvb3Rlcic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFibGUnKTtcbiAgY2FzZSAndGFibGUtcGFnaW5hdGlvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXJlY3ljbGUtcm93cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXJlb3JkZXJhYmxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFibGUnKTtcbiAgY2FzZSAndGFibGUtcm93LWJpbmRpbmcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1yb3ctY29udGV4dCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXNlbGVjdGlvbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXNvcnRpbmcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1zdGlja3ktY29sdW1ucyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXN0aWNreS1jb21wbGV4LWZsZXgnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1zdGlja3ktY29tcGxleCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXN0aWNreS1mb290ZXInOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS1zdGlja3ktaGVhZGVyJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFibGUnKTtcbiAgY2FzZSAndGFibGUtdGV4dC1jb2x1bW4tYWR2YW5jZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWJsZS10ZXh0LWNvbHVtbic6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXdpdGgtcmlwcGxlcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYmxlJyk7XG4gIGNhc2UgJ3RhYmxlLXdyYXBwZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJsZScpO1xuICBjYXNlICd0YWItZ3JvdXAtYWxpZ24nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJzJyk7XG4gIGNhc2UgJ3RhYi1ncm91cC1hbmltYXRpb25zJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFicycpO1xuICBjYXNlICd0YWItZ3JvdXAtYXN5bmMnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJzJyk7XG4gIGNhc2UgJ3RhYi1ncm91cC1iYXNpYyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYnMnKTtcbiAgY2FzZSAndGFiLWdyb3VwLWN1c3RvbS1sYWJlbCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYnMnKTtcbiAgY2FzZSAndGFiLWdyb3VwLWR5bmFtaWMtaGVpZ2h0JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFicycpO1xuICBjYXNlICd0YWItZ3JvdXAtZHluYW1pYyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYnMnKTtcbiAgY2FzZSAndGFiLWdyb3VwLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJzJyk7XG4gIGNhc2UgJ3RhYi1ncm91cC1oZWFkZXItYmVsb3cnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJzJyk7XG4gIGNhc2UgJ3RhYi1ncm91cC1pbmstYmFyJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFicycpO1xuICBjYXNlICd0YWItZ3JvdXAtaW52ZXJ0ZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJzJyk7XG4gIGNhc2UgJ3RhYi1ncm91cC1sYXp5LWxvYWRlZCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYnMnKTtcbiAgY2FzZSAndGFiLWdyb3VwLXBhZ2luYXRlZCc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RhYnMnKTtcbiAgY2FzZSAndGFiLWdyb3VwLXByZXNlcnZlLWNvbnRlbnQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJzJyk7XG4gIGNhc2UgJ3RhYi1ncm91cC1zdHJldGNoZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90YWJzJyk7XG4gIGNhc2UgJ3RhYi1uYXYtYmFyLWJhc2ljJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdGFicycpO1xuICBjYXNlICd0b29sYmFyLWJhc2ljJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdG9vbGJhcicpO1xuICBjYXNlICd0b29sYmFyLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sYmFyJyk7XG4gIGNhc2UgJ3Rvb2xiYXItbXVsdGlyb3cnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sYmFyJyk7XG4gIGNhc2UgJ3Rvb2xiYXItb3ZlcnZpZXcnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sYmFyJyk7XG4gIGNhc2UgJ3Rvb2xiYXItc2ltcGxlJzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdG9vbGJhcicpO1xuICBjYXNlICd0b29sdGlwLWF1dG8taGlkZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Rvb2x0aXAnKTtcbiAgY2FzZSAndG9vbHRpcC1jdXN0b20tY2xhc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sdGlwJyk7XG4gIGNhc2UgJ3Rvb2x0aXAtZGVsYXknOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sdGlwJyk7XG4gIGNhc2UgJ3Rvb2x0aXAtZGlzYWJsZWQnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sdGlwJyk7XG4gIGNhc2UgJ3Rvb2x0aXAtaGFybmVzcyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Rvb2x0aXAnKTtcbiAgY2FzZSAndG9vbHRpcC1tYW51YWwnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sdGlwJyk7XG4gIGNhc2UgJ3Rvb2x0aXAtbWVzc2FnZSc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Rvb2x0aXAnKTtcbiAgY2FzZSAndG9vbHRpcC1tb2RpZmllZC1kZWZhdWx0cyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Rvb2x0aXAnKTtcbiAgY2FzZSAndG9vbHRpcC1vdmVydmlldyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3Rvb2x0aXAnKTtcbiAgY2FzZSAndG9vbHRpcC1wb3NpdGlvbi1hdC1vcmlnaW4nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sdGlwJyk7XG4gIGNhc2UgJ3Rvb2x0aXAtcG9zaXRpb24nOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90b29sdGlwJyk7XG4gIGNhc2UgJ3RyZWUtZHluYW1pYyc6XG5yZXR1cm4gaW1wb3J0KCdAYW5ndWxhci9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL3RyZWUnKTtcbiAgY2FzZSAndHJlZS1mbGF0LW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdHJlZScpO1xuICBjYXNlICd0cmVlLWhhcm5lc3MnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90cmVlJyk7XG4gIGNhc2UgJ3RyZWUtbG9hZG1vcmUnOlxucmV0dXJuIGltcG9ydCgnQGFuZ3VsYXIvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC90cmVlJyk7XG4gIGNhc2UgJ3RyZWUtbmVzdGVkLW92ZXJ2aWV3JzpcbnJldHVybiBpbXBvcnQoJ0Bhbmd1bGFyL2NvbXBvbmVudHMtZXhhbXBsZXMvbWF0ZXJpYWwvdHJlZScpO1xuICAgIGRlZmF1bHQ6XG5yZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59Il19