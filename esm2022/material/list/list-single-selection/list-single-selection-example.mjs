import { Component } from '@angular/core';
import { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';
import { MatListModule } from '@angular/material/list';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/list";
import * as i2 from "@angular/forms";
/**
 * @title List with single selection using Reactive Forms
 */
export class ListSingleSelectionExample {
    constructor() {
        this.shoes = [
            { value: 'boots', name: 'Boots' },
            { value: 'clogs', name: 'Clogs' },
            { value: 'loafers', name: 'Loafers' },
            { value: 'moccasins', name: 'Moccasins' },
            { value: 'sneakers', name: 'Sneakers' },
        ];
        this.shoesControl = new FormControl();
        this.form = new FormGroup({
            clothes: this.shoesControl,
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.0-next.2", ngImport: i0, type: ListSingleSelectionExample, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.0-next.2", type: ListSingleSelectionExample, isStandalone: true, selector: "list-single-selection-example", ngImport: i0, template: "<form [formGroup]=\"form\">\n  <mat-selection-list #shoesList [formControl]=\"shoesControl\" name=\"shoes\" [multiple]=\"false\">\n    @for (shoe of shoes; track shoe) {\n      <mat-list-option [value]=\"shoe.value\">{{shoe.name}}</mat-list-option>\n    }\n  </mat-selection-list>\n  <p>\n     Option selected: {{shoesControl.value ? shoesControl.value[0] : 'None'}} \n  </p>\n</form>", dependencies: [{ kind: "ngmodule", type: MatListModule }, { kind: "component", type: i1.MatSelectionList, selector: "mat-selection-list", inputs: ["color", "compareWith", "multiple", "hideSingleSelectionIndicator", "disabled"], outputs: ["selectionChange"], exportAs: ["matSelectionList"] }, { kind: "component", type: i1.MatListOption, selector: "mat-list-option", inputs: ["togglePosition", "checkboxPosition", "color", "value", "selected"], outputs: ["selectedChange"], exportAs: ["matListOption"] }, { kind: "ngmodule", type: FormsModule }, { kind: "directive", type: i2.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "ngmodule", type: ReactiveFormsModule }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i2.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.0-next.2", ngImport: i0, type: ListSingleSelectionExample, decorators: [{
            type: Component,
            args: [{ selector: 'list-single-selection-example', standalone: true, imports: [MatListModule, FormsModule, ReactiveFormsModule], template: "<form [formGroup]=\"form\">\n  <mat-selection-list #shoesList [formControl]=\"shoesControl\" name=\"shoes\" [multiple]=\"false\">\n    @for (shoe of shoes; track shoe) {\n      <mat-list-option [value]=\"shoe.value\">{{shoe.name}}</mat-list-option>\n    }\n  </mat-selection-list>\n  <p>\n     Option selected: {{shoesControl.value ? shoesControl.value[0] : 'None'}} \n  </p>\n</form>" }]
        }], ctorParameters: () => [] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy1leGFtcGxlcy9tYXRlcmlhbC9saXN0L2xpc3Qtc2luZ2xlLXNlbGVjdGlvbi9saXN0LXNpbmdsZS1zZWxlY3Rpb24tZXhhbXBsZS50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzLWV4YW1wbGVzL21hdGVyaWFsL2xpc3QvbGlzdC1zaW5nbGUtc2VsZWN0aW9uL2xpc3Qtc2luZ2xlLXNlbGVjdGlvbi1leGFtcGxlLmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QyxPQUFPLEVBQUMsV0FBVyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsbUJBQW1CLEVBQUMsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4RixPQUFPLEVBQUMsYUFBYSxFQUFDLE1BQU0sd0JBQXdCLENBQUM7Ozs7QUFLckQ7O0dBRUc7QUFPSCxNQUFNLE9BQU8sMEJBQTBCO0lBV3JDO1FBVEEsVUFBSyxHQUFZO1lBQ2YsRUFBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUM7WUFDL0IsRUFBQyxLQUFLLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUM7WUFDL0IsRUFBQyxLQUFLLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUM7WUFDbkMsRUFBQyxLQUFLLEVBQUUsV0FBVyxFQUFFLElBQUksRUFBRSxXQUFXLEVBQUM7WUFDdkMsRUFBQyxLQUFLLEVBQUUsVUFBVSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUM7U0FDdEMsQ0FBQztRQUNGLGlCQUFZLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztRQUcvQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksU0FBUyxDQUFDO1lBQ3hCLE9BQU8sRUFBRSxJQUFJLENBQUMsWUFBWTtTQUMzQixDQUFDLENBQUM7SUFDTCxDQUFDO3FIQWZVLDBCQUEwQjt5R0FBMUIsMEJBQTBCLHlGQ2hCdkMsa1lBU08sMkNES0ssYUFBYSw0ZEFBRSxXQUFXLDJZQUFFLG1CQUFtQjs7a0dBRTlDLDBCQUEwQjtrQkFOdEMsU0FBUzsrQkFDRSwrQkFBK0IsY0FFN0IsSUFBSSxXQUNQLENBQUMsYUFBYSxFQUFFLFdBQVcsRUFBRSxtQkFBbUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50fSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7Rm9ybUNvbnRyb2wsIEZvcm1Hcm91cCwgRm9ybXNNb2R1bGUsIFJlYWN0aXZlRm9ybXNNb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7TWF0TGlzdE1vZHVsZX0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvbGlzdCc7XG5pbnRlcmZhY2UgU2hvZXMge1xuICB2YWx1ZTogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG59XG4vKipcbiAqIEB0aXRsZSBMaXN0IHdpdGggc2luZ2xlIHNlbGVjdGlvbiB1c2luZyBSZWFjdGl2ZSBGb3Jtc1xuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdsaXN0LXNpbmdsZS1zZWxlY3Rpb24tZXhhbXBsZScsXG4gIHRlbXBsYXRlVXJsOiAnbGlzdC1zaW5nbGUtc2VsZWN0aW9uLWV4YW1wbGUuaHRtbCcsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtNYXRMaXN0TW9kdWxlLCBGb3Jtc01vZHVsZSwgUmVhY3RpdmVGb3Jtc01vZHVsZV0sXG59KVxuZXhwb3J0IGNsYXNzIExpc3RTaW5nbGVTZWxlY3Rpb25FeGFtcGxlIHtcbiAgZm9ybTogRm9ybUdyb3VwO1xuICBzaG9lczogU2hvZXNbXSA9IFtcbiAgICB7dmFsdWU6ICdib290cycsIG5hbWU6ICdCb290cyd9LFxuICAgIHt2YWx1ZTogJ2Nsb2dzJywgbmFtZTogJ0Nsb2dzJ30sXG4gICAge3ZhbHVlOiAnbG9hZmVycycsIG5hbWU6ICdMb2FmZXJzJ30sXG4gICAge3ZhbHVlOiAnbW9jY2FzaW5zJywgbmFtZTogJ01vY2Nhc2lucyd9LFxuICAgIHt2YWx1ZTogJ3NuZWFrZXJzJywgbmFtZTogJ1NuZWFrZXJzJ30sXG4gIF07XG4gIHNob2VzQ29udHJvbCA9IG5ldyBGb3JtQ29udHJvbCgpO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZm9ybSA9IG5ldyBGb3JtR3JvdXAoe1xuICAgICAgY2xvdGhlczogdGhpcy5zaG9lc0NvbnRyb2wsXG4gICAgfSk7XG4gIH1cbn1cbiIsIjxmb3JtIFtmb3JtR3JvdXBdPVwiZm9ybVwiPlxuICA8bWF0LXNlbGVjdGlvbi1saXN0ICNzaG9lc0xpc3QgW2Zvcm1Db250cm9sXT1cInNob2VzQ29udHJvbFwiIG5hbWU9XCJzaG9lc1wiIFttdWx0aXBsZV09XCJmYWxzZVwiPlxuICAgIEBmb3IgKHNob2Ugb2Ygc2hvZXM7IHRyYWNrIHNob2UpIHtcbiAgICAgIDxtYXQtbGlzdC1vcHRpb24gW3ZhbHVlXT1cInNob2UudmFsdWVcIj57e3Nob2UubmFtZX19PC9tYXQtbGlzdC1vcHRpb24+XG4gICAgfVxuICA8L21hdC1zZWxlY3Rpb24tbGlzdD5cbiAgPHA+XG4gICAgIE9wdGlvbiBzZWxlY3RlZDoge3tzaG9lc0NvbnRyb2wudmFsdWUgPyBzaG9lc0NvbnRyb2wudmFsdWVbMF0gOiAnTm9uZSd9fSBcbiAgPC9wPlxuPC9mb3JtPiJdfQ==